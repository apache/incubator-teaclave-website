"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[5910],{2507:e=>{e.exports=JSON.parse('{"permalink":"/blog/2020/10/22/announcing-teaclave-0.1.0","source":"@site/blog/2020-10-22-announcing-teaclave-0.1.0.md","title":"Announcing Apache Teaclave\u2122 (incubating) 0.1.0","description":"English | \u4e2d\u6587","date":"2020-10-22T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Announcing Apache Teaclave\u2122 (incubating) 0.1.0","date":"2020-10-22T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"\u8ba9\u5b89\u5168\u8ba1\u7b97\u66f4\u7b80\u5355 - Apache Teaclave\u2122 (incubating) 0.1.0 \u6b63\u5f0f\u53d1\u5e03","permalink":"/blog/2020/10/29/announcing-teaclave-0.1.0-cn"},"nextItem":{"title":"Mitigation of Intel-SA-00219 in Teaclave SGX SDK","permalink":"/blog/2019/12/03/mitigation-of-intel-sa-00219-in-teaclave-sgx-sdk"}}')},2682:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/teaclave-architecture-35948ede352754cf671e3a47c74e6768.png"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(6540);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},9668:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var i=t(2507),a=t(4848),s=t(8453);const r={title:"Announcing Apache Teaclave\u2122 (incubating) 0.1.0",date:new Date("2020-10-22T00:00:00.000Z"),author:"Mingshen Sun",slug:void 0},o=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Project highlights",id:"project-highlights",level:2},{value:"Changes since entering Apache Incubator",id:"changes-since-entering-apache-incubator",level:2},{value:"Download",id:"download",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Community",id:"community",level:2},{value:"Thanks",id:"thanks",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/blog/2020/10/21/announcing-teaclave-0-1-0/",children:"English"})," | ",(0,a.jsx)(n.a,{href:"/blog/2020/10/28/announcing-teaclave-0-1-0-cn/",children:"\u4e2d\u6587"})]}),"\n",(0,a.jsxs)(n.p,{children:["On behalf of the Teaclave community, I am happy to announce the ",(0,a.jsx)(n.em,{children:"first"})," Apache\nIncubator release of Teaclave, 0.1.0. Teaclave is a universal secure computing\nplatform, making computation on privacy-sensitive data safe and simple."]}),"\n",(0,a.jsx)(n.p,{children:"The 0.1.0 release marks an important milestone for the Teaclave community. This\nis the first public release of the Teaclave platform. Moreover, this is the\nfirst official release since we entered Apache Incubator on August 19, 2019."}),"\n",(0,a.jsx)(n.h2,{id:"project-highlights",children:"Project highlights"}),"\n",(0,a.jsx)(n.p,{children:"Since this is our first public release, I still want to emphasize the highlights\nof the Teaclave project."}),"\n",(0,a.jsx)(n.p,{children:"Apache Teaclave\u2122 (incubating) has following highlights:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Security"}),": Teaclave adopts multiple security technologies to enable secure\ncomputing. In particular, Teaclave uses Intel SGX to serve the most\nsecurity-sensitive tasks with ",(0,a.jsx)(n.em,{children:"hardware-based isolation"}),", ",(0,a.jsx)(n.em,{children:"memory encryption"}),",\nand ",(0,a.jsx)(n.em,{children:"attestation"}),". Also, Teaclave is written in Rust to prevent\n",(0,a.jsx)(n.em,{children:"memory-safety"})," issues."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Functionality"}),": Teaclave is provided as a ",(0,a.jsx)(n.em,{children:"function-as-a-service platform"}),".\nWith many built-in functions, it supports tasks like machine learning, private\nset intersection, crypto computation, etc. In addition, developers can also\ndeploy and execute Python scripts in Teaclave. More importantly, unlike\ntraditional FaaS, Teaclave supports both general secure computing tasks and\n",(0,a.jsx)(n.em,{children:"flexible single- and multi-party computation"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Usability"}),": Teaclave builds its components in containers, therefore, it\nsupports deployment both locally and within cloud infrastructures. Teaclave\nalso provides convenient endpoint APIs, client SDKs, and command-line tools."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Modularity"}),": Components in Teaclave are designed in modular, and some components\nlike remote attestation can be easily embedded in other projects. In addition,\nTeaclave SGX SDK can also be used separately to write standalone SGX enclaves\nfor other purposes."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Teaclave Architecture",src:t(2682).A+"",width:"2358",height:"952"})}),"\n",(0,a.jsx)(n.h2,{id:"changes-since-entering-apache-incubator",children:"Changes since entering Apache Incubator"}),"\n",(0,a.jsx)(n.p,{children:"Since we entered Apache Incubator, we started an ambitious task of refactoring\nand improving the project in many perspectives. These include:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Supporting function and data registration.\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"input data of a function can be fetched from external storage"}),"\n",(0,a.jsx)(n.li,{children:"reuse registered function in new tasks"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Redesigning function development workflow.\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"developers only need to write python script with native libraries written in Rust"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Providing persistent database implementation.\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"port rusty-leveldb to SGX enclave using protected FS to secure file I/O"}),"\n",(0,a.jsx)(n.li,{children:'add dedicated database service called "storage service" for data persistency'}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Supporting protobuf compatible RPC protocol.\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["refactor existing service protocol with ",(0,a.jsx)(n.code,{children:".proto"})," files"]}),"\n",(0,a.jsx)(n.li,{children:"redesign PRC protocol with remote attestation"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Supporting distributed workers.\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"support docker deployment"}),"\n",(0,a.jsx)(n.li,{children:"decouple services into different containers"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Supporting customized workers.\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"service provider can deploy with other kinds of customized workers besides builtin worker"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Providing better documentation."}),"\n",(0,a.jsxs)(n.li,{children:["Providing better error handling.\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"errors can be propagated through RPC"}),"\n",(0,a.jsx)(n.li,{children:"better error triage"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Testsuite cleanup/refactoring."}),"\n",(0,a.jsx)(n.li,{children:"Implementing more built-in functions: we have nine built-in functions, including\necho, face detection, gbdt predict/train, logistic regression predict/train,\nonline decrypt, ordered set intersect, private join and compute, and RSA sign."}),"\n",(0,a.jsx)(n.li,{children:"Supporting more flexible attestation mechanisms (DCAP): providing a reference\nimplementation of DCAP attestation service and supporting DCAP in our\nattestation library and build system as well."}),"\n",(0,a.jsxs)(n.li,{children:["RPC enhancement.\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"multi-language client"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Many other changes."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"These changes include 876 files changed, 78,237 insertions, and 54,846 deletions.\nWe have also closed 102 issues on GitHub to answer questions from the community\nand implementing feature requests."}),"\n",(0,a.jsx)(n.h2,{id:"download",children:"Download"}),"\n",(0,a.jsxs)(n.p,{children:["Teaclave 0.1.0 can be downloaded at ",(0,a.jsx)(n.a,{href:"/download/",children:"the download page"}),". Note that\nit is essential to verify the integrity of the downloaded file using the\nPGP signature (.asc file) or a hash (.md5 or .sha* file)."]}),"\n",(0,a.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,a.jsxs)(n.p,{children:["If it is the first time to try Teaclave, we provide a simple but clear tutorial\nto guide you getting stated with Teaclave by invoking\n",(0,a.jsx)(n.a,{href:"/docs/my-first-function/",children:"your first function"})," in Teaclave."]}),"\n",(0,a.jsx)(n.p,{children:"Basically, you can build the Teaclave platform using docker with these commands:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ cd incubator-teaclave\n$ docker run --rm -v $(pwd):/teaclave -w /teaclave \\\n  -it teaclave/teaclave-build-ubuntu-1804-sgx-2.9.1:latest \\\n   bash -c ". /root/.cargo/env && \\\n     . /opt/sgxsdk/environment && \\\n     mkdir -p build && cd build && \\\n     cmake -DTEST_MODE=ON .. && \\\n     make"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Launch all services with ",(0,a.jsx)(n.code,{children:"docker-compose"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ (cd docker && docker-compose -f docker-compose-ubuntu-1804.yml up --build)\n"})}),"\n",(0,a.jsx)(n.p,{children:"And invoke function with a Python client:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ cd examples/python\n$ PYTHONPATH=../../sdk/python python3 builtin_echo.py 'Hello, Teaclave!'\n[+] registering user\n[+] login\n[+] registering function\n[+] creating task\n[+] approving task\n[+] invoking task\n[+] getting result\n[+] done\n[+] function return:  b'Hello, Teaclave!'\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If you want to understand the internals of Teaclave, we provide several\ndocuments about the ",(0,a.jsx)(n.a,{href:"/docs/#design",children:"design"})," of Teaclave. Also, we extensively\ndocument our ",(0,a.jsx)(n.a,{href:"docs/#codebase",children:"codebase"})," in each sub directories. At last, ",(0,a.jsx)(n.a,{href:"docs/#api-references",children:"API references"}),"\nare automatically generated and uploaded to our homepage."]}),"\n",(0,a.jsx)(n.h2,{id:"community",children:"Community"}),"\n",(0,a.jsxs)(n.p,{children:["Along our road to the first public release, we also see the growth of the\ncommunity who started to follow the project and using in their products. We have\nseen at least four ",(0,a.jsx)(n.a,{href:"community/#organizations",children:"organizations"})," using Teaclave in\ntheir products, and more than nine open source ",(0,a.jsx)(n.a,{href:"community/#projects",children:"projects"}),"\nbuilding on top of Teaclave platform or Teaclave SGX SDK."]}),"\n",(0,a.jsxs)(n.p,{children:["We build several channels to communicate with the community including GitHub issues,\n",(0,a.jsx)(n.a,{href:"https://lists.apache.org/list.html?dev@teaclave.apache.org",children:"mailing lists"}),", and\nTwitter account (",(0,a.jsx)(n.a,{href:"https://twitter.com/ApacheTeaclave",children:"@ApacheTeaclave"}),")."]}),"\n",(0,a.jsxs)(n.p,{children:["We also attended ApacheCon this year to introduce Teaclave to the Apache community.\nIf you missed the talk, please find the slides and other materials of talks,\npapers, and related articles at ",(0,a.jsx)(n.a,{href:"/docs/papers-talks/",children:"this page"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"thanks",children:"Thanks"}),"\n",(0,a.jsxs)(n.p,{children:["I'd like to thank all ",(0,a.jsx)(n.a,{href:"/contributors/",children:"contributors"})," to build this community.\nThanks to our project ",(0,a.jsx)(n.a,{href:"/contributors/#mentors",children:"mentors"}),", who help us to\nunderstand the Apache way of open source. Furthermore,\nthanks to all ",(0,a.jsx)(n.a,{href:"/contributors/#committers",children:"PPMC members and committers"}),"\nfor governing and expanding the community, organizing meetups, discussing\nroadmap, designing components, writing documents, contributing code, and\nadvertising the project. Moreover, thanks to all ",(0,a.jsx)(n.a,{href:"/contributors/#contributors-2",children:"external contributors"}),"\nwho send pull requests to fix bugs\nand implementing features. In addition, I'd like to thank people who tries\nTeaclave themselves, files bugs or feature requests. This also helps us to\nunderstand the project and figure out where we can improve.\nFinally, I'd like to thank companies who use Teaclave and contribute back to\nthe community."]}),"\n",(0,a.jsx)(n.p,{children:"At last, 0.1.0 is just the start of Teaclave. We will continue working hard with\nthe community implementing new features, writing documents, and expanding the\ncommunity."}),"\n",(0,a.jsx)(n.p,{children:"Happy Teaclaving. Cheers!"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);