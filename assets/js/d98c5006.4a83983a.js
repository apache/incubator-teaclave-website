"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[7572],{1184:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var o=n(4041);const c={},r=o.createContext(c);function i(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),o.createElement(r.Provider,{value:t},e.children)}},8014:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"teaclave/executor/README","title":"Function Executors","description":"Function executor is one of the core component in a FaaS platform to provide","source":"@site/docs/teaclave/executor/README.md","sourceDirName":"teaclave/executor","slug":"/docs/codebase/executor","permalink":"/docs/codebase/executor","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"permalink":"/docs/codebase/executor","slug":"/docs/codebase/executor"},"sidebar":"teaclave_sidebar","previous":{"title":"File Agent","permalink":"/docs/codebase/file-agent"},"next":{"title":"Logger","permalink":"/docs/codebase/logger"}}');var c=n(1085),r=n(1184);const i={permalink:"/docs/codebase/executor",slug:"/docs/codebase/executor"},s="Function Executors",a={},u=[];function l(e){const t={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"function-executors",children:"Function Executors"})}),"\n",(0,c.jsx)(t.p,{children:"Function executor is one of the core component in a FaaS platform to provide\nexecution runtime for running user-defined functions. In Teaclave, we aim to\nprovide safe, secure and versatile function executors, which can guarantee the\nconfidentiality of security-sensitive data during computation, and also support\nfunctions written in different languages. In addition, we are working hard to\nachieve better security guarantees such as memory safety."}),"\n",(0,c.jsx)(t.p,{children:"In Teaclave, there are three executors to native, Python, and WebAssembly functions."}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Builtin Executor"}),": There are many useful built-in functions which are statically\ncompiled with Teaclave. Normally, these built-in functions are implemented in\nRust, and can provide better (native) performance. The Builtin executor is to\ndispatch function invocation requests to corresponding built-in function\nimplementations."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"MesaPy Executor"}),": The MesaPy executor provides a Python interpreter in SGX.\nUser-defined Python functions can be executed in the MesaPy executor. The\nexecutor also provides interfaces to fetch and store data through the runtime."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"WAMR Executor"}),": WebAssembly Micro Runtime (WAMR) is integrated into\nTeaclave to provide a interpreter for WebAssembly bytecode. Please refer to\nthe ",(0,c.jsx)(t.a,{href:"/docs/executing-wasm",children:"WebAssembly Executor Document"})," for more\ndetails on its usage."]}),"\n"]}),"\n",(0,c.jsxs)(t.p,{children:["To add a new executor, you can implement the ",(0,c.jsx)(t.code,{children:"TeaclaveExecutor"})," trait (basically\nimplement the ",(0,c.jsx)(t.code,{children:"execute"})," function). Then, register the executor in the Teaclave\nworker. At last, the execution service will dispatch functions to the specific\nexecutor."]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}}}]);