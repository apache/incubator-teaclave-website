"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[3215],{1184:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(4041);const d={},i=t.createContext(d);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},4098:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>a,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"teaclave-sgx-sdk/documents/setup-gdb-7.11-on-ubuntu-18.04-for-vscode---sgx-gdb-remote-debugging","title":"setup-gdb-7.11-on-ubuntu-18.04-for-vscode---sgx-gdb-remote-debugging","description":"This instruction is provided by @akoskinas. Thanks!","source":"@site/docs/teaclave-sgx-sdk/documents/setup-gdb-7.11-on-ubuntu-18.04-for-vscode---sgx-gdb-remote-debugging.md","sourceDirName":"teaclave-sgx-sdk/documents","slug":"/sgx-sdk-docs/setup-gdb-ubuntu18","permalink":"/sgx-sdk-docs/setup-gdb-ubuntu18","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"permalink":"/sgx-sdk-docs/setup-gdb-ubuntu18","slug":"/sgx-sdk-docs/setup-gdb-ubuntu18"}}');var d=s(1085),i=s(1184);const o={permalink:"/sgx-sdk-docs/setup-gdb-ubuntu18",slug:"/sgx-sdk-docs/setup-gdb-ubuntu18"},r=void 0,l={},c=[];function u(e){const n={a:"a",code:"code",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.p,{children:"This instruction is provided by @akoskinas. Thanks!\nThis is an updated version of the process, which contains bug fixes and additional comments."}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.p,{children:"Before start: In our setup, the debugging works only when building in simulation mode, i.e"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"cd rust-sgx-sdk/samplecode/hello-rust-vscode-debug/\nSGX_MODE=SW SGX_DEBUG=1 make\ncd bin\nsgx-gdb ./app\n"})}),"\n",(0,d.jsx)(n.p,{children:"A short description of the process needed in order to use GDB to remotely debug a Rust SGX enclave with sgx gdb in Ubuntu 18.04:"}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:["Make sure that the package libsgx-enclave-common-dbgsym_${version}-${revision}_amd64.ddeb is installed, as described here: ",(0,d.jsx)(n.a,{href:"https://github.com/intel/linux-sgx#build-the-intelr-sgx-psw-installer",children:"https://github.com/intel/linux-sgx#build-the-intelr-sgx-psw-installer"})," . The  package can also be found here: ",(0,d.jsx)(n.a,{href:"https://download.01.org/intel-sgx/linux-2.5/ubuntu18.04-server/",children:"https://download.01.org/intel-sgx/linux-2.5/ubuntu18.04-server/"})]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:"Make sure to set up the needed environment variables before compiling your code. To do so, run:"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"  $ source ${sgx-sdk-install-path}/environment  \n"})}),"\n",(0,d.jsxs)(n.ol,{start:"3",children:["\n",(0,d.jsxs)(n.li,{children:["As documented ",(0,d.jsx)(n.a,{href:"/sgx-sdk-docs/debugging-a-local-rust-sgx-enclave",children:"here"})," , an older version of GDB debugger has to be utilized for debugging.  The steps to use gdb-7.11.1 are"]}),"\n"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"get the source code of version 7.11.1 :"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:'wget "http://ftp.gnu.org/gnu/gdb/gdb-7.11.1.tar.gz"\n'})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"extract"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"tar -xvzf gdb-7.11.1.tar.gz\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"install the python development headers, needed to configure the GDB python interpreter:"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sudo apt-get install python3-dev\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:'configure the build: because python scripts will be given as input to the GDB, a python interpreter has to be configured at this step. To do so the option "with-python" shall be used, followed by the path to the desired python version'}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"cd gdb-7.11.1\n./configure --with-python=/usr/bin/python3\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"build: in order for building to complete the following changes are required to solve a type conflict - building takes ~3mins :"}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:'In file: gdb/amd64-linux-nat.c:248 --\x3e delete word "const"\nin file: gdb/gdbserver/linux-x86-low.c:239:1 --\x3e delete word "const"'}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"make\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Two options are available to complete installation:"}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"If GDB 7.11.1 is desired to be located in /usr/bin/gdb then execute:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"sudo make install\n"})}),"\n",(0,d.jsx)(n.p,{children:"If GDB 7.11.1 is desired to be located in a different location, two symbolic links are needed. In our case,  we chose to place gdb-7.11.1 folder under /opt directory. In that case the respective commands will look like the following:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:" sudo ln -sf /opt/gdb-7.11.1/gdb/gdb /usr/bin/gdb\n cd /usr/local/share\n # if gdb dir doesn't exist, create it : mkdir -p gdb\n cd gdb\n # if python dir doesn't exist, create it: mkdir -p python\n cd python\n sudo ln -s /opt/gdb-7.11.1/gdb/data-directory/python/gdb/ /usr/local/share/gdb/python/\n"})}),"\n",(0,d.jsxs)(n.ol,{start:"4",children:["\n",(0,d.jsx)(n.li,{children:"Up until this point, local debugging should be successful. The final step is to use VS Code, by following the steps described [here](use-vscode---rls---rust-analysis---sgx-gdb-for-graphic-developing-(not-in-docker)."}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(u,{...e})}):u(e)}}}]);