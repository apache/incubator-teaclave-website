"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[6684],{2746:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var i=t(5635),a=t(4848),s=t(8453);const l={title:"Security Advisory of SmashEx and CVE-2021-0186",date:new Date("2021-10-25T00:00:00.000Z"),author:"Mingshen Sun",slug:void 0},r=void 0,c={authorsImageUrls:[void 0]},o=[{value:"Overview",id:"overview",level:2},{value:"Affected Versions",id:"affected-versions",level:2},{value:"Impacts on Teaclave",id:"impacts-on-teaclave",level:2},{value:"Patches &amp; Mitigations",id:"patches--mitigations",level:2},{value:"Acknowledgements",id:"acknowledgements",level:2},{value:"References",id:"references",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Recently, we were notified of a re-entrancy vulnerability in the exception\nhandling designs of some popular SGX SDKs (including Intel SGX SDK), resulting in\narbitrary disclosure of enclave private memory and code-reuse attacks in SGX\nenclave."}),"\n",(0,a.jsxs)(n.p,{children:["The vulnerability is named as ",(0,a.jsx)(n.a,{href:"https://jasonyu1996.github.io/SmashEx/",children:"SmashEx"}),"\n[1]. The SmashEx attack affects several SGX runtimes with exception handling.\nFor Intel SGX SDK, the assigned identifier is\n",(0,a.jsx)(n.a,{href:"https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00548.html",children:"CVE-2021-0186"})," [2].\nWhile the vulnerability itself is not a Teaclave flaw, we're taking proactive\nmeasures to explain and mitigate its impact on Teaclave users."]}),"\n",(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.p,{children:"Due to the lack of atomicity primitives in SGX enclaves, an SGX enclave can be\ninterrupted and re-entered at any time, including when it is in a state unsafe\nfor re-entry (i.e., when it is executing a critical section). The SmashEx attack\nexploits such unsafe enclave re-entries happening in the exception handling\nmechanism in the SGX runtime."}),"\n",(0,a.jsxs)(n.p,{children:["A malicious host can create an exception immediately after EENTER which causes\ncontrol to be transferred to the host before the enclave stack (RSP register)\nhas been properly set up. Then, a special ECALL (called ",(0,a.jsx)(n.code,{children:"ECMD_EXCEPT"}),") to\nenclave will use the attacker-controlled RSP register to setup the context of\nthe exception handler function. At last, when the host transfers control back to the\nenclave with ERESUME, it may execute with a stack that resides in host memory\nthereby enabling ROP exploits."]}),"\n",(0,a.jsx)(n.p,{children:"This vulnerability can be fixed by adding extra checks on untrusted RSP when\nconstructing the context of the exception handler."}),"\n",(0,a.jsx)(n.h2,{id:"affected-versions",children:"Affected Versions"}),"\n",(0,a.jsx)(n.p,{children:"For Intel SGX SDK, the vulnerability affects all projects using the following\nversions."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Intel SGX SDK for Windows v2.12 and erlier"}),"\n",(0,a.jsx)(n.li,{children:"Intel SGX SDK for Linux v2.13 and earlier"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"impacts-on-teaclave",children:"Impacts on Teaclave"}),"\n",(0,a.jsxs)(n.p,{children:["Teaclave SGX SDK wraps Intel SGX SDK and provides a Rust development\nenvironment. The affected Intel SGX SDK version was recommended in Rust SGX SDK\nv1.1.3 (which is a pre-Apache release). Therefore, people using Rust SGX SDK\nv1.1.3 with the vulnerable Intel SGX SDK (v2.13 and earlier) are also\nvulnerable. ",(0,a.jsx)(n.em,{children:"However, the current Teaclave SGX SDK is compatible with newer Intel SGX\nSDK versions. Therefore, we recommend all users to upgrade to the latest Intel\nSGX SDK."})]}),"\n",(0,a.jsxs)(n.p,{children:["For Teaclave (i.e., the Teaclave FaaS platform), it uses Teaclave SGX SDK to\nbuild a confidential computing platform. Therefore, the Teaclave v0.2.0 released\nin March used the vulnerable Intel SGX SDK version.\n",(0,a.jsxs)(n.em,{children:["However, the ",(0,a.jsx)(n.a,{href:"https://github.com/apache/incubator-teaclave/releases/tag/v0.3.0",children:"v0.3.0 released"})," [3]\nin August has upgraded the Intel SGX SDK to v2.14 with the fix. Therefore,\nthe latest release of Teaclave is not affected by this vulnerability."]})]}),"\n",(0,a.jsx)(n.h2,{id:"patches--mitigations",children:"Patches & Mitigations"}),"\n",(0,a.jsx)(n.p,{children:"The vulnerability has been fixed in Intel SGX SDK in this patch:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Patch: ",(0,a.jsx)(n.a,{href:"https://github.com/intel/linux-sgx/commit/edfe42a517b3e4b1d81204c3cdef6da6cb35fefc",children:"https://github.com/intel/linux-sgx/commit/edfe42a517b3e4b1d81204c3cdef6da6cb35fefc"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Teaclave users can apply the following mitigations:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Use Teacalve SGX SDK with Intel SGX SDK for Linux version 2.14 or later"}),"\n",(0,a.jsx)(n.li,{children:"Upgrade to Teaclave 0.3.0 or later"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"acknowledgements",children:"Acknowledgements"}),"\n",(0,a.jsx)(n.p,{children:"We would like to thank Jinhua Cui, National University of Defense Technology and\nNational University of Singapore, Shweta Shinde, ETH Zurich , Zhijingcheng Yu,\nNational University of Singapore, and Prateek Saxena, National University of\nSingapore for notifying us about this issue."}),"\n",(0,a.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["[1] ",(0,a.jsx)(n.a,{href:"https://jasonyu1996.github.io/SmashEx/",children:"https://jasonyu1996.github.io/SmashEx/"})]}),"\n",(0,a.jsxs)(n.li,{children:["[2] ",(0,a.jsx)(n.a,{href:"https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00548.html",children:"https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00548.html"})]}),"\n",(0,a.jsxs)(n.li,{children:["[3] ",(0,a.jsx)(n.a,{href:"https://github.com/apache/incubator-teaclave/releases/tag/v0.3.0",children:"https://github.com/apache/incubator-teaclave/releases/tag/v0.3.0"})]}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://arxiv.org/abs/2110.06657",children:"SmashEx: Smashing SGX Enclaves Using Exceptions"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/openenclave/openenclave/security/advisories/GHSA-mj87-466f-jq42",children:"Open Enclave SDK Elevation of Privilege Vulnerability"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},5635:e=>{e.exports=JSON.parse('{"permalink":"/blog/2021/11/01/security-advisory-of-smashex-and-cve-2021-0186","source":"@site/blog/2021-11-01-security-advisory-of-smashex-and-cve-2021-0186.md","title":"Security Advisory of SmashEx and CVE-2021-0186","description":"Recently, we were notified of a re-entrancy vulnerability in the exception","date":"2021-10-25T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Security Advisory of SmashEx and CVE-2021-0186","date":"2021-10-25T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #9","permalink":"/blog/2021/11/30/teaclave-meetup-9"},"nextItem":{"title":"\u4f7f\u7528 Teaclave TrustZone SDK \u5f00\u53d1 TrustZone \u5e94\u7528","permalink":"/blog/2021/10/15/developing-teaclave-application-with-teaclave-trustzone-sdk"}}')},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var i=t(6540);const a={},s=i.createContext(a);function l(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);