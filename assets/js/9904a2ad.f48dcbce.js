"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[9179],{189:e=>{e.exports=JSON.parse('{"permalink":"/blog/2021/03/15/welcome-rust-optee-trustzone-sdk","source":"@site/blog/2021-03-15-welcome-rust-optee-trustzone-sdk.md","title":"Welcome Rust OP-TEE TrustZone SDK to Teaclave","description":"English | \u4e2d\u6587","date":"2021-03-15T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Welcome Rust OP-TEE TrustZone SDK to Teaclave","date":"2021-03-15T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"\u6b22\u8fce Rust OP-TEE TrustZone SDK \u6210\u4e3a Teaclave \u5b50\u9879\u76ee","permalink":"/blog/2021/03/15/welcome-rust-optee-trustzone-sdk-cn"},"nextItem":{"title":"Apache Teaclave (incubating) 0.2.0 \u53d1\u5e03","permalink":"/blog/2021/03/02/announcing-teaclave-0.2.0-cn"}}')},219:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/teaclave-trustzone-sdk-paper-d90c44dad9dafb1a32ce44ca4359cad8.png"},1170:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/teaclave-trustzone-sdk-macros-ca78ab7fc499178c82f7aba8313a0bc4.png"},1184:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var s=n(4041);const a={},o=s.createContext(a);function i(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:t},e.children)}},3019:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/teaclave-trustzone-sdk-design-3a92bad18ebae1bcdc27ce5ffb01c3cf.png"},3548:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/teaclave-trustzone-sdk-timeline-0b34501442257a92e59b89372e93f32b.png"},7256:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var s=n(189),a=n(1085),o=n(1184);const i={title:"Welcome Rust OP-TEE TrustZone SDK to Teaclave",date:new Date("2021-03-15T00:00:00.000Z"),author:"Mingshen Sun",slug:void 0},r=void 0,c={authorsImageUrls:[void 0]},l=[{value:"Design and Implementation of Teaclave TrustZone SDK",id:"design-and-implementation-of-teaclave-trustzone-sdk",level:2},{value:"Getting Started and Documentations",id:"getting-started-and-documentations",level:2},{value:"Teaclave TrustZone SDK Timeline",id:"teaclave-trustzone-sdk-timeline",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"/blog/2021-03-14-welcome-rust-optee-trustzone-sdk",children:"English"})," | ",(0,a.jsx)(t.a,{href:"/blog/2021-03-14-welcome-rust-optee-trustzone-sdk-cn",children:"\u4e2d\u6587"})]}),"\n",(0,a.jsx)(t.p,{children:"TrustZone is a security feature by ARM SoC to provide a trusted execution\nenvironment to protect areas like mobile computing, edge computing, and\nemerging confidential computing, supporting scenarios like payments, key\nmanagement, model protection, etc. However, one major security threat in\nTrustZone applications is the memory safety issue. For instance, a\nvulnerability of Qualcomm's QSEE is caused by the memory safety issue [1].\nAttackers can even get the full-disk encryption key by exploiting such kind of\nvulnerability [2]."}),"\n",(0,a.jsx)(t.p,{children:"In 2019, Baidu open sourced the Rust OP-TEE TrustZone SDK project, enabling\nsafe, functional, and ergonomic development of TrustZone app developments.\nThe SDK provides a safer APIs based on the GlobalPlatform's TEE standard.\nIn addition, Rust OP-TEE TrustZone SDK also support Rust's standard library and\nthird-party crates (i.e., libraries). This will improve the efficiency of\ndevelopments of TrustZone apps, and also extend its usage scenarios."}),"\n",(0,a.jsxs)(t.p,{children:["To accelerate the development of confidential computing ecosystem and improve\nTrustZone's foundation, Baidu has donated Rust OP-TEE TrustZone SDK to Apache Software\nFoundation as a subproject of Teaclave, and renamed it as Teaclave TrustZone SDK.\nThe location of new repository is\n",(0,a.jsx)(t.a,{href:"https://github.com/apache/incubator-teaclave-trustzone-sdk",children:"https://github.com/apache/incubator-teaclave-trustzone-sdk"}),".\nSimilar to Teaclave SGX SDK, Teaclave TrustZone SDK will be the foundation of\nTeaclave FaaS platform to support multiple trusted execution environments."]}),"\n",(0,a.jsx)(t.h2,{id:"design-and-implementation-of-teaclave-trustzone-sdk",children:"Design and Implementation of Teaclave TrustZone SDK"}),"\n",(0,a.jsx)(t.p,{children:"Based on the GlobalPlatform's C APIs, Teaclave TrustZone SDK provides safer Rust interfaces.\nWith the SDK, TrustZone apps will not be affected by any memory safety issues\ncaused by the Rust's strong type system."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Teaclave TrustZone SDK Design",src:n(3019).A+"",width:"2030",height:"954"})}),"\n",(0,a.jsxs)(t.p,{children:["We also created procedure macros to help developments. For example, developers\ncan simply put\n",(0,a.jsx)(t.code,{children:"#[ta_create]"}),", ",(0,a.jsx)(t.code,{children:"#[ta_open_session]"}),", ",(0,a.jsx)(t.code,{children:"#[ta_close_session]"}),", ",(0,a.jsx)(t.code,{children:"#[ta_destory]"}),",\nand ",(0,a.jsx)(t.code,{children:"#[ta_invoke_command]"})," annotations before corresponding functions. These\nannotations will automatically generate helper functions to bridge the normal/secure worlds."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Teaclave TrustZone SDK Macros",src:n(1170).A+"",width:"2158",height:"1530"})}),"\n",(0,a.jsx)(t.p,{children:"By using the rich type system of Rust, the memory safety issues will be reported\nat compile time. For example, in the following case, compared to C's APIs, the\nRust APIs have clearer semantics and more strict type checking."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Teaclave TrustZone SDK APIs",src:n(9882).A+"",width:"2204",height:"1364"})}),"\n",(0,a.jsxs)(t.p,{children:["The project also has 13 samples, including encryption/decryption, secure storage, HOTP, etc.\nAlso, we provide a message passing sample code by using ",(0,a.jsx)(t.code,{children:"serde"})," for\nserialization and de-serialization between different worlds to avoid any\nsecurity issues caused by improper design in boundaries."]}),"\n",(0,a.jsx)(t.h2,{id:"getting-started-and-documentations",children:"Getting Started and Documentations"}),"\n",(0,a.jsxs)(t.p,{children:["All APIs in Teaclave TrustZone SDK are well documented. In the project's Wiki\npage, we have ",(0,a.jsx)(t.a,{href:"https://github.com/apache/incubator-teaclave-trustzone-sdk/wiki/Getting-started-with-OPTEE-for-QEMU-ARMv8",children:"a quick-start document"}),"\nto guide you compiling and running a TrustZone app in QEMU emulators.\nYou can find more design and performance evaluation in our paper published in ACSAC 2020."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Teaclave TrustZone Paper",src:n(219).A+"",width:"1902",height:"1332"})}),"\n",(0,a.jsx)(t.h2,{id:"teaclave-trustzone-sdk-timeline",children:"Teaclave TrustZone SDK Timeline"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"2019: Open source."}),"\n",(0,a.jsx)(t.li,{children:"2019: Talks in Linaro Connect and RustCon Asia."}),"\n",(0,a.jsx)(t.li,{children:"2020: Technical report published in ACSAC 2020."}),"\n",(0,a.jsxs)(t.li,{children:["2020: Many open source projects started to use the SDK. E.g., ",(0,a.jsx)(t.a,{href:"https://github.com/veracruz-project/veracruz",children:"Veracruz by ARM Research"}),"\nis an experimental projects on confidential computing using the SDK."]}),"\n",(0,a.jsx)(t.li,{children:"Feb 2021: Support OP-TEE 3.11 and 3.12."}),"\n",(0,a.jsx)(t.li,{children:"Feb 2021: Initial the donation procedure."}),"\n",(0,a.jsx)(t.li,{children:"Mar 2021: Officially transferred to Teaclave."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Teacalve TrustZone SDK Timeline",src:n(3548).A+"",width:"2434",height:"806"})}),"\n",(0,a.jsx)(t.p,{children:"References:"}),"\n",(0,a.jsxs)(t.p,{children:["[1] Qualcomm's Secure Execution Environment (QSEE) privilege escalation\nvulnerability and exploit (CVE-2015-6639) :\n",(0,a.jsx)(t.a,{href:"http://bits-please.blogspot.com/2016/05/qsee-privilege-escalation-vulnerability.html",children:"http://bits-please.blogspot.com/2016/05/qsee-privilege-escalation-vulnerability.html"})]}),"\n",(0,a.jsxs)(t.p,{children:["[2] Extracting Qualcomm's KeyMaster Keys - Breaking Android Full Disk\nEncryption:\n",(0,a.jsx)(t.a,{href:"http://bits-please.blogspot.com/2016/06/extracting-qualcomms-keymaster-keys.html",children:"http://bits-please.blogspot.com/2016/06/extracting-qualcomms-keymaster-keys.html"})]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},9882:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/teaclave-trustzone-sdk-apis-151d6d694e0305ffe603015e158c1e57.png"}}]);