"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[3451],{1769:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>r});const a=JSON.parse('{"id":"teaclave-faas-legacy/docs/azure-confidential-computing","title":"Deploying Teaclave on Azure Confidential Computing Virtual Machines","description":"If you want to try Teaclave on an Intel-SGX enabled machine instead of in simulation mode,","source":"@site/docs/teaclave-faas-legacy/docs/azure-confidential-computing.md","sourceDirName":"teaclave-faas-legacy/docs","slug":"/docs/azure-confidential-computing","permalink":"/docs/azure-confidential-computing","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"permalink":"/docs/azure-confidential-computing","slug":"/docs/azure-confidential-computing"},"sidebar":"teaclave-faas-legacy_sidebar","previous":{"title":"How to Add Built-in Functions","permalink":"/docs/builtin-functions"},"next":{"title":"Executing WebAssembly in Teaclave","permalink":"/docs/executing-wasm"}}');var o=t(4848),i=t(8453);const s={permalink:"/docs/azure-confidential-computing",slug:"/docs/azure-confidential-computing"},c="Deploying Teaclave on Azure Confidential Computing Virtual Machines",l={},r=[];function d(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"deploying-teaclave-on-azure-confidential-computing-virtual-machines",children:"Deploying Teaclave on Azure Confidential Computing Virtual Machines"})}),"\n",(0,o.jsxs)(n.p,{children:["If you want to try Teaclave on an Intel-SGX enabled machine instead of in simulation mode,\nAzure, as a cloud service provider, has provided ",(0,o.jsx)(n.a,{href:"https://azure.microsoft.com/en-us/blog/dcsv2series-vm-now-generally-available-from-azure-confidential-computing/",children:"Intel-SGX enabled virtual machines"}),".\nThis tutorial will guide you to deploy Teaclave on Azure confidential computing VMs."]}),"\n",(0,o.jsxs)(n.p,{children:["To get started, you need to create an Azure confidential computing VM. Please\nrefer to this documents: ",(0,o.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/azure/confidential-computing/quick-create-portal",children:"Quickstart: Deploy an Azure confidential computing VM in the Azure portal"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Normally, the SGX driver will be pre-installed after successfully creating an\nAzure confidential computing VM. Please use this command to check whether the\nSGX driver (the ",(0,o.jsx)(n.code,{children:"intel_sgx"})," kernel module) is properly installed."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"$ ls /dev/sgx\nenclave  provision\n"})}),"\n",(0,o.jsx)(n.p,{children:"Then, install SGX architectural enclaves and quoting libraries for attestation."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"$ sudo apt-get install libssl-dev libcurl4-openssl-dev libprotobuf-dev\n$ echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | sudo tee /etc/apt/sources.list.d/intel-sgx.list\n$ wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo apt-key add -\n$ sudo apt-get update && \\\n   sudo apt-get install libsgx-launch libsgx-urts libsgx-epid libsgx-urts libsgx-quote-ex  libsgx-aesm-quote-ex-plugin libsgx-aesm-epid-plugin\n$ sudo sed -i '/^#default quoting type = epid_linkable/s/^#//' /etc/aesmd.conf\n$ sudo service aesmd restart\n"})}),"\n",(0,o.jsx)(n.p,{children:"Install Docker and Docker Compose."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n$ sudo add-apt-repository \\\n   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable"\n$ sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io\n$ sudo usermod -aG docker your-user-name\n$ sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n'})}),"\n",(0,o.jsx)(n.p,{children:"Build Teaclave."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'$ git clone https://github.com/apache/incubator-teaclave.git\n$ cd incubator-teaclave\n$ docker run --rm -v $(pwd):/teaclave -w /teaclave \\\n  -it teaclave/teaclave-build-ubuntu-1804-sgx-2.17.1:0.1.0 \\\n   bash -c ". /root/.cargo/env && \\\n     . /opt/sgxsdk/environment && \\\n     mkdir -p build && cd build && \\\n     git config --global --add safe.directory /teaclave && \\\n     cmake -DTEST_MODE=ON .. && \\\n     make"\n\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Setup environments for remote attestation. We are using Intel's Attestation\nService and linkable quote, and you can request access from the\n",(0,o.jsx)(n.a,{href:"https://api.portal.trustedservices.intel.com/EPID-attestation",children:"Development (DEV) attestation service portal"}),"\nfor testing."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"export AS_ALGO=sgx_epid\nexport AS_KEY=XXX\nexport AS_SPID=XXX\nexport AS_URL=https://api.trustedservices.intel.com:443\n"})}),"\n",(0,o.jsx)(n.p,{children:"Start Teaclave services."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"(cd docker && ./run-teaclave-services.sh -d)\n"})}),"\n",(0,o.jsx)(n.p,{children:"At last, try the hello world example."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"$ sudo apt install python3-pip\n$ pip3 install pyopenssl toml cryptography\n$ cd examples/python\n$ PYTHONPATH=../../sdk/python python3 builtin_echo.py 'Hello, Teaclave!'\n[+] registering user\n[+] login\n[+] registering function\n[+] creating task\n[+] invoking task\n[+] getting result\n[+] done\n[+] function return:  b'Hello, Teaclave!'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can also open the port numbers of Teaclave's frontend/authentication\nservices in the Azure portal and run examples in another client machine with the\naddress this VM. Note that the client SDK needs enclave info (i.e., the\n",(0,o.jsx)(n.code,{children:"enclave_info.toml"})," file) and attestation service's cert (i.e., the\n",(0,o.jsx)(n.code,{children:"ias_root_ca_cert.pem"})," file) for attesting remote SGX services. The paths of\nthese files can be set in ",(0,o.jsx)(n.code,{children:"examples/python/utils.py"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var a=t(6540);const o={},i=a.createContext(o);function s(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);