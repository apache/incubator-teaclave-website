"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[2554],{8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},9638:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"teaclave-faas-legacy/docs/functions-in-python","title":"Write Functions in Python","description":"The Teaclave platform provides a convenient way to register a customized","source":"@site/docs/teaclave-faas-legacy/docs/functions-in-python.md","sourceDirName":"teaclave-faas-legacy/docs","slug":"/docs/functions-in-python","permalink":"/docs/functions-in-python","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"permalink":"/docs/functions-in-python","slug":"/docs/functions-in-python"},"sidebar":"teaclave-faas-legacy_sidebar","previous":{"title":"My First Function","permalink":"/docs/my-first-function"},"next":{"title":"How to Add Built-in Functions","permalink":"/docs/builtin-functions"}}');var o=t(4848),s=t(8453);const a={permalink:"/docs/functions-in-python",slug:"/docs/functions-in-python"},r="Write Functions in Python",c={},l=[{value:"Entrypoint",id:"entrypoint",level:2},{value:"Modules",id:"modules",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"write-functions-in-python",children:"Write Functions in Python"})}),"\n",(0,o.jsx)(n.p,{children:"The Teaclave platform provides a convenient way to register a customized\nfunction written in Python, and the function is interpreted at runtime in an\nisolated trusted execution environment (i.e., Intel SGX)."}),"\n",(0,o.jsx)(n.h2,{id:"entrypoint",children:"Entrypoint"}),"\n",(0,o.jsx)(n.p,{children:"Here is an simple example of an echo function:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"def entrypoint(argv):\n    assert argv[0] == 'message'\n    assert argv[1] is not None\n    return argv[1]\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"entrypoint"}),' function defined above is the "entrypoint" to executing the\nfunction. It takes one argument which is a list of arguments of this echo\nfunction. The return value of the ',(0,o.jsx)(n.code,{children:"entrypoint"})," function will be passed back to\nthe client."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"NOTE"})," ",(0,o.jsx)(n.br,{}),"\nNote that the function arguments in key-value format passed from the platform\nare flattened into a list. For example, the ",(0,o.jsx)(n.code,{children:'{"message": "Hello, Teaclave!"}'}),"\narguments will become ",(0,o.jsx)(n.code,{children:'"message"'})," (",(0,o.jsx)(n.code,{children:"argv[0]"}),") and ",(0,o.jsx)(n.code,{children:'"Hello, Teaclave!"'}),"\n(",(0,o.jsx)(n.code,{children:"argv[1]"}),")."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"modules",children:"Modules"}),"\n",(0,o.jsxs)(n.p,{children:["Current Python executor (i.e., MesaPy) already supports many modules of the\noriginal Python standard library such as ",(0,o.jsx)(n.code,{children:"marshal"}),", ",(0,o.jsx)(n.code,{children:"math"}),", ",(0,o.jsx)(n.code,{children:"binascii"}),",\n",(0,o.jsx)(n.code,{children:"itertools"}),", ",(0,o.jsx)(n.code,{children:"micronumpy"}),". You can find a full list of available modules in the\n",(0,o.jsx)(n.a,{href:"https://github.com/mesalock-linux/mesapy/blob/sgx/sgx/README.md",children:"document of MesaPy for SGX"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Besides these modules for general computation, you may curious about doing file\nI/O in customized Python function. We provides APIs to integrated with the\nexecutor runtime to read/write files registered along with the task. You can\neither open a file through the ",(0,o.jsx)(n.code,{children:"teaclave_open"})," function or with the ",(0,o.jsx)(n.code,{children:"teaclave"}),"\nmodule like this:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# open input via built-in teaclave_open\nwith teaclave_open("input_file", "rb") as f:\n    line = f.readline()\n\n# open input via teaclave module\nfrom teaclave import open\nwith open("output_file", "wb") as f:\n    f.write("This message is from Mesapy!")\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Either function will give an ",(0,o.jsx)(n.code,{children:"file"})," object in Python, you can use it to read\nlines or write data. And the first argument is the key of the registered\ninput/output files."]}),"\n",(0,o.jsxs)(n.p,{children:["You can learn more about advanced usages in the example of\n",(0,o.jsx)(n.a,{href:"https://github.com/apache/incubator-teaclave/tree/master/examples/python",children:"logistic regression in Python"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);