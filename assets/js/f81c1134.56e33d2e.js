"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[8130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2024/05/31/podling-teaclave-report-june-2024","metadata":{"permalink":"/blog/2024/05/31/podling-teaclave-report-june-2024","source":"@site/blog/2024-05-31-podling-teaclave-report-june-2024.md","title":"Podling Teaclave Report - June 2024","description":"Teaclave","date":"2024-05-31T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Yuan Zhuang","key":null,"page":null}],"frontMatter":{"title":"Podling Teaclave Report - June 2024","date":"2024-05-31T00:00:00.000Z","author":"Yuan Zhuang"},"unlisted":false,"nextItem":{"title":"Teaclave Meetup #15","permalink":"/blog/2022/12/21/teaclave-meetup-15"}},"content":"## Teaclave\\n\\n### Three most important unfinished issues to address before graduating:\\n\\n  - Improve project structure and documentation\\n  - Grow the community (attracting more committers, contributors, users)\\n  - Publish Apache releases (resolving logistics on Apache release)\\n  \\n### Are there any issues that the IPMC or ASF Board need to be aware of?\\n  \\n  None.\\n  \\n### How has the community developed since the last report?\\n  \\n  Since the last report, we have organized three monthly virtual\\n  meetups. For each meetup, we have write-ups published on the Teaclave\\n  blog <https://teaclave.apache.org/blog/>.\\n  - Teaclave Meetup #13:\\n    <https://teaclave.apache.org/blog/2022-06-29-teaclave-meetup-13/>\\n  - Teaclave Meetup #14:\\n    <https://teaclave.apache.org/blog/2022-12-14-teaclave-meetup-14/>\\n  - Teaclave Meetup #15:\\n    <https://teaclave.apache.org/blog/2022-12-21-teaclave-meetup-15/>\\n\\n\\n  Additionally, we introduced a new project Teaclave Java TEE SDK to \\n  our community:  \\n  <https://teaclave.apache.org/blog/2022-10-18-accepting-java-enclave-proposal/>\\n  \\n### How has the project developed since the last report?\\n  \\n  Here are the summaries of recent progress:  \\n\\n#### Teaclave Faas Platform:\\n  - New release 0.6.0:\\n    <https://github.com/apache/incubator-teaclave/releases/tag/v0.6.0>\\n  - Merged PRs:\\n    <https://github.com/apache/incubator-teaclave/pulls?q=is%3Apr+is%3Aclosed+merged%3A2022-05-01..2024-05-31+base%3Amaster>\\n  \\n#### Teaclave TrustZone SDK\\n  - New \'no-std\' branch (set as recommended):\\n    <https://lists.apache.org/thread/f3l82o89hb0w43n27nw77oqcpo829qjd>\\n  - Merged PRs:\\n    <https://github.com/apache/incubator-teaclave-trustzone-sdk/pulls?q=is%3Apr+is%3Aclosed+merged%3A2022-05-01..2024-05-31+base%3Amaster+>\\n  \\n#### Teaclave SGX SDK\\n  - Preparing release v2.0.0:\\n    <https://github.com/apache/incubator-teaclave-sgx-sdk/tree/v2.0.0-preview>\\n  - Merged PRs:\\n    <https://github.com/apache/incubator-teaclave-sgx-sdk/pulls?q=is%3Apr+is%3Aclosed+merged%3A2022-05-01..2024-05-31+base%3Amaster+>\\n\\n#### [NEW] Teaclave Java TEE SDK\\n  - The first release v0.1.0:\\n    https://github.com/apache/incubator-teaclave-java-tee-sdk/releases/tag/v0.1.0\\n  \\n\\n### How would you assess the podling\'s maturity?\\n\\n  - [ ] Initial setup\\n  - [ ] Working towards first release\\n  - [x] Community building\\n  - [ ] Nearing graduation\\n  - [ ] Other:\\n  \\n### Date of last release:\\n  \\n  2023-06-26: Apache Teaclave (incubating) FaaS Platfrom 0.6.0\\n  \\n### When were the last committers or PPMC members elected?\\n\\n  2023-05-04: He Sun (Apache ID: hsun), PPMC\\n  \\n### Have your mentors been helpful and responsive?\\n  \\n  Yes, our mentors work responsively to help us with electing new\\n  mentors, developing new features, fixing bugs, and expanding the\\n  community.\\n  \\n### Is the PPMC managing the podling\'s brand / trademarks?\\n  \\n  We don\'t find any 3rd parties incorrectly using the podling\'s name and\\n  brand.  The VP, Brand has approved the project name.\\n  (PODLINGNAMESEARCH-175)"},{"id":"/2022/12/21/teaclave-meetup-15","metadata":{"permalink":"/blog/2022/12/21/teaclave-meetup-15","source":"@site/blog/2022-12-21-teaclave-meetup-15.md","title":"Teaclave Meetup #15","description":"Agenda","date":"2022-12-21T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"He Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #15","date":"2022-12-21T00:00:00.000Z","author":"He Sun"},"unlisted":false,"prevItem":{"title":"Podling Teaclave Report - June 2024","permalink":"/blog/2024/05/31/podling-teaclave-report-june-2024"},"nextItem":{"title":"Teaclave Meetup #14","permalink":"/blog/2022/12/14/teaclave-meetup-14"}},"content":"## Agenda \\n\\n### Propose He as Committer\\n\\n### Teaclave FaaS\\n\\n- upgrading Teacalve SGX SDK 2.0 PR\\n    - disable macos/ios CI\\n    - protected fs in teaclavs SGX sdk is not compatible with intel sgx sdk\\n    - TODO: support macos/ios target for protected fs in Teaclave SGX SDK\\n    - third-party crates\\n        - new repo to host forked crates: incubator-teaclave-crates\\n        - no need to vendor third-party crates, having a Cargo.lock to lock the third-party\\n        - update readme to explain the supply chain issue\\n    - need review\\n\\n### Java TEE SDK\\n\\n- S2 (March 2023): integrate with Teaclave SGX SDK 2.0\\n- Release PR\\n\\n### Discussion\\n[https://r3conclave.github.io/ccl-documentation/](https://r3conclave.github.io/ccl-documentation/)\\n\\n## Attendees\\n\\n- He Sun\\n- Hongbo chen\\n- Kailun Qin\\n- Mingshen Sun\\n- Qinkun Bao\\n- Ran Duan\\n- Sanhong Li\\n- Shaojun Wang\\n- Yingchun Gao\\n- Yu Lei\\n- Ziyi Lin"},{"id":"/2022/12/14/teaclave-meetup-14","metadata":{"permalink":"/blog/2022/12/14/teaclave-meetup-14","source":"@site/blog/2022-12-14-teaclave-meetup-14.md","title":"Teaclave Meetup #14","description":"Agenda","date":"2022-12-14T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"He Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #14","date":"2022-12-14T00:00:00.000Z","author":"He Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #15","permalink":"/blog/2022/12/21/teaclave-meetup-15"},"nextItem":{"title":"Accepting JavaEnclave to Apache Teaclave (incubating) Proposal","permalink":"/blog/2022/10/08/accepting-java-enclave-proposal"}},"content":"## Agenda\\n\\n### Introduction\\n\\n### Teaclave FaaS\\n\\n- Upgrade to Rust SGX SDK 2.0\\n- Q: DockerHub image (Mingshen: add He as owner)\\n- MS: apache DockerHub infra for Teaclave\\n- Protected FS in 2.0 for macos/iOS is not supported (Ran)\\n- Replace RPC as tonic based on RA-TLS (Yingchun: create a github issue)\\n- RA-TLS standard (CCC, Ali, Intel, etc)\\n- Function languages: Rust, WebAssembly, Python, Occlum\\n\\n### Teaclave SGX SDK (Rust SGX SDK)\\n\\n- Protected FS in SDK is not compatible with Intel SGX SDK\\n- Supports Teaclave and Occlum features\\n- Cache size/key policy added in Teaclave SGX SDK\\n- 2.0 release\\n    - testing\\n        - unit test\\n        - Rust std tests (800) and benchmark\\n        - sample code test\\n        - teaclave dependencies\\n    - document\\n    - CI\\n    - EDMM in 2.0 (Occlum will use EDMM)\\n\\n### Teaclave Java TEE SDK\\n\\n- 0.1 release\\n    - Voting\\n    - Checklist\\n- CI (self-hosted runner for GitHub Actions)\\n    - Apache Infra Jira ticket, Github Actions token (Mingshen: apply token)\\n\\n### Teaclave TrustZone SDK (Rust OP-TEE TrustZone SDK)\\n\\n- N/A\\n\\n## Attendees\\n\\n- He Sun\\n- Hongbo chen\\n- Kailun Qin\\n- Mingshen Sun\\n- Qinkun Bao\\n- Ran Duan\\n- Sanhong Li\\n- Shaojun Wang\\n- Yingchun Gao\\n- Yu Lei\\n- Ziyi Lin"},{"id":"/2022/10/08/accepting-java-enclave-proposal","metadata":{"permalink":"/blog/2022/10/08/accepting-java-enclave-proposal","source":"@site/blog/2022-10-08-accepting-java-enclave-proposal.md","title":"Accepting JavaEnclave to Apache Teaclave (incubating) Proposal","description":"Abstract","date":"2022-10-18T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"The Teaclave PPMC","key":null,"page":null}],"frontMatter":{"title":"Accepting JavaEnclave to Apache Teaclave (incubating) Proposal","date":"2022-10-18T00:00:00.000Z","author":"The Teaclave PPMC"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #14","permalink":"/blog/2022/12/14/teaclave-meetup-14"},"nextItem":{"title":"Teaclave Meetup #13","permalink":"/blog/2022/06/29/teaclave-meetup-13"}},"content":"## Abstract\\n\\nTeaclave Java TEE SDK is a Java confidential computing programming framework.\\nIt follows the host-and-enclave partition programming model defined by Intel-SGX SDK.\\nTeaclave Java TEE SDK provides an elegant way to divide a java project into host and\\nenclave modules, where the enclave module is a provider of a user-defined service\\ninterface which is similar to the Java SPI model. Teaclave Java TEE SDK could\\nhelp you to develop and build a Java confidential computing project with\\nhigh efficiency.\\n\\n## Proposal\\n\\nTeaclave Java TEE SDK is a pure Java SDK for Java confidential computing. It eases\\nthe interactions between secured and unsecured environment with a few concise APIs.\\nFrom user\'s aspect, creating an enclave environment and invoking confidential\\ncomputing services would be as simple as invoking SPI services.\\n\\n### Background\\n\\nThe Teaclave Java TEE SDK project is being actively developed within Alibaba Cloud.\\n\\n### Rationale\\n\\nTeaclave Java TEE SDK is a Java confidential computing programming framework.\\nThe goal of Teaclave is to provide a universal secure computing platform for\\nmultiple programming languages. Teaclave currently supports Rust, Python and\\nWebAssembly, but Java is still missing. Teaclave Java TEE SDK would be an\\nimportant piece of the puzzle.\\n\\n### Initial Goals\\n\\n- Transfer the repository to the Apache Incubator under the Teaclave project\\n- Code cleanup and more documentation\\n\\n#### Meritocracy:\\n\\nTeaclave Java TEE SDK project was originally developed and reviewed by\\nShaojun Wang/Ziyi Lin/Lei Yu/Sanhong Li within Alibaba Cloud.\\nWe encourage everyone to ask questions and create pull requests for the project.\\n\\n#### Community:\\n\\nTeaclave Java TEE SDK was developed and applied within Alibaba Cloud before\\nit was donated to Teaclave.\\n\\n#### Core Developers:\\n\\nThe core developers are:\\n- Shaojun Wang (jeffery.wsj@alibaba-inc.com)\\n- Ziyi Lin (cengfeng.lzy@alibaba-inc.com)\\n\\n#### Alignment:\\n\\nThe project is complimentary of Teaclave\'s TEE backends.\\n\\n### Known Risks\\n\\nAn exercise in self-knowledge. Risks don\'t mean that a project is unacceptable.\\nIf they are recognized and noted, then they can be addressed during incubation.\\n\\n#### Project Name\\n\\nTeaclave Java TEE SDK was initially developed and applied within Alibaba Cloud\\nas a closed-source project which was called JavaEnclave.\\n\\n#### Inexperience with Open Source:\\n\\nTeaclave Java TEE SDK has been reviewed by Mingshen Sun, who is from the Teaclave\\ncommunity. He\'s familiar with The Apache Way for the open-source community.\\n\\n#### Length of Incubation:\\n\\nThe project will be in incubation with Apache Teaclave (incubating) project.\\n\\n### Documentation\\n\\n- Teaclave Java TEE SDK\'s documentation will be submit to Teaclave PPMC for review\\n  by email private@teaclave.apache.org\\n\\n### Initial Source\\n\\n- Teaclave Java TEE SDK\'s source code will be submit to Teaclave PPMC for review\\n  by email private@teaclave.apache.org\\n\\n### Source and Intellectual Property Submission Plan\\n\\nWe will submit a Software Grant for this project later.\\n\\n#### External Dependencies:\\n\\nThe dependencies have Apache compatible license, which is provided under the\\nBSD 2-Clause license and GPL2.0 license. One dependency of Teaclave Java TEE SDK\\nis GraalVM SubstraceVM with GPL2.0 license, it\'s used as the enclave module\'s\\nnative image compiler, and Teaclave Java TEE SDK has contributed some patches\\nto GraalVM and they had been contained in GraalVM\'s official releases assets.\\nTeaclave Java TEE SDK is dependent on GraalVM\'s official releases and doesn\'t\\nmake any modifications to GraalVM\'s source code, so there\'s no legal risk.\\nhttps://www.apache.org/legal/resolved.html\\n\\n#### Cryptography:\\n\\nN/A\\n\\n### Required Resources\\n\\n#### Mailing lists:\\n\\nThe project shares the same mailing list of Teaclave.\\n\\n#### Git Repositories:\\n\\n- N/A\\n\\n#### Issue Tracking:\\n\\nSame with Teaclave.\\n\\n#### Other Resources:\\n\\nN/A\\n\\n### Initial Committers\\n\\n- Shaojun Wang (jeffery.wsj@alibaba-inc.com)\\n- Ziyi Lin (cengfeng.lzy@alibaba-inc.com)\\n- Lei Yu (lei.yul@alibaba-inc.com)\\n- Sanhong Li (sanhong.lsh@alibaba-inc.com)"},{"id":"/2022/06/29/teaclave-meetup-13","metadata":{"permalink":"/blog/2022/06/29/teaclave-meetup-13","source":"@site/blog/2022-06-29-teaclave-meetup-13.md","title":"Teaclave Meetup #13","description":"Agenda","date":"2022-06-29T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #13","date":"2022-06-29T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Accepting JavaEnclave to Apache Teaclave (incubating) Proposal","permalink":"/blog/2022/10/08/accepting-java-enclave-proposal"},"nextItem":{"title":"Podling Teaclave Report - May 2022","permalink":"/blog/2022/05/01/podling-teaclave-report-may-2022"}},"content":"## Agenda\\n\\nDear Teaclave community,\\n\\nSince some members have conflicts on tomorrow\'s meetup and suggested\\nscheduling the meetup today, let\'s have an informal meet today at\\n7:00am PT (10am China Time).\\n\\nThere\'s no presentation today. Let\'s just have a chitchat and discuss\\nrecent updates in the community. Thanks."},{"id":"/2022/05/01/podling-teaclave-report-may-2022","metadata":{"permalink":"/blog/2022/05/01/podling-teaclave-report-may-2022","source":"@site/blog/2022-05-01-podling-teaclave-report-may-2022.md","title":"Podling Teaclave Report - May 2022","description":"Teaclave","date":"2022-05-01T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Podling Teaclave Report - May 2022","date":"2022-05-01T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #13","permalink":"/blog/2022/06/29/teaclave-meetup-13"},"nextItem":{"title":"Teaclave Meetup #12","permalink":"/blog/2022/04/28/teaclave-meetup-12"}},"content":"## Teaclave\\n\\n### Three most important unfinished issues to address before graduating:\\n\\n  - Improve project structure and documentation\\n  - Grow the community (attracting more committers, contributors, users)\\n  - Publish Apache releases (resolving logistics on Apache release)\\n\\n### Are there any issues that the IPMC or ASF Board need to be aware of?\\n\\nNone.\\n\\n### How has the community developed since the last report?\\n\\nSince the last report, we have organized three monthly virtual\\nmeetups. For each meetup, we have write-ups published on the Teaclave\\nblog.\\n  - Teaclave Meetup #10:\\n<https://teaclave.apache.org/blog/2022-02-24-teaclave-meetup-10/>\\n  - Teaclave Meetup #11:\\n<https://teaclave.apache.org/blog/2022-03-31-teaclave-meetup-11/>\\n  - Teaclave Meetup #12:\\n<https://teaclave.apache.org/blog/2022-04-28-teaclave-meetup-12/>\\n\\nWe also released two versions of the Teaclave platform and Teaclave\\nTrustZone seperately:\\n  - Teaclave 0.4.0:\\n<https://teaclave.apache.org/blog/2022-04-18-announcing-teaclave-0-4-0/>\\n  - Teaclave TrustZone SDK 0.2.0:\\n<https://teaclave.apache.org/blog/2022-04-18-announcing-teaclave-trustzone-sdk-0-2-0/>\\n\\n### How has the project developed since the last report?\\n\\nHere are the summaries of recent progress:\\n\\nTeaclave Faas Platform:\\n  - Merged PRs:\\n<https://github.com/apache/incubator-teaclave/pulls?q=is%3Apr+is%3Aclosed+merged%3A2022-01-01..2022-05-01+base%3Amaster>\\n\\nTeaclave TrustZone SDK\\n  - Merged PRs:\\n<https://github.com/apache/incubator-teaclave-trustzone-sdk/pulls?q=is%3Apr+is%3Aclosed+merged%3A2022-01-01..2022-05-01+base%3Amaster+>\\n\\nTeaclave SGX SDK\\n  - Merged PRs:\\n<https://github.com/apache/incubator-teaclave-sgx-sdk/pulls?q=is%3Apr+is%3Aclosed+merged%3A2022-01-01..2022-05-01+base%3Amaster+>\\n\\nWebsite\\n\\n  - [blog] Teaclave Meetup #10:\\n<https://teaclave.apache.org/blog/2022-02-24-teaclave-meetup-10/>\\n  - [blog] Teaclave Meetup #11:\\n<https://teaclave.apache.org/blog/2022-03-31-teaclave-meetup-11/>\\n  - [blog] Teaclave Meetup #12:\\n<https://teaclave.apache.org/blog/2022-04-28-teaclave-meetup-12/>\\n  - [blog] Announcing Apache Teaclave (incubating) 0.4.0:\\n<https://teaclave.apache.org/blog/2022-04-18-announcing-teaclave-0-4-0/>\\n  - [blog] Announcing Apache Teaclave TrustZone SDK (incubating)\\n0.2.0: <https://teaclave.apache.org/blog/2022-04-18-announcing-teaclave-trustzone-sdk-0-2-0/>\\n\\n### How would you assess the podling\'s maturity?\\n\\n  - [ ] Initial setup\\n  - [ ] Working towards first release\\n  - [x] Community building\\n  - [ ] Nearing graduation\\n  - [ ] Other:\\n\\n### Date of last release:\\n\\n  2021-04-18: Apache Teaclave (incubating) TrustZone SDK 0.2.0\\n\\n### When were the last committers or PPMC members elected?\\n\\n  - 2022-04-26: Qinkun Bao (Apache ID: qinkun), Committer\\n\\n### Have your mentors been helpful and responsive?\\n\\nYes, our mentors work responsively to help us with electing new\\nmentors, developing new features, fixing bugs, and expanding the\\ncommunity.\\n\\n### Is the PPMC managing the podling\'s brand / trademarks?\\n\\nWe don\'t find any 3rd parties incorrectly using the podling\'s name and\\nbrand.  The VP, Brand has approved the project name.\\n(PODLINGNAMESEARCH-175)"},{"id":"/2022/04/28/teaclave-meetup-12","metadata":{"permalink":"/blog/2022/04/28/teaclave-meetup-12","source":"@site/blog/2022-04-28-teaclave-meetup-12.md","title":"Teaclave Meetup #12","description":"Agenda","date":"2022-04-28T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #12","date":"2022-04-28T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Podling Teaclave Report - May 2022","permalink":"/blog/2022/05/01/podling-teaclave-report-may-2022"},"nextItem":{"title":"Announcing Apache Teaclave (incubating) 0.4.0","permalink":"/blog/2022/04/18/announcing-teaclave-0.4.0"}},"content":"## Agenda\\n\\n- Recent Updates on Teaclave - Mingshen Sun (10m)\\n- Enarx - Wenwen Ruan (40m)\\n- Free discussion (10m)\\n\\n## Attendees\\n\\n- Mingshen Sun\\n- Shuang Liu\\n- He Sun\\n- Weijie Liu\\n- Gordon\\n- Tongxin Li\\n- Wenhao Wang\\n- Ukei Kim\\n\\n## Group Photo\\n\\n![Group Photo](./img/teaclave-meetup-12-zoom.png)"},{"id":"/2022/04/18/announcing-teaclave-0.4.0","metadata":{"permalink":"/blog/2022/04/18/announcing-teaclave-0.4.0","source":"@site/blog/2022-04-18-announcing-teaclave-0.4.0.md","title":"Announcing Apache Teaclave (incubating) 0.4.0","description":"On behalf of the Teaclave community, I am happy to announce the fourth Apache","date":"2022-04-18T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Announcing Apache Teaclave (incubating) 0.4.0","date":"2022-04-18T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #12","permalink":"/blog/2022/04/28/teaclave-meetup-12"},"nextItem":{"title":"Announcing Apache Teaclave TrustZone SDK (incubating) 0.2.0","permalink":"/blog/2022/04/18/announcing-teaclave-trustzone-sdk-0.2.0"}},"content":"On behalf of the Teaclave community, I am happy to announce the *fourth* Apache\\nIncubator release of Teaclave, 0.4.0. Teaclave is a universal secure computing\\nplatform, making computation on privacy-sensitive data safe and simple.\\nApache Teaclave (including the\\n[FaaS platform](https://github.com/apache/incubator-teaclave),\\n[SGX SDK](https://github.com/apache/incubator-teaclave-sgx-sdk),\\nand [TrustZone SDK](https://github.com/apache/incubator-teaclave-trustzone-sdk)) is\\nbeing used and contributed by developers from many organizations and\\nother open source projects. Please see the [*powered by*](/powered-by) page to learn more.\\n\\nIn this release, we mainly focus on better user management, task management,\\nperformance improvement and stability.\\n\\n## Highlights\\n\\nIn this release, we introduce a role-based access control for user management.\\nSpecifically, we define roles like admin, function owner, data owner, data owner\\nmanager, etc. Additionally, we also add APIs to support user management\\nfunctionalities. In addition, we also implement a feature to cancel a running\\ntask to kill a long-run function which is no longer needed. Besides these two\\nnew features, we also made a lot of underlying changes to improve the\\nperformance of RPC and stability of the secure database.\\n\\nTo learn more, here is a list of notable changes in Teaclave version 0.4.0.\\n\\n**Features**\\n\\n- Add the `DisableFunction` interface (#620)\\n- Better user management interfaces: add the `UserUpdate`, `UserChangePassword`, `ResetUserPassword`, `DeleteUser`, and `ListUsers` interfaces\\n- Support optional input/output files (#603)\\n- Start Teaclave docker services with auto-detection mechanism (#559)\\n- Add watchdog functionality to monitor service status (#600)\\n- Support cancel a task\\n- Support intermediate cert in DCAP attestation cert\\n\\n**Enhancements**\\n\\n- Better error handling in Python client SDK (#632)\\n- Refactor services error types and messages, make them readable to end users\\n- Optimize RPC memory footprint of serde (#577)\\n- Support selectively including executors (#574)\\n- Support AES-GCM output files (#629)\\n- Add port probe for service launching\\n- Update WAMR version to WAMR-01-18-2022 (#616)\\n- Move execution context into a separate crate (#598)\\n- Support Ubuntu 20.04 docker image and add corresponding CI pipelines\\n- Persistent MockDB in test mode (#580)\\n\\n**Bug Fixes**\\n\\n- Better task state error and fix cancel error issue in the example (#637)\\n- Fix privilege issues in the `GetFunction` and `ListFunctions` interfaces (#636)\\n- Better building system: fix packages rebuild every time, avoid issues in parallel make (#589, #596)\\n- Fix the issue of generating code coverage of tests (#627)\\n- Fix LevelDB assertion issue: leveldb lru bug, using disk db for unit test (#583)\\n\\n**Docs**\\n\\n- Add release guide for releasing Teaclave in the community: <https://teaclave.apache.org/docs/release-guide/>\\n- Remove `CONTRIBUTORS.md` and point to the homepage (#552)\\n\\n## Download\\n\\nTeaclave 0.4.0 can be downloaded at [the download page](/download/). Note that \\nit is essential to verify the integrity of the downloaded file using the\\nPGP signature (the `.asc` file) or a hash (the `.sha256` file).\\n\\n## Documentation\\n\\nIf it is the first time to try Teaclave, we provide a simple but clear tutorial\\nto guide you getting stated with Teaclave by invoking\\n[your first function](/docs/my-first-function/) in Teaclave.\\n\\nBasically, you can build the Teaclave platform using docker with these commands:\\n\\n```sh\\n$ tar zxvf apache-teaclave-0.4.0-incubating.tar.gz && cd \\\\\\n  apache-teaclave-0.4.0-incubating\\n$ # Instructions to verify the source tar: https://teaclave.apache.org/download/#verify-the-integrity-of-the-files\\n\\n$ docker run --rm -v $(pwd):/teaclave -w /teaclave \\\\\\n  -it teaclave/teaclave-build-ubuntu-1804-sgx-2.14:latest \\\\\\n   bash -c \\". /root/.cargo/env && \\\\\\n     . /opt/sgxsdk/environment && \\\\\\n     mkdir -p build && cd build && \\\\\\n     cmake -DTEST_MODE=ON -DSGX_SIM_MODE=ON -DGIT_SUBMODULE=OFF .. && \\\\\\n     make\\"\\n```\\n\\nLaunch all services with `docker-compose` using simulation mode:\\n\\n```sh\\n$ (cd docker && docker-compose -f docker-compose-ubuntu-1804-sgx-sim-mode.yml up --build)\\n```\\n\\nAnd invoke function with a Python client:\\n\\n```sh\\n$ cd examples/python\\n$ PYTHONPATH=../../sdk/python python3 builtin_echo.py \'Hello, Teaclave!\'\\n[+] registering user\\n[+] login\\n[+] registering function\\n[+] creating task\\n[+] approving task\\n[+] invoking task\\n[+] getting result\\n[+] done\\n[+] function return:  b\'Hello, Teaclave!\'\\n```\\n\\nIf you want to understand the internals of Teaclave, we provide several\\ndocuments about the [design](/docs/#design) of Teaclave. Also, we extensively\\ndocument our [codebase](/docs/#codebase) in each sub directories. At last, [API references](/docs/#api-references)\\nare automatically generated and uploaded to our homepage.\\n\\n## Community\\n\\n- Join us on our [mailing list](https://lists.apache.org/list.html?dev@teaclave.apache.org) and [Discord channel](https://discord.gg/ynECXsxm5P).\\n- Follow us at [@ApacheTeaclave](https://twitter.com/ApacheTeaclave).\\n- Meet us at our [monthly community meetup](https://teaclave.apache.org/community/#calendar).\\n- See [more](https://teaclave.apache.org/community/)."},{"id":"/2022/04/18/announcing-teaclave-trustzone-sdk-0.2.0","metadata":{"permalink":"/blog/2022/04/18/announcing-teaclave-trustzone-sdk-0.2.0","source":"@site/blog/2022-04-18-announcing-teaclave-trustzone-sdk-0.2.0.md","title":"Announcing Apache Teaclave TrustZone SDK (incubating) 0.2.0","description":"On behalf of the Teaclave community, I am happy to announce the release of","date":"2022-04-18T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Announcing Apache Teaclave TrustZone SDK (incubating) 0.2.0","date":"2022-04-18T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Announcing Apache Teaclave (incubating) 0.4.0","permalink":"/blog/2022/04/18/announcing-teaclave-0.4.0"},"nextItem":{"title":"Teaclave Meetup #11","permalink":"/blog/2022/03/31/teaclave-meetup-11"}},"content":"On behalf of the Teaclave community, I am happy to announce the release of\\nTeaclave TrustZone SDK 0.2.0.\\n\\nTeaclave TrustZone SDK provides abilities to build safe TrustZone applications\\nin Rust. The SDK is based on the OP-TEE project which follows GlobalPlatform TEE\\nspecifications and provides ergonomic APIs. In addition, it enables capability\\nto write TrustZone applications with Rust\'s standard library and many\\nthird-party libraries (i.e., crates). Teaclave TrustZone SDK is a sub-project of\\nApache Teaclave (incubating). To learn more about the design and history of\\nTrustZone SDK,\\nplease read the blog [Welcome Rust OP-TEE TrustZone SDK To Teaclave](https://teaclave.apache.org/blog/2021-03-14-welcome-rust-optee-trustzone-sdk/).\\n\\nThis is the second Apache Incubator release of Teaclave TrustZone SDK. Teaclave\\nTrustZone SDK provides abilities to build safe TrustZone applications in Rust.\\nThe SDK is based on the OP-TEE project which follows GlobalPlatform TEE\\nspecifications and provides ergonomic APIs. In addition, it enables the\\ncapability to write TrustZone applications with Rust\'s standard library and many\\nthird-party libraries (i.e., crates). Teaclave TrustZone SDK is a sub-project of\\nApache Teaclave (incubating).\\n\\nDuring this period, we are working closely with the OP-TEE community to\\nintegrate TA examples written in Rust into the upstream repository. You can try\\nand play with the examples written in Rust with Teaclave TrustZone SDK since the\\nOP-TEE 3.15.0 release.\\n\\nMore specifically, in this release we have the following updates:\\n\\n## Features\\n\\n- Add support for tee-supplicant loadable plugins and examples\\n- Add TEE Socket APIs and examples\\n\\n## Enhancements\\n\\n#### Integration into OP-TEE\\n\\n- Add the `-rs` suffix to examples and update test scripts ([#34](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/34))\\n- Update to OP-TEE 3.14.0 ([#35](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/35))\\n- Update to OP-TEE 3.16.0 ([#59](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/59))\\n\\n#### Building\\n\\n- Upgrade building docker to Ubuntu 20.04 ([#33](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/33))\\n- Update Rust toolchain to nightly-2021-09-20 and std to 1.56.1 ([#53](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/53))\\n- Add setup.sh to setup rust environment and initialize submodules ([#40](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/40), [#63](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/63))\\n\\n#### CI\\n\\n- Switch to GitHub Actions ([#33](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/33))\\n- Add expect script for OP-TEE CI and fix CI errors ([#45](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/45), [#50](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/50))\\n\\n## Bug fixes\\n\\n- Fix ldelf error of arm32 ta ([#38](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/38))\\n- fix error when making the plugin example second time ([#42](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/42))\\n- Correct toolchain PATH env ([#44](https://github.com/apache/incubator-teaclave-trustzone-sdk/pull/44))\\n\\n## Docs\\n\\n- Add debugging OP-TEE TA doc: Debugging OP-TEE TA\\n- Add documentation of Rust examples: Overview of OP-TEE Rust Examples\\n- Polish the getting started documentation\\n\\n## Download\\n\\nYou can download the release from the\\n[download](https://teaclave.apache.org/download/) page. Also, please checkout\\nour [repository](https://github.com/apache/incubator-teaclave-trustzone-sdk)\\nhosted on GitHub.\\n\\n## Contributing\\n\\nTeaclave TrustZone SDK is under the Apache License v2 and open source in The\\nApache Way. We aim to create a project that is maintained and owned by the\\ncommunity. All kinds of contributions are welcome. Thanks to our contributors."},{"id":"/2022/03/31/teaclave-meetup-11","metadata":{"permalink":"/blog/2022/03/31/teaclave-meetup-11","source":"@site/blog/2022-03-31-teaclave-meetup-11.md","title":"Teaclave Meetup #11","description":"Agenda","date":"2022-03-31T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #11","date":"2022-03-31T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Announcing Apache Teaclave TrustZone SDK (incubating) 0.2.0","permalink":"/blog/2022/04/18/announcing-teaclave-trustzone-sdk-0.2.0"},"nextItem":{"title":"Teaclave Meetup #10","permalink":"/blog/2022/02/24/teaclave-meetup-10"}},"content":"## Agenda\\n\\n- Recent Updates on Teaclave - Mingshen Sun (10m)\\n- HyperEnclave - Shuang Liu (40m)\\n- Free discussion (10m)\\n\\n## Attendees\\n\\n- Mingshen Sun\\n- Ran Duan\\n- He Sun\\n- Weijie Liu\\n- Shuang Liu\\n- Bing Duan\\n\\n## Group Photo\\n\\n![Group Photo](./img/teaclave-meetup-11-zoom.png)"},{"id":"/2022/02/24/teaclave-meetup-10","metadata":{"permalink":"/blog/2022/02/24/teaclave-meetup-10","source":"@site/blog/2022-02-24-teaclave-meetup-10.md","title":"Teaclave Meetup #10","description":"Agenda","date":"2022-02-24T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #10","date":"2022-02-24T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #11","permalink":"/blog/2022/03/31/teaclave-meetup-11"},"nextItem":{"title":"Podling Teaclave Report - Jan 2022","permalink":"/blog/2022/01/12/podling-teaclave-report-jan-2022"}},"content":"## Agenda\\n\\n- Recent Updates on Teaclave - Mingshen Sun (15m)\\n- Proof of Being Forgotten: Verified Privacy Protection in Confidential Computing Platform - Hongbo Chen (30m)\\n- Free discussion (15m)\\n\\n## Notes\\n\\n**Teaclave Recent Updates**\\n\\n- Teaclave FaaS\\n    - Optimize RPC memory footprint of `serde`\\n    - Server error refactoring\\n    - Executor watchdog\\n    - Task canceling\\n    - APIs: `list_users`, `delete_user`, `reset_user`, `user_change_password`, `disable_function`\\n    - Optional input/output files\\n- Teaclave TrustZone SDK\\n    - Update to OP-TEE 3.16.0 (no breaking change)\\n- GSoC 2022 call for participation\\n- Powered by Teaclave - P4Cleanroom: P4Cleanroom is a confidential cloud service\\n  for hosting computational biology algorithms as SaaS services on the cloud.\\n  Computational biology researchers can publish their algorithms on P4Cleanroom\\n  as a SaaS service to customers, such as researchers in pharmaceutical\\n  companies and health care institutes.\\n\\n![P4Cleanroom - Powered by Teclave](./img/p4cleanroom-powered-by-teaclave.png)\\n\\n**Proof of Being Forgotten**\\n\\nThe talk is same with the recent talk on OC3. Video can be found at:\\n\\n- Video: [https://www.youtube.com/watch?v=NrOySgI7O3o&list=PLEhAl3D5WVvSD7Kh1lyF95dWmcPICXc2u](https://www.youtube.com/watch?v=NrOySgI7O3o&list=PLEhAl3D5WVvSD7Kh1lyF95dWmcPICXc2u)\\n\\nQ&A during the talk:\\n\\nGary: Assumption on reusing TEE sandbox?\\n\\nHongbo: No, if not reuse TEE, still has leakage.\\n\\nGary: What is Zone, is it heap?\\n\\nHongbo: No only. E.g., secrets in stack and also in general purpose registers.\\n\\nGary: How to demonstrate/show the Proof of Being Forgotten? Attestation? Enclave hash?\\n\\nMingshen: PoBF is a statically verified property. We also consider to add\\ndynamic traces for post-mortem auditing. Combined with the enclave hash and\\nreproducible build, we can provide the proof before the execution statically,\\nand after the execution dynamically.\\n\\n**Topic for the Next Meetup**\\n\\n- HyperEnclave in Ant Finance - Shuang Liu\\n\\n## Attendees\\n\\n- Hongbo Chen\\n- Gary\\n- Ran Duan\\n- He Sun\\n- Ruide Zhang\\n- Weijie Liu\\n- Chan Zhao"},{"id":"/2022/01/12/podling-teaclave-report-jan-2022","metadata":{"permalink":"/blog/2022/01/12/podling-teaclave-report-jan-2022","source":"@site/blog/2022-01-12-podling-teaclave-report-jan-2022.md","title":"Podling Teaclave Report - Jan 2022","description":"Teaclave","date":"2022-01-12T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Podling Teaclave Report - Jan 2022","date":"2022-01-12T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #10","permalink":"/blog/2022/02/24/teaclave-meetup-10"},"nextItem":{"title":"Teaclave Meetup #9","permalink":"/blog/2021/11/30/teaclave-meetup-9"}},"content":"## Teaclave\\n\\n### Three most important unfinished issues to address before graduating:\\n\\n  - Improve project structure and documentation\\n  - Grow the community (attracting more committers, contributors, users)\\n  - Publish Apache releases (resolving logistics on Apache release)\\n\\n### Are there any issues that the IPMC or ASF Board need to be aware of?\\n\\nNone.\\n\\n### How has the community developed since the last report?\\n\\nSince the last report, we have organized two monthly virtual meetups. For each meetup, we have write-ups published on the Teaclave blog.\\n  - Teaclave Meetup #8: <https://teaclave.apache.org/blog/2021-10-14-teaclave-meetup-8/>\\n  - Teaclave Meetup #9: <https://teaclave.apache.org/blog/2021-11-30-teaclave-meetup-9/>\\n\\nWe also published a security advisory on a recent vulnerability on Intel SGX SDK.\\n  - SECURITY ADVISORY OF SMASHEX AND CVE-2021-0186: <https://teaclave.apache.org/blog/2021-10-25-security-advisory-of-smashex-and-cve-2021-0186/>\\n\\nTo promote the recent TrustZone SDK in the Chinese community, we published a blog on getting started with the SDK for newcomers.\\n  - \u4f7f\u7528 TEACLAVE TRUSTZONE SDK \u5f00\u53d1 TRUSTZONE \u5e94\u7528: <https://teaclave.apache.org/blog/2021-10-15-developing-teaclave-application-with-teaclave-trustzone-sdk/>\\n\\n### How has the project developed since the last report?\\n\\nHere are the summaries of recent progress:\\n\\nTeaclave Faas Platform\\n\\n  - [docker] start Teaclave docker services with auto-detection mechanism\\n  - Support selectively including executors (#574)\\n  - Optimize RPC memory footprint of serde (#577)\\n  - Persistent MockDB in test mode. (#580)\\n  - Flush DB and compact_range after dequeue operation\\n  - API updates (#588): UpdateFunction, ListFunciton, DeleteFunction, UserUpdate, UserRegister, UserUpdate\\n  - Introduce role-based user management and access control\\n  - Bug fixes and code refactoring\\n\\nTeaclave TrustZone SDK\\n\\n  - Update Rust toolchain to nightly-2021-09-20 an std to 1.56.1\\n\\nTeaclave SGX SDK\\n\\n  - Support Intel SGX SDK 2.15, DCAP 1.12\\n  - Update rust toolchain to nightly-2021-11-01\\n\\nWebsite\\n\\n  - [blog] Teaclave Meetup #8: <https://teaclave.apache.org/blog/2021-10-14-teaclave-meetup-8/>\\n  - [blog] Teaclave Meetup #9: <https://teaclave.apache.org/blog/2021-11-30-teaclave-meetup-9/>\\n  - [blog] SECURITY ADVISORY OF SMASHEX AND CVE-2021-0186: <https://teaclave.apache.org/blog/2021-10-25-security-advisory-of-smashex-and-cve-2021-0186/>\\n  - [blog] \u4f7f\u7528 TEACLAVE TRUSTZONE SDK \u5f00\u53d1 TRUSTZONE \u5e94\u7528: <https://teaclave.apache.org/blog/2021-10-15-developing-teaclave-application-with-teaclave-trustzone-sdk/>\\n\\n### How would you assess the podling\'s maturity?\\nPlease feel free to add your own commentary.\\n\\n  - [ ] Initial setup\\n  - [ ] Working towards first release\\n  - [x] Community building\\n  - [ ] Nearing graduation\\n  - [ ] Other:\\n\\n### Date of last release:\\n\\n  2021-08-23: Apache Teaclave (incubating) 0.3.0\\n\\n### When were the last committers or PPMC members elected?\\n\\n  - 2021-09-20: Yuan Zhuang (Apache ID: yuanz), Committer\\n  - 2021-09-20: Rong Fan (Apache ID: fanrong), Committer\\n\\n### Have your mentors been helpful and responsive?\\n\\nYes, our mentors work responsively to help us with electing new mentors, developing new features, fixing bugs, and expanding the community.\\n\\n### Is the PPMC managing the podling\'s brand / trademarks?\\n\\nWe don\'t find any 3rd parties incorrectly using the podling\'s name and brand.  The VP, Brand has approved the project name. (PODLINGNAMESEARCH-175)"},{"id":"/2021/11/30/teaclave-meetup-9","metadata":{"permalink":"/blog/2021/11/30/teaclave-meetup-9","source":"@site/blog/2021-11-30-teaclave-meetup-9.md","title":"Teaclave Meetup #9","description":"Agenda","date":"2021-11-30T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #9","date":"2021-11-30T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Podling Teaclave Report - Jan 2022","permalink":"/blog/2022/01/12/podling-teaclave-report-jan-2022"},"nextItem":{"title":"Security Advisory of SmashEx and CVE-2021-0186","permalink":"/blog/2021/11/01/security-advisory-of-smashex-and-cve-2021-0186"}},"content":"## Agenda\\n\\n- SmashEx: Smashing SGX Enclaves Using Exceptions \u2014 Jinhua Cui\\n\\n## Notes\\n\\n- *SmashEx: Smashing SGX Enclaves Using Exceptions* (CCS 2021):\\n  Jinhua Cui (National University of Defense Technology, National University of\\n  Singapore); Zhijingcheng Yu (National University of Singapore); Shweta Shinde\\n  (ETH Zurich); Prateek Saxena (National University of Singapore); Zhiping Cai\\n  (National University of Defense Technology)\\n- [https://arxiv.org/ftp/arxiv/papers/2110/2110.06657.pdf](https://arxiv.org/ftp/arxiv/papers/2110/2110.06657.pdf)\\n- CVE-2021-0186\\n    - [https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00548.html](https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00548.html)\\n    - **Description**: Improper input validation in the Intel(R) SGX SDK\\n      applications compiled for SGX2 enabled processors may allow a privileged\\n      user to potentially escalation of privilege via local access.\\n    - **Affected Products**: Intel SGX SDK for Windows v2.12 and earlier, Intel\\n      SGX SDK for Linux v2.13 and earlier, Intel\xae Processors supporting SGX2.\\n    - Intel recommends updating the Intel\xae SGX SDK to the versions listed below.\\n      Enclaves built with the new Intel\xae SGX SDK version should increment the\\n      value of their ISVSVN field.\\n- Patch: [https://github.com/intel/linux-sgx/commit/edfe42a517b3e4b1d81204c3cdef6da6cb35fefc](https://github.com/intel/linux-sgx/commit/edfe42a517b3e4b1d81204c3cdef6da6cb35fefc)\\n- [Security Advisory from the Teaclave Community](https://teaclave.apache.org/blog/2021-10-25-security-advisory-of-smashex-and-cve-2021-0186/)\\n\\n## Attendees\\n\\n- Jinghua\\n- Ran Duan\\n- Rong Fan\\n- Gordon\\n- He Sun\\n- Hongbo Chen\\n- Jason Yu\\n- Pei Wang\\n- ruanwenwen\\n- Rundong\\n- Tongxin Li\\n- Weijie Liu\\n- Yuan Zhuang\\n- Zha0Chan\\n- Mingshen Sun\\n\\n## Group Photo\\n\\n![Group Photo](./img/teaclave-meetup-9-zoom.png)"},{"id":"/2021/11/01/security-advisory-of-smashex-and-cve-2021-0186","metadata":{"permalink":"/blog/2021/11/01/security-advisory-of-smashex-and-cve-2021-0186","source":"@site/blog/2021-11-01-security-advisory-of-smashex-and-cve-2021-0186.md","title":"Security Advisory of SmashEx and CVE-2021-0186","description":"Recently, we were notified of a re-entrancy vulnerability in the exception","date":"2021-10-25T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Security Advisory of SmashEx and CVE-2021-0186","date":"2021-10-25T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #9","permalink":"/blog/2021/11/30/teaclave-meetup-9"},"nextItem":{"title":"\u4f7f\u7528 Teaclave TrustZone SDK \u5f00\u53d1 TrustZone \u5e94\u7528","permalink":"/blog/2021/10/15/developing-teaclave-application-with-teaclave-trustzone-sdk"}},"content":"Recently, we were notified of a re-entrancy vulnerability in the exception\\nhandling designs of some popular SGX SDKs (including Intel SGX SDK), resulting in\\narbitrary disclosure of enclave private memory and code-reuse attacks in SGX\\nenclave.\\n\\nThe vulnerability is named as [SmashEx](https://jasonyu1996.github.io/SmashEx/)\\n[1]. The SmashEx attack affects several SGX runtimes with exception handling.\\nFor Intel SGX SDK, the assigned identifier is\\n[CVE-2021-0186](https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00548.html) [2].\\nWhile the vulnerability itself is not a Teaclave flaw, we\'re taking proactive\\nmeasures to explain and mitigate its impact on Teaclave users.\\n\\n## Overview\\n\\nDue to the lack of atomicity primitives in SGX enclaves, an SGX enclave can be\\ninterrupted and re-entered at any time, including when it is in a state unsafe\\nfor re-entry (i.e., when it is executing a critical section). The SmashEx attack\\nexploits such unsafe enclave re-entries happening in the exception handling\\nmechanism in the SGX runtime.\\n\\nA malicious host can create an exception immediately after EENTER which causes\\ncontrol to be transferred to the host before the enclave stack (RSP register)\\nhas been properly set up. Then, a special ECALL (called `ECMD_EXCEPT`) to\\nenclave will use the attacker-controlled RSP register to setup the context of\\nthe exception handler function. At last, when the host transfers control back to the\\nenclave with ERESUME, it may execute with a stack that resides in host memory\\nthereby enabling ROP exploits.\\n\\nThis vulnerability can be fixed by adding extra checks on untrusted RSP when\\nconstructing the context of the exception handler.\\n\\n## Affected Versions\\n\\nFor Intel SGX SDK, the vulnerability affects all projects using the following\\nversions.\\n\\n- Intel SGX SDK for Windows v2.12 and erlier\\n- Intel SGX SDK for Linux v2.13 and earlier\\n\\n## Impacts on Teaclave\\n\\nTeaclave SGX SDK wraps Intel SGX SDK and provides a Rust development\\nenvironment. The affected Intel SGX SDK version was recommended in Rust SGX SDK\\nv1.1.3 (which is a pre-Apache release). Therefore, people using Rust SGX SDK\\nv1.1.3 with the vulnerable Intel SGX SDK (v2.13 and earlier) are also\\nvulnerable. *However, the current Teaclave SGX SDK is compatible with newer Intel SGX\\nSDK versions. Therefore, we recommend all users to upgrade to the latest Intel\\nSGX SDK.*\\n\\nFor Teaclave (i.e., the Teaclave FaaS platform), it uses Teaclave SGX SDK to\\nbuild a confidential computing platform. Therefore, the Teaclave v0.2.0 released\\nin March used the vulnerable Intel SGX SDK version.\\n*However, the [v0.3.0 released](https://github.com/apache/incubator-teaclave/releases/tag/v0.3.0) [3]\\nin August has upgraded the Intel SGX SDK to v2.14 with the fix. Therefore,\\nthe latest release of Teaclave is not affected by this vulnerability.*\\n\\n## Patches & Mitigations\\n\\nThe vulnerability has been fixed in Intel SGX SDK in this patch:\\n - Patch: <https://github.com/intel/linux-sgx/commit/edfe42a517b3e4b1d81204c3cdef6da6cb35fefc>\\n\\nTeaclave users can apply the following mitigations:\\n\\n- Use Teacalve SGX SDK with Intel SGX SDK for Linux version 2.14 or later\\n- Upgrade to Teaclave 0.3.0 or later\\n\\n## Acknowledgements\\n\\nWe would like to thank Jinhua Cui, National University of Defense Technology and\\nNational University of Singapore, Shweta Shinde, ETH Zurich , Zhijingcheng Yu,\\nNational University of Singapore, and Prateek Saxena, National University of\\nSingapore for notifying us about this issue.\\n\\n## References\\n\\n- [1] <https://jasonyu1996.github.io/SmashEx/>\\n- [2] <https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00548.html>\\n- [3] <https://github.com/apache/incubator-teaclave/releases/tag/v0.3.0>\\n- [SmashEx: Smashing SGX Enclaves Using Exceptions](https://arxiv.org/abs/2110.06657)\\n- [Open Enclave SDK Elevation of Privilege Vulnerability](https://github.com/openenclave/openenclave/security/advisories/GHSA-mj87-466f-jq42)"},{"id":"/2021/10/15/developing-teaclave-application-with-teaclave-trustzone-sdk","metadata":{"permalink":"/blog/2021/10/15/developing-teaclave-application-with-teaclave-trustzone-sdk","source":"@site/blog/2021-10-15-developing-teaclave-application-with-teaclave-trustzone-sdk.md","title":"\u4f7f\u7528 Teaclave TrustZone SDK \u5f00\u53d1 TrustZone \u5e94\u7528","description":"[[TOC]]","date":"2021-10-15T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Wenwen Ruan","key":null,"page":null}],"frontMatter":{"title":"\u4f7f\u7528 Teaclave TrustZone SDK \u5f00\u53d1 TrustZone \u5e94\u7528","date":"2021-10-15T00:00:00.000Z","author":"Wenwen Ruan"},"unlisted":false,"prevItem":{"title":"Security Advisory of SmashEx and CVE-2021-0186","permalink":"/blog/2021/11/01/security-advisory-of-smashex-and-cve-2021-0186"},"nextItem":{"title":"Teaclave Meetup #8","permalink":"/blog/2021/10/14/teaclave-meetup-8"}},"content":"[[TOC]]\\n\\n\u5728 [\u6b22\u8fce RUST OP-TEE TRUSTZONE SDK \u6210\u4e3a TEACLAVE \u5b50\u9879\u76ee](https://teaclave.apache.org/blog/2021-03-15-welcome-rust-optee-trustzone-sdk-cn/) \u4e00\u6587\u4e2d\u5df2\u7ecf\u5bf9Teaclave TrustZone SDK \u9879\u76ee\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u4ecb\u7ecd\u3002\u5728\u672c\u6587\u4e2d\uff0c\u5c06\u4f1a\u4ecb\u7ecd\u4f7f\u7528 Teaclave TrustZone SDK \u5f00\u53d1 TrustZone \u5e94\u7528\u7a0b\u5e8f\u3002\\n \\n## Teaclave TrustZone SDK \u5e94\u7528\u5f00\u53d1\u73af\u5883\u642d\u5efa\\n### \u51c6\u5907\u6761\u4ef6\\n+ Ubuntu \u7cfb\u5217\\n\\n*\u672c\u6587\u57fa\u4e8e\u7684 Teaclave TrustZone SDK \u63d0\u4ea4\u54c8\u5e0c\u503c\uff1a8520a2018705edcebfb7e729bd2ced12414fc052*\\n### \u914d\u7f6e Teaclave TrustZone SDK \u7f16\u8bd1\u73af\u5883\\n\u4e0b\u8f7d Teaclave TrustZone SDK \u9879\u76ee\uff0c\u521d\u59cb\u5316\u76f8\u5173\u7684\u5b50\u6a21\u5757\u5e76\u5b89\u88c5 Rust \u5de5\u5177\u94fe\u4ee5\u53ca\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177 Xargo\u3002\\n\\n```sh\\n$ git clone https://github.com/apache/incubator-teaclave-trustzone-sdk\\n$ cd incubator-teaclave-trustzone-sdk\\n$ ./setup.sh\\n```\\n\\n\u521d\u59cb\u5316 OP-TEE \u5b50\u6a21\u5757\u3002\u521d\u59cb\u5316\u5b8c\u6bd5\u4e4b\u540e\uff0c\u5728 `optee` \u6839\u76ee\u5f55\u4e0b\u9700\u8981\u6709 `build/`, `optee_os/` \u548c `optee_client` \u5b50\u76ee\u5f55\u3002\\n\\n```sh\\n$ git submodule update --init -- optee\\n```\\n\\n\u5728\u7f16\u8bd1\u6837\u4f8b\u4e4b\u524d\uff0c\u9700\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002\\n```sh\\n$ source environment\\n```\\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u76ee\u6807\u5e73\u53f0\u662f `aarch64`\uff0c\u5982\u679c\u5e0c\u671b\u4e3a `arm` \u5e73\u53f0\u7f16\u8bd1\uff0c\u9700\u8981\u5728 `source environment` \u4e4b\u524d\u8bbe\u7f6e `ARCH` \u53d8\u91cf\u3002\\n```sh\\n$ export ARCH=arm\\n$ source environment\\n```\\n\\n\u63a5\u7740\uff0c\u4e0b\u8f7d ARM \u5de5\u5177\u94fe\u5e76\u7f16\u8bd1 OP-TEE \u5e93\u3002\\n\\n```sh\\nmake optee\\n```\\n\\n\u6700\u540e\uff0c\u7f16\u8bd1 Teaclave TrustZone SDK \u5b98\u65b9\u63d0\u4f9b\u7684\u4f8b\u5b50\u3002\\n```sh\\nmake examples\\n```\\n\\n\\n### \u5728 QEMU ARMv8 \u4e0a\u8fd0\u884c Teaclave TrustZone SDK \u5e94\u7528\u7a0b\u5e8f\\n\\n\u73b0\u5728\uff0cTeaclave TrustZone SDK \u5b98\u65b9\u63d0\u4f9b\u7684\u793a\u4f8b\u5df2\u7ecf\u7f16\u8bd1\u597d\u4e86\uff0c\u4f46\u5982\u679c\u9700\u8981\u5728 QEMU ARMv8 \u6a21\u62df\u5668\u4e0a\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\uff0c\u8fd8\u9700\u8981\u51c6\u5907\u4e00\u4e2a\u652f\u6301 OP-TEE \u7684 QEMU \u73af\u5883\uff0c\u4ece\u800c\u5728\u8be5\u73af\u5883\u4e0a\u8fd0\u884c\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684 SDK \u4e2d\u7684\u793a\u4f8b\u3002\\n\u9996\u5148\uff0c\u9700\u8981\u5b89\u88c5 QEMU \u73af\u5883\u9700\u8981\u7684\u4f9d\u8d56\u3002\\n\\n\\n```sh\\n$ sudo apt-get install android-tools-adb android-tools-fastboot autoconf \\\\\\n        automake bc bison build-essential ccache cscope curl device-tree-compiler \\\\\\n        expect flex ftp-upload gdisk iasl libattr1-dev libc6:i386 libcap-dev \\\\\\n        libfdt-dev libftdi-dev libglib2.0-dev libhidapi-dev libncurses5-dev \\\\\\n        libpixman-1-dev libssl-dev libstdc++6:i386 libtool libz1:i386 make \\\\\\n        mtools netcat python-crypto python3-crypto python-pyelftools \\\\\\n        python3-pycryptodome python3-pyelftools python-serial python3-serial \\\\\\n        rsync unzip uuid-dev xdg-utils xterm xz-utils zlib1g-dev\\n```\\n\u4e5f\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 Teaclave TrustZone SDK \u5b98\u65b9\u63d0\u4f9b\u7684 docker\uff0c\u5728 docker \u4e2d\u5f00\u53d1\u5c31\u65e0\u9700\u4e0b\u8f7d\u4e0a\u8ff0\u4f9d\u8d56\u3002\\n```\\n$ docker pull teaclave/teaclave-trustzone-sdk-build:0.2.1\\n# start docker\\n$ docker run -ti teaclave/teaclave-trustzone-sdk-build:0.2.1\\n```\\n\\n\u4e0b\u8f7d QEMU ARMv8 \u5bf9\u5e94\u7684 OP-TEE \u7684\u6e90\u4ee3\u7801\u3002\\n```sh\\n$ mkdir -p ~/bin\\n$ curl https://storage.googleapis.com/git-repo-downloads/repo-1 > ~/bin/repo && chmod a+x ~/bin/repo\\n$ export PATH=~/bin:$PATH\\n$ mkdir optee-qemuv8-3.14.0 && cd optee-qemuv8-3.14.0 && \\\\\\n  repo init -u https://github.com/OP-TEE/manifest.git -m qemu_v8.xml -b 3.14.0 && \\\\\\n  repo sync -j4 --no-clone-bundle\\n```\\n\\n\u7f16\u8bd1 QEMU ARMv8 OP-TEE\u3002\\n```sh\\n$ cd build\\n$ make -j2 toolchains && \\\\\\n  make QEMU_VIRTFS_ENABLE=y CFG_TEE_RAM_VA_SIZE=0x00300000\\n```\\n\u5728\u6f2b\u957f\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4e4b\u540e\uff0c\u8fd8\u9700\u8981\u65b0\u5efa\u4e00\u4e2a\u5171\u4eab\u6587\u4ef6\u5939\uff0c\u7528\u4e8e\u548c QEMU \u5b50\u7cfb\u7edf\u5171\u4eab\u793a\u4f8b\u7684 host apps \u548c TAs\u3002\\n\\n \u9996\u5148\u8981\u5c06 `path/to/example/host/target/aarch64-unknown-linux-gnu/release/example` \u548c `path/to/example/ta/target/aarch64-unknown-optee-trustzone/release/*.ta` \u5206\u522b\u590d\u5236\u5230 `incubator-teaclave-trustzone-sdk/out/host` \u548c `incubator-teaclave-trustzone-sdk/out/ta/`\u3002\u63a5\u7740\u8fd8\u9700\u8981\u5c06 `incubator-teaclave-trustzone-sdk/out/*` \u4e2d\u7684\u6587\u4ef6\u590d\u5236\u5230 QEMU \u5171\u4eab\u6587\u4ef6\u5939 `shared_folder/` \u4e2d\u3002\\n\\n```\\n$ mkdir shared_folder\\n$ (cd /project/root/dir/ && make examples-install)\\n$ cp -r /project/root/dir/out/* shared_folder/\\n```\\n\u5982\u679c\u5904\u4e8e\u4e00\u4e2a\u6ca1\u6709 GUI \u7684\u8fd0\u884c\u73af\u5883\uff0c\u5728\u542f\u52a8 QEMU \u4e4b\u524d\uff0c\u8fd8\u9700\u8981\u4fee\u6539 `qemu_v8.mk` \u4e2d\u7684\u4ee3\u7801\u3002\u4ee5 OP-TEE QEMU 3.14.0 \u7248\u672c\u4e3a\u4f8b\uff0c\u6ce8\u91ca\u6389 `optee-qemuv8-3.14.0/build/qemu_v8.mk` \u4e2d\u7684 386-388 \u884c\u3002\\n```makefile\\n.PHONY: run-only\\nrun-only:\\n        ln -sf $(ROOT)/out-br/images/rootfs.cpio.gz $(BINARIES_PATH)/\\n        $(call check-terminal)\\n        $(call run-help)\\n        # $(call launch-terminal,54320,\\"Normal World\\")\\n        # $(call launch-terminal,54321,\\"Secure World\\")\\n        # $(call wait-for-ports,54320,54321)\\n        cd $(BINARIES_PATH) && $(QEMU_BUILD)/aarch64-softmmu/qemu-system-aarch64 \\\\\\n```\\n\u5728\u542f\u52a8 QEMU \u4e4b\u524d\u524d\uff0c\u9700\u8981\u8fd0\u884c `nc` \u6765\u76d1\u542c\u7aef\u53e3 `54320` \u548c `54321`\u3002\\n```sh\\n$ nc -l 127.0.0.1 -p 54320\\n$ nc -l 127.0.0.1 -p 54321\\n```\\n\u8fdb\u5165 `qemu_v8.mk` \u6240\u5728\u7684\u76ee\u5f55\u542f\u52a8 QEMU\u3002 \\n```\\nmake run-only QEMU_VIRTFS_ENABLE=y QEMU_VIRTFS_HOST_DIR=$(pwd)/shared_folder\\n```\\n\u5f53 QEMU \u542f\u52a8\u4e4b\u540e\uff0c\u7aef\u53e3 `54320` \u7a97\u53e3\u4e2d\u8fd0\u884c\u7684\u662f\u666e\u901a\u4e16\u754c\uff0c\u7aef\u53e3 `54321` \u7a97\u53e3\u4e2d\u8fd0\u884c\u7684\u662f\u5b89\u5168\u4e16\u754c\u3002\u5728\u666e\u901a\u4e16\u754c\u4e2d\uff0c\u6839\u636e\u63d0\u793a\u8f93\u5165 `root` \u767b\u5f55\u540e\uff0c\u9700\u8981\u5c06\u5171\u4eab\u6587\u4ef6\u5939\u6302\u8f7d\u5230 QEMU \u5b50\u7cfb\u7edf\u4e2d\uff0c\u7528\u4e8e\u5728 QEMU \u4e2d\u8bbf\u95ee\u7f16\u8bd1\u597d\u7684 CA/TA \u53ef\u6267\u884c\u6587\u4ef6\u3002\\n\\n```sh\\n$ mkdir shared && mount -t 9p -o trans=virtio host shared\\n```\\n\u63a5\u7740\uff0c\u9700\u8981\u5c06 TA \u590d\u5236\u5230 `/lib/optee_armtz` \u76ee\u5f55\u4e0b\uff0c\u63d0\u4f9b\u7ed9\u5b89\u5168\u4e16\u754c\u8c03\u7528\u3002\\n```sh\\n$ cd shared && cp ta/*.ta /lib/optee_armtz/\\n```\\n\u8fdb\u5165 `host` \u6587\u4ef6\u5939\u4e2d\u5e76\u6267\u884c host apps\u3002\\n```sh\\n$ cd host\\n$ ./hello_world\\noriginal value is 29\\ninc value is 129\\ndec value is 29\\nSuccess\\n```\\n\u81f3\u6b64\uff0c\u6211\u4eec\u6210\u529f\u5730\u5728 QEMU \u73af\u5883\u4e2d\u8fd0\u884c\u4e86 Teaclave TrustZone SDK \u7684 `hello_world-rs` \u793a\u4f8b\u3002\\n\\n### \u914d\u7f6e Teaclave TrustZone SDK \u5e94\u7528\u7a0b\u5e8f\u7684 debug \u73af\u5883\\n\\n\u5728\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u96be\u514d\u4f1a\u6709 debug \u7684\u9700\u6c42\uff0c\u5728\u8fd9\u4e0d\u4e00\u90e8\u5206\uff0c\u5c06\u4f1a\u7b80\u5355\u4ecb\u7ecd\u5982\u4f55\u5728 Teaclave TrustZone SDK \u4e2d\u914d\u7f6e debug \u73af\u5883\u3002\\n\\n\u5728\u7f16\u8bd1 QEMU ARMv8 OPTEE \u65f6\u9700\u8981\u5173\u95ed ASLR\uff0c\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u4fee\u6539 `OP-TEE/optee_os/mk/config.mk` \u6587\u4ef6\u4e2d\u7684 `CFG_CORE_ASLR` \u4e3a `n`\uff0c\u6ce8\u610f\u4fee\u6539\u4e4b\u540e\u8fd8\u9700\u8981\u91cd\u65b0\u7f16\u8bd1 `make run`\u3002\\n```makefile\\n# CFG_CORE_ASLR ?= y\\nCFG_CORE_ASLR ?= n\\n```\\n\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0\u7f16\u8bd1\u4fe1\u606f\uff1a `make run CFG_CORE_ASLR=n`\u3002\\n\\n\u7531\u4e8e\u7a0b\u5e8f\u662f\u5728\u8fdc\u7a0b\u7cfb\u7edf\u4e0a (QEMU) \u4e0a\u88ab debugged\uff0c\u6240\u4ee5\u5728\u7f16\u8bd1\u65f6\u8fd8\u9700\u8981\u52a0\u4e0a `GDBSERVER=y`\u3002\\n\\n\u5728\u542f\u52a8 gdb \u4e4b\u540e\uff0c\u6267\u884c `target remote :1234` \u547d\u4ee4\u8fde\u63a5\u4e0a QEMU GDB \u670d\u52a1\u5668\u7aef\u53e3\u3002\\n```sh\\n$ ./path/to/qemu-v8-project/out-br/host/bin/aarch64-buildroot-linux-gnu-gdb\\n(gdb) target remote :1234\\nRemote debugging using :1234\\nwarning: No executable has been specified and target does not support\\ndetermining executable automatically.  Try using the \\"file\\" command.\\n0xffffb30b00ea12b4 in ?? ()\\n```\\n\u63a5\u4e0b\u6765\uff0c\u52a0\u8f7d TEE \u5185\u6838\u7b26\u53f7\u8868\u3002\\n```sh\\n(gdb) symbol-file /path/to/qemu-v8-project/optee_os/out/arm/core/tee.elf\\n```\\n\u4ee5 `hello_world-rs` \u4e3a\u4f8b\uff0c\u6839\u636e\u5b89\u5168\u4e16\u754c\u7a97\u53e3\u63d0\u793a\uff0c\u53ef\u77e5 `hello_world-rs` \u7684 TA text \u90e8\u5206\u7684\u8d77\u59cb\u5730\u5740\u4e3a 0x40014000\u3002\\n```\\nD/LD:  ldelf:168 ELF (133af0ca-bdab-11eb-9130-43bf7873bf67) at 0x40014000\\n```\\n\u6839\u636e\u8be5\u5730\u5740\u63d0\u793a\uff0c\u4ece\u8be5\u5730\u5740\u5f00\u59cb\u52a0\u8f7d `hello_world-rs` \u7684 ta \u7b26\u53f7\u8868\u3002\\n```sh\\n(gdb) add-symbol-file /path/to/examples/hello_world-rs/ta/target/aarch64-unknown-optee-trustzone/debug/ta 0x40014000\\n```\\n\u7136\u540e\uff0c\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u5728\u76f8\u5e94\u7684\u51fd\u6570\u6216\u5730\u5740\u4e0a\u6253\u65ad\u70b9\u3002\\n```\\n(gdb) b open_session\\n```\\n\\n![QEMU \u6267\u884c\u793a\u610f\u56fe](./img/2021-10-15-qemu-world-execution-windows.png)\\n\\n## Teaclave TrustZone SDK \u793a\u4f8b hello_world-rs \u5256\u6790\\n### `hello_world-rs` \u76ee\u5f55\u7ed3\u6784\\n```\\n\u251c\u2500\u2500 Makefile\\n\u251c\u2500\u2500 host\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.lock\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.toml\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Makefile\\n\u2502\xa0\xa0 \u2514\u2500\u2500 src\\n\u2502\xa0\xa0     \u2514\u2500\u2500 main.rs\\n\u251c\u2500\u2500 proto\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.toml\\n\u2502\xa0\xa0 \u251c\u2500\u2500 build.rs\\n\u2502\xa0\xa0 \u2514\u2500\u2500 src\\n\u2502\xa0\xa0     \u2514\u2500\u2500 lib.rs\\n\u251c\u2500\u2500 ta\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.lock\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.toml\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Makefile\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Xargo.toml\\n\u2502\xa0\xa0 \u251c\u2500\u2500 build.rs\\n\u2502\xa0\xa0 \u251c\u2500\u2500 src\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 main.rs\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ta_aarch64.lds\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ta_arm.lds\\n\u2502\xa0\xa0 \u2514\u2500\u2500 ta_static.rs\\n\u2514\u2500\u2500 uuid.txt\\n\\n```\\n+ `host` \u6587\u4ef6\u5939\u4e2d\u5b58\u653e\u7684\u662f\u666e\u901a\u4e16\u754c\u7684 `untrusted code`\u3002\\n  + `host/src/main.rs` \u662f `hello_world-rs` \u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u7684\u5165\u53e3\uff0c`Cargo.toml` \u63cf\u8ff0\u4e86 `host` \u90e8\u5206\u7684\u4f9d\u8d56\uff0c `Cargo.lock` \u4e2d\u5305\u542b\u4e86\u4f9d\u8d56\u9879\u7684\u5b8c\u6574\u4fe1\u606f\uff0c`Makefile` \u5b9a\u4e49\u4e86 `host` \u90e8\u5206\u7684\u7f16\u8bd1\u4fe1\u606f\u3002\\n+ `ta` \u6587\u4ef6\u5939\u4e2d\u5b58\u653e\u7684\u662f\u5b89\u5168\u4e16\u754c\u4e2d\u7684 `trusted code`\u3002\\n  + \u76f8\u6bd4\u8f83 `host`\uff0c`ta` \u6587\u4ef6\u5939\u4e2d\u591a\u4e86\u4ee5\u4e0b\u6587\u4ef6\uff1a`Xargo.toml` \u662f TA \u7684\u4ea4\u53c9\u7f16\u8bd1\u6587\u4ef6 \uff0c`ta_aarch64.lds` \u548c `ta_arm.lds` \u5206\u522b\u5b9a\u4e49\u4e86\u5728 64 \u4f4d\u67b6\u6784\u548c 32 \u4f4d\u67b6\u6784\u4e0b teaclave trustzone sdk \u5e94\u7528\u7a0b\u5e8f\u5404\u90e8\u5206\u5728\u7a0b\u5e8f\u5730\u5740\u7a7a\u95f4\u5185\u7684\u5e03\u5c40\uff1b`ta_static.rs` \u5b9a\u4e49\u4e86 TA \u4e2d\u7684\u9759\u6001\u6570\u636e\u4fe1\u606f\u3002\\n+ `proto` \u6587\u4ef6\u5939\u4e2d\u5b58\u653e\u7684\u662f CA (Client Application) \u548c TA (Trusted Application) \u5171\u4eab\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u627f\u62c5\u7740\u89e3\u6790 `uuid.txt` \u63d0\u53d6 UUID \u7684\u4efb\u52a1\u3002\\n+ `uuid.txt` \u6587\u4ef6\u4e2d\u8bb0\u5f55\u7684\u662f TA \u7684 UUID\uff0c\u662f\u6bcf\u4e2a TA \u72ec\u4e00\u65e0\u4e8c\u7684\u8eab\u4efd\u6807\u8bc6\u3002\\n\\n### `hello_world-rs` \u91cd\u8981\u4ee3\u7801\u6587\u4ef6\u89e3\u6790\\n\\n+ `host/src/main.rs`\\n\\n\u8fdb\u5165 `main` \u51fd\u6570\uff0c\u9996\u5148\u8c03\u7528 `Context::new` \u51fd\u6570\u5efa\u7acb\u8d77 `hello_world-rs` CA \u548c TA \u7684\u903b\u8f91\u8054\u7cfb\uff0c`ctx` \u6307\u5411\u7c7b\u578b\u4e3a `Context` \u7684\u53d8\u91cf\u7684\u5730\u5740\uff0c\u7528\u4e8e CA \u548c TA \u7684\u8fde\u63a5\u548c\u901a\u4fe1\u3002\\n```rust\\nlet mut ctx = Context::new()?;\\n```\\n\u8c03\u7528 `open_session` \u5728 CA \u548c\u5bf9\u5e94\u7684 TA \u4e2d\u6253\u5f00\u4e00\u4e2a `session`\uff0c\u5e76\u5c06 `hello_world-rs` \u7684 UUID \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\uff0c\u7528\u4e8e\u6307\u5f15 CA \u8fde\u63a5\u5bf9\u5e94 UUID \u503c\u7684 TA\u3002\\n```rust\\nlet uuid = Uuid::parse_str(UUID).unwrap();\\nlet mut session = ctx.open_session(uuid)?;\\n```\\n\\n\u5c06 `&mut session` \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 `hello_world` \u51fd\u6570\u4e2d\u3002\\n```rust\\nhello_world(&mut session)?;\\n```\\n\\n\u8fdb\u5165\u5230 `hello_world` \u51fd\u6570\u4e2d\uff0c\u9996\u5148\u5c06\u8981\u8fdb\u884c\u8fd0\u7b97\u7684 `u32` \u64cd\u4f5c\u6570\u7528 `ParamValue` \u7c7b\u578b\u5305\u88c5\u4e3a\u64cd\u4f5c\u6570 `p0`\uff0c\u8bbe\u7f6e\u5176\u503c\u4e3a29\uff0c\u7c7b\u578b\u4e3a `ValueInout`\uff0c\u8868\u793a\u540c\u65f6\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002\\n```rust\\nlet p0 = ParamValue::new(29, 0, ParamType::ValueInout);\\n```\\n`operation` \u7528\u4e8e\u4fdd\u5b58 CA \u8981\u4f20\u9012\u7ed9 TA \u7684\u53c2\u6570\u4fe1\u606f\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e00\u822c\u4fdd\u7559\u4e3a 0\uff0c\u7531\u4e8e\u8fd9\u91cc\u53ea\u6709\u4e00\u4e2a\u8981\u4f20\u9012\u7684\u53c2\u6570 `p0`\uff0c\u5176\u4ed6\u53c2\u6570\u90fd\u4fdd\u7559\u4e3a `ParamNone`\u3002\\n```rust\\nlet mut operation = Operation::new(0, p0, ParamNone, ParamNone, ParamNone);\\n```\\n\\nCA \u7aef\u4f7f\u7528\u83b7\u53d6\u5230\u7684 `session`, `command_id` \u548c\u8981\u4f20\u9012\u7684\u53c2\u6570 `operation` \u8c03\u7528 `invoke_command` \u6267\u884c\u7279\u5b9a\u7684 `command`\uff0c\u8be5\u64cd\u4f5c\u5c06\u4f1a\u5207\u6362\u5230\u5b89\u5168\u4e16\u754c\u3002\\n```rust\\nsession.invoke_command(Command::IncValue as u32, &mut operation)?;\\n```\\n\\n+ `ta/src/main.rs`\\n\\n`ta/src/main.rs` \u4e2d\u7684 `invoke_command` \u51fd\u6570\u53c2\u6570\u4e0e host \u4e2d\u8c03\u7528\u7684 `invoke_command` \u7565\u6709\u4e0d\u540c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f `Paramters` \u7c7b\u578b\u3002\u5f53\u6570\u636e\u4ece CA \u4f20\u9012\u5230 TA \u65f6\uff0c\u5b9e\u9645\u4e0a\u6267\u884c\u7684\u662f\u6309 bit \u7684\u590d\u5236\u64cd\u4f5c\uff0c\u6240\u4ee5 `params` \u4e2d\u7684\u6570\u636e\u5c31\u662f\u4ece `operation` \u4e2d\u4f20\u9012\u8fc7\u6765\u7684\u6570\u636e.\\n```rust\\nfn invoke_command(cmd_id: u32, params: &mut Parameters) -> Result<()> {\\n```\\n\\n`values` \u4ece `params` \u53d6\u51fa\u8981\u64cd\u4f5c\u7684 `u32` \u503c\uff0c`match` \u8868\u8fbe\u5f0f\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570 `cmd_id` \u5339\u914d\u5bf9\u5e94\u7684\u64cd\u4f5c\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u5982\u679c\u5339\u914d\u5230 `Command::IncValue`\uff0c\u5c31\u5bf9 `values` \u4e2d\u7684 `u32` \u503c\u6267\u884c +100 \u7684\u64cd\u4f5c\uff1b\u5982\u679c\u5339\u914d\u5230 `Command::DecValue`\uff0c\u5c31\u6267\u884c -100 \u7684\u64cd\u4f5c\uff1b\u5982\u679c\u5339\u914d\u5230\u5176\u4ed6\u503c\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u9519\u8bef\u53c2\u6570\u7684\u9519\u8bef\u7c7b\u578b\u3002\\n\\n```rust\\nfn invoke_command(cmd_id: u32, params: &mut Parameters) -> Result<()> {\\n    trace_println!(\\"[+] TA invoke command\\");\\n    let mut values = unsafe { params.0.as_value().unwrap() };\\n    match Command::from(cmd_id) {\\n        Command::IncValue => {\\n            values.set_a(values.a() + 100);\\n            Ok(())\\n        }\\n        Command::DecValue => {\\n            values.set_a(values.a() - 100);\\n            Ok(())\\n        }\\n        _ => Err(Error::new(ErrorKind::BadParameters)),\\n    }\\n}\\n```\\n+ `proto/src/lib.rs`\\n\\n`lib.rs` \u4e2d\u7684\u679a\u4e3e\u53d8\u91cf `Command` \u58f0\u660e\u662f\u5f00\u53d1\u8005\u8981\u5b9e\u73b0\u7684\u547d\u4ee4\u3002\\n\\n```rust\\npub enum Command {\\n    IncValue,\\n    DecValue,\\n    Unknown,\\n}\\n```\\n\\n### \u7f16\u8bd1\u4e4b\u540e\u7684 `hello_world-rs` \u4ee3\u7801\u76ee\u5f55\\n\u7f16\u8bd1\u4e4b\u540e\u7684\u4ee3\u7801\u76ee\u5f55\u5982\u4e0b\u6240\u793a\uff0c\u8fd9\u91cc\u7701\u7565\u4e86 `release` \u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9\u3002\\n\\n```\\n\u251c\u2500\u2500 Makefile\\n\u251c\u2500\u2500 host\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.lock\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.toml\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Makefile\\n\u2502\xa0\xa0 \u251c\u2500\u2500 src\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 main.rs\\n\u2502\xa0\xa0 \u2514\u2500\u2500 target                               #[generate] \\n\u2502\xa0\xa0     \u251c\u2500\u2500 aarch64-unknown-linux-gnu        #[generate] \\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 release                      #[generate]\\n\u2502\xa0\xa0     \u2514\u2500\u2500 release                          #[generate]\\n\u251c\u2500\u2500 proto\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.lock\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.toml\\n\u2502\xa0\xa0 \u251c\u2500\u2500 build.rs\\n\u2502\xa0\xa0 \u251c\u2500\u2500 src\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 lib.rs\\n\u2502\xa0\xa0 \u2514\u2500\u2500 target                               #[generate]\\n\u2502\xa0\xa0     \u2514\u2500\u2500 rls                              #[generate]\\n\u2502\xa0\xa0         \u2514\u2500\u2500 debug                        #[generate]\\n\u251c\u2500\u2500 ta\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.lock\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.toml\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Makefile\\n\u2502\xa0\xa0 \u251c\u2500\u2500 Xargo.toml\\n\u2502\xa0\xa0 \u251c\u2500\u2500 build.rs\\n\u2502\xa0\xa0 \u251c\u2500\u2500 src\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 main.rs\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ta_aarch64.lds\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ta_arm.lds\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ta_static.rs\\n\u2502\xa0\xa0 \u2514\u2500\u2500 target                               #[generate]\\n\u2502\xa0\xa0     \u251c\u2500\u2500 aarch64-unknown-optee-trustzone  #[generate]\\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 release                      #[generate]\\n\u2502\xa0\xa0     \u2514\u2500\u2500 release                          #[generate]\\n\u2514\u2500\u2500 uuid.txt\\n```\\n`hello_world-rs` \u7f16\u8bd1\u8fc7\u7a0b\u66f4\u7c7b\u4f3c\u4e8e Rust \u7a0b\u5e8f\u7f16\u8bd1\u3002\\n+ \u7f16\u8bd1\u4e0d\u53ef\u4fe1\u90e8\u5206 host \u6587\u4ef6\u5939\uff0c\u751f\u6210 `hello_world-rs` \u53ef\u6267\u884c\u6587\u4ef6\uff1b\\n+ \u4ea4\u53c9\u7f16\u8bd1\u53ef\u4fe1\u90e8\u5206 ta \u6587\u4ef6\u5939\uff0c\u518d\u7528 UUID \u548c\u5bc6\u94a5\u8fdb\u884c\u7b7e\u540d\uff0c\u751f\u6210 `UUID.ta` \u53ef\u6267\u884c\u6587\u4ef6\u3002\\n+ \u5728\u6267\u884c\u65f6\uff0c`hello_world-rs` \u5bf9 `UUID.ta` \u9a8c\u8bc1\u901a\u8fc7\u540e\u8c03\u7528\u6267\u884c\u3002\\n\\n\\n## \u5f00\u53d1\u8005\u5982\u4f55\u5f00\u53d1\u81ea\u5df1\u7684 Teaclave TrustZone SDK \u5e94\u7528\u7a0b\u5e8f\\n\\n\u548c\u524d\u9762\u4ecb\u7ecd\u8fc7\u7684 [\u4f7f\u7528 TEACLAVE SGX SDK \u5f00\u53d1 SGX \u5e94\u7528](https://teaclave.apache.org/blog/2021-08-25-developing-sgx-application-with-teaclave-sgx-sdk/) \u76f8\u4f3c\uff0c\u8fd9\u91cc\u4e5f\u540c\u6837\u901a\u8fc7\u5bf9 Teaclave TrustZone SDK \u793a\u4f8b\u7a0b\u5e8f `hello_world-rs` \u8fdb\u884c\u6539\u5199\u6765\u4ecb\u7ecd\u5982\u4f55\u6784\u9020\u81ea\u5df1\u7684 Teaclave TrustZone SDK\u3002\\n\\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cTeaclave TrustZone SDK \u662f\u901a\u8fc7 UUID \u552f\u4e00\u6807\u8bc6\u7cfb\u7edf\u4e2d\u7684 TA\uff0cUUID \u503c\u4e0d\u80fd\u91cd\u590d\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u9700\u8981\u901a\u8fc7 [ITU-T UUID generator](https://www.itu.int/en/ITU-T/asn1/Pages/UUID/uuids.aspx) \u7f51\u7ad9\u7533\u8bf7\u5c5e\u4e8e\u81ea\u5df1\u7684\u552f\u4e00\u7684 UUID\uff0c\u5e76\u5c06 `uuid.rs` \u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u4fee\u6539\u4e3a\u65b0\u5f97\u5230\u7684 UUID \u503c\u3002\\n```\\n1487a406-160d-4641-957e-66292f8d1309\\n```\\n\\n\u5047\u8bbe\u5f00\u53d1\u76ee\u6807\u662f\u4e3a\u4e24\u4e2a `u8` \u6570\u7ec4\u6c42\u5f97\u4ea4\u96c6\u548c\u5e76\u96c6\uff0c\u4e5f\u5c31\u662f\u8981\u5b9e\u73b0\u4ea4\u96c6\u51fd\u6570 `Intersection` \u548c\u5e76\u96c6\u51fd\u6570 `Union` \u4e24\u4e2a\u529f\u80fd\u51fd\u6570\u3002\\n\\n\u5bf9 `proto/lib.rs` \u8fdb\u884c\u4fee\u6539\uff0c\u5c06 `Command` \u4e2d\u7684\u6210\u5458\u66ff\u6362\u4e3a\u5f85\u5b9e\u73b0\u7684 `Intersection` \u548c `Union`\u3002\\n\\n```rust\\npub enum Command {\\n    Intersection,\\n    Union,\\n    Unknown,\\n}\\n\\nimpl From<u32> for Command {\\n    #[inline]\\n    fn from(value: u32) -> Command {\\n        match value {\\n            0 => Command::Intersection,\\n            1 => Command::Union,\\n            _ => Command::Unknown,\\n        }\\n    }\\n}\\n```\\n\\n\u63a5\u7740\uff0c\u8fdb\u5165 `host/src/main.rs` \u4e2d\u7684 `main` \u51fd\u6570\uff0c\u6dfb\u52a0\u8fdb\u884c\u6570\u636e\u8ba1\u7b97\u7684\u51fd\u6570\uff0c\u5c06\u7528\u4e8e\u4e0e TA \u901a\u4fe1\u7684 session \u5185\u5b58\u5730\u5740\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u5230 `data_compute` \u4e2d\u3002\\n\\n```rust\\ndata_compute(&mut session)?;\\n```\\n\\n\u5728 `data_compute` \u4e2d\uff0c\u9996\u5148\u58f0\u660e\u8981\u8fdb\u884c\u6570\u636e\u5904\u7406\u7684\u4e24\u4e2a `u8` \u6570\u7ec4 `nums1` \u548c `nums2`\uff0c\u4ee5\u53ca\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u5904\u7406\u7ed3\u679c\u7684 `resu`\u3002\u5728\u793a\u4f8b\u4ee3\u7801 `hello_world` \u4e2d\u7684\u53d8\u91cf\u58f0\u660e\u4f7f\u7528\u7684\u662f `ParamValue`\uff0c\u4f46\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u8bbf\u95ee\u6570\u7ec4\uff0c\u4e00\u6bb5\u8fde\u7eed\u7684\u5185\u5b58\u53d8\u91cf\u800c\u975e\u53d8\u91cf\u3002\u901a\u8fc7\u9605\u8bfb Teaclave TrustZone SDK client \u7aef\u7684 Rust \u4ed3\u5e93 [Crate optee_teec](https://teaclave.apache.org/api-docs/trustzone-sdk/optee-teec/optee_teec/index.html)\uff0c\u53ef\u77e5 `ParamTmpRef` \u7528\u4e8e\u5b9a\u4e49\u4e34\u65f6\u5185\u5b58\u8bbf\u95ee\u3002\u4e8e\u662f\u5c06\u8fd9\u4e09\u4e2a\u6570\u7ec4\u5730\u5740\u4f5c\u4e3a\u53c2\u6570\u65b0\u5efa `ParamTmpRef` \u7c7b\u578b\uff0c\u5e76\u5c06 `ParamTmpRef` \u7c7b\u578b\u53d8\u91cf\u4f20\u9012\u5230 `operation` \u4e2d\uff0c\u7528\u4e8e\u4f20\u9012\u7ed9 TA \u4ea4\u4e92\u4fe1\u606f\u3002\\n\\n\u5728\u51c6\u5907\u597d\u4e0e TA \u4ea4\u4e92\u7684\u4fe1\u606f\u540e\uff0c\u8c03\u7528 `invoke_command` \u901a\u77e5\u5bf9\u5e94\u7684 TA \u6267\u884c `Command::Intersection` \u6307\u5b9a\u7684\u64cd\u4f5c\u3002\\n\\n```rust\\n// in host/src/main.rs\\nfn data_compute(session: &mut Session) -> optee_teec::Result<()> {\\n    let nums1:[u8; 5] = [1, 2, 3, 4, 5];\\n    let nums2:[u8; 5] = [4, 5, 6, 7, 8];\\n    let mut resu = vec![0; 10];\\n\\n    let p1 = ParamTmpRef::new_input(&nums1);\\n    let p2 = ParamTmpRef::new_input(&nums2);\\n    let p3 = ParamTmpRef::new_output(&mut resu);\\n    let mut operation = Operation::new(0, p1, p2, p3, ParamNone);\\n\\n    println!(\\"intersection invoke\\");\\n    session.invoke_command(Command::Intersection as u32, &mut operation)?;\\n}\\n```\\n`invoke_command` \u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u5728 `ta/sec/main.rs` \u6587\u4ef6\u4e2d\u7684 `invoke_command`\u3002\u5171\u4eab\u7684\u53c2\u6570\u901a\u8fc7 `params` \u4ece CA \u4f20\u9012\u5230 TA \u4e2d\uff0c\\n\u540c\u6837\uff0c\u53ef\u4ee5\u6839\u636e TA \u7aef\u7684 Rust \u4ed3\u5e93 [optee_utee](https://teaclave.apache.org/api-docs/trustzone-sdk/optee-utee/optee_utee/index.html) \u63d0\u4f9b\u7684\u63a5\u53e3\u51fd\u6570\u62bd\u4e1d\u5265\u8327\u822c\u5730\u63d0\u53d6\u51fa\u6765 `ParamMemref` \u7c7b\u578b\u7684 `nums1`, `nums2` \u548c `vec_resu`\u3002\\n\\n```rust\\n    let nums1 = unsafe { params.0.as_memref().unwrap().raw() };\\n    let nums2 = unsafe { params.1.as_memref().unwrap().raw() };\\n    let mut vec_resu = unsafe { params.2.as_memref().unwrap().raw() };\\n\\n    let nums1_size = unsafe { (*nums1).size };\\n    let nums2_size = unsafe { (*nums2).size };\\n```\\n\\n\u73b0\u5728\uff0c\u8fdb\u5165 `match` \u8868\u8fbe\u5f0f\u4e2d\uff0c\u5c06 `Command::from` \u7684\u679a\u4e3e\u4fee\u6539\u4e3a `Command::Intersection` \u548c `Command::Union`\u3002\u8981\u5b9e\u73b0\u7684\u51fd\u6570\u5c31\u586b\u5145\u5230\u5bf9\u5e94\u7684\u5206\u652f\u62ec\u53f7\u4e2d\u3002\\n\\n```rust\\n  match Command::from(cmd_id) {\\n    Command::Intersection => {\\n      Ok(())\\n    }\\n    Command::Union => {\\n      Ok(())\\n    }\\n```\\n\\n\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u5b9e\u73b0\u7684\u662f\u6c42\u4e24\u4e2a\u6570\u7ec4\u4e4b\u95f4\u7684\u4ea4\u96c6\u5143\u7d20\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u662f\u901a\u8fc7\u4e00\u4e2a\u989d\u5916\u7684\u6563\u5217\u96c6 `set`\uff0c\u8bb0\u5f55 `nums1` \u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u7136\u540e\u5bf9 `nums2` \u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u904d\u5386\uff0c\u5982\u679c `nums2` \u4e2d\u7684\u5143\u7d20\u4e5f\u51fa\u73b0\u5728\u4e86 `set` \u4e2d\uff0c\u90a3\u4e48\u8be5\u5143\u7d20\u4e3a `nums1` \u548c `nums2` \u5171\u6709\uff0c\u662f\u4ea4\u96c6\u5143\u7d20\uff0c\u5199\u5165\u7ed3\u679c\u5411\u91cf `vec_resu` \u4e2d\uff0c\u5e76\u79fb\u9664\u6389 `set` \u4e2d\u7684\u8be5\u5143\u7d20\u3002\u6700\u540e\uff0c\u5c06\u7ed3\u679c\u5411\u91cf\u7684 `size` \u4fee\u6539\u4e3a\u5171\u6709\u7684\u4ea4\u96c6\u5143\u7d20\u7684\u4e2a\u6570\u3002\u5176\u4e2d\uff0c\u8981\u8bfb\u53d6 `nums1` \u548c `nums2` \u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u8fd8\u9700\u8981\u89e3\u5f15\u7528 `ParamMemref` \u7c7b\u578b\u7684\u6307\u9488\u8bfb\u53d6\u51fa\u6307\u5411\u5143\u7d20\u503c\u7684 `buffer` \u6307\u9488\u5730\u5740\uff0c\u518d\u4f7f\u7528 `offset` \u504f\u79fb\u6307\u9488\u4ece\u800c\u8bfb\u51fa `nums1` \u548c `nums2` \u7684\u503c\u3002\\n\\n```rust\\n      let mut set: HashSet<u8> = HashSet::new();\\n      let mut vec_count = 0;\\n      for i in 0..nums1_size {\\n        let mut val_nums1 = 0;\\n        unsafe {\\n          val_nums1 = *((*nums1).buffer as *mut u8).offset(i as isize);\\n        };\\n        set.insert(val_nums1);\\n      }\\n\\n      for i in 0..nums2_size {\\n        let mut val_nums2 = 0;\\n        unsafe {\\n          val_nums2 = *((*nums2).buffer as *mut u8).offset(i as isize);\\n        };\\n\\n        if set.contains(&val_nums2) {\\n          unsafe { *((*vec_resu).buffer as *mut u8).offset(vec_count as isize) = val_nums2; }\\n          vec_count += 1;\\n          set.remove(&val_nums2);\\n        }\\n      }\\n      unsafe{ (*vec_resu).size = vec_count; }\\n```\\n\\n\u5bf9\u4e8e `Union` \u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u540c\u6837\u662f\u5229\u7528\u4e00\u4e2a\u989d\u5916\u7684\u6563\u5217\u96c6 `set`\uff0c\u8bb0\u5f55 `nums1` \u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u76f4\u63a5\u5c06 `nums1` \u4e2d\u7684\u5143\u7d20\u5199\u5165\u7ed3\u679c\u5411\u91cf `vec_resu` \u4e2d\uff0c\u800c\u540e\u518d\u4f9d\u6b21\u8bfb\u53d6 `nums2` \u4e2d\u7684\u5143\u7d20\uff0c\u5982\u679c\u8be5\u5143\u7d20\u6ca1\u6709\u5728 `set` \u4e2d\u51fa\u73b0\uff0c\u5219\u5199\u5165\u7ed3\u679c\u5411\u91cf `vec_resu` \u548c\u6563\u5217\u96c6 `set` \u4e2d\u3002\\n```rust\\n      let mut set: HashSet<u8> = HashSet::new();\\n      let mut vec_count = 0;\\n      for i in 0..nums1_size {\\n        let mut val_nums1 = 0;\\n        unsafe {\\n          val_nums1 = *((*nums1).buffer as *mut u8).offset(i as isize);\\n          *((*vec_resu).buffer as *mut u8).offset(vec_count as isize) = val_nums1;\\n        }\\n        vec_count += 1;\\n        set.insert(val_nums1);\\n      }\\n\\n      for i in 0..nums2_size {\\n        let mut val_nums2 = 0;\\n        unsafe {\\n          val_nums2 = *((*nums2).buffer as *mut u8).offset(i as isize);\\n        };\\n\\n        if !set.contains(&val_nums2) {\\n          unsafe { *((*vec_resu).buffer as *mut u8).offset(vec_count as isize) = val_nums2; }\\n          vec_count += 1;\\n          set.insert(val_nums2);\\n        }\\n      }\\n      unsafe{ (*vec_resu).size = vec_count; }\\n\\n```\\n\u56de\u5230 `host/src/main.rs`\uff0c\u901a\u8fc7 `updated_size` \u51fd\u6570\u8bfb\u53d6\u5230\u5728 `ta/src/main.rs` \u4e2d\u5bf9 `vec_resu` \u65b0\u8bbe\u7f6e\u7684 `size` \u503c\uff0c\u4e5f\u5c31\u662f `nums1` \u548c `nums2` \u5171\u6709\u7684\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u6700\u540e\u6253\u5370\u51fa\u7ed3\u679c\u5411\u91cf `resu` \u7684\u503c\u3002 \\n\\n```rust\\n    // in data_compute function\\n    let updated_size = operation.parameters().2.updated_size();\\n    println!(\\"Intersection resu = {:?}\\", &resu[..updated_size]);\\n```\\n\\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u57fa\u4e8e Teaclave TrustZone SDK \u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u6c42\u4ea4\u96c6\u548c\u5e76\u96c6\u51fd\u6570\u3002\\n\\n## \u603b\u7ed3\\n\\n\u672c\u6587\u9996\u5148\u4ecb\u7ecd Teaclave TrustZone SDK \u9879\u76ee\u7684\u73af\u5883\u914d\u7f6e\u8fc7\u7a0b\uff0c\u7136\u540e\u4ecb\u7ecd\u4e86\u7b80\u5355\u793a\u4f8b `hello_world-rs` \u7684\u7ec4\u7ec7\u7ed3\u6784\u548c\u7f16\u8bd1\u8fc7\u7a0b \uff0c\u6700\u540e\uff0c\u901a\u8fc7\u4fee\u6539 `hello_world-rs` \u5b9e\u73b0 `intersection` \u548c `union` \u51fd\u6570\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e\u63d0\u4f9b\u7684 SampleCode \u8fdb\u884c Teaclave TrustZone SDK \u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u3002 \\n\\n## \u5ef6\u4f38\u9605\u8bfb\\n+ [Teaclave TrustZone SDK \u6587\u6863](https://teaclave.apache.org/trustzone-sdk-docs/)\\n+ [Teaclave TrustZone SDK \u9879\u76ee\u8bba\u6587\uff1a\u300aRusTEE: Developing Memory-Safe ARM TrustZone Applications\u300b](https://dl.acm.org/doi/10.1145/3427228.3427262)"},{"id":"/2021/10/14/teaclave-meetup-8","metadata":{"permalink":"/blog/2021/10/14/teaclave-meetup-8","source":"@site/blog/2021-10-14-teaclave-meetup-8.md","title":"Teaclave Meetup #8","description":"Agenda","date":"2021-10-14T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #8","date":"2021-10-14T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"\u4f7f\u7528 Teaclave TrustZone SDK \u5f00\u53d1 TrustZone \u5e94\u7528","permalink":"/blog/2021/10/15/developing-teaclave-application-with-teaclave-trustzone-sdk"},"nextItem":{"title":"Podling Teaclave Report - October 2021","permalink":"/blog/2021/10/06/podling-teaclave-report-october-2021"}},"content":"## Agenda\\n\\n- Recent update in Teaclave \u2014 Mingshen Sun\\n- Using and Customizing Teaclave SGX SDK \u2014 Shunfan Zhou\\n\\n## Notes\\n\\n### Recent Update in Teaclave \u2014 Mingshen\\n\\n**Platform**\\n\\n- [docker] start Teaclave docker services with auto-detection mechanism (#559).\\n- Use `run-teaclave-service.sh` instead of using `docker-compose` directly.\\n\\n**SGX SDK**\\n\\n- v1.1.4-testing: [https://github.com/apache/incubator-teaclave-sgx-sdk/commits/v1.1.4-testing](https://github.com/apache/incubator-teaclave-sgx-sdk/commits/v1.1.4-testing)\\n    - Rust `nightly-2021-09-13`\\n    - Support Intel SGX SDK 2.15 and DCAP 1.12\\n- Project template refactoring\\n- README polishing\\n\\n**TrustZone SDK**\\n\\n- Teaclave/OP-TEE: Integrating examples in Rust TrustZone SDK in OP-TEE\\n    - Multiple PRs to OP-TEE\'s `manifest`, `build` repos.\\n    - Now in the `master` branch, should be available in the next release 3.15 in Oct 15.\\n    - OP-TEE with Rust: [https://optee.readthedocs.io/en/latest/building/optee_with_rust.html](https://optee.readthedocs.io/en/latest/building/optee_with_rust.html)\\n\\n![OP-TEE with Rust](./img/optee-with-rust-doc.png)\\n\\n**Website**\\n\\n- Add project/organization logos in the \\"Powered By\\" page: [https://teaclave.apache.org/powered-by/](https://teaclave.apache.org/powered-by/)\\n\\n![Project Powered By Teaclave](./img/project-powered-by-teaclave-logo.png)\\n\\n- Redesign the \\"Contributors\\" page\\n    - add Apache ID, GitHub ID to mentors, PPMC, and committers\\n    - Tags for committers to show areas that they are familiar with\\n- Add API Docs (references) of TrustZone SDK both for host and TA sides\\n    - Host: [https://teaclave.apache.org/api-docs/trustzone-sdk/optee-teec](https://teaclave.apache.org/api-docs/trustzone-sdk/optee-teec)\\n    - TA: [https://teaclave.apache.org/api-docs/trustzone-sdk/optee-utee](https://teaclave.apache.org/api-docs/trustzone-sdk/optee-utee)\\n    \\n![Teaclave TrustZone SDK Links in Homepage](./img/teaclave-trustzone-sdk-links-in-homepage.png)\\n    \\n- Blog\\n    - [Podling Teaclave Report - October 2021](https://teaclave.apache.org/blog/2021-10-06-podling-teaclave-report-october-2021/)\xa0\xb7 Oct 05 2021\\n    - [Announcing Apache Teaclave (incubating) 0.3.0](https://teaclave.apache.org/blog/2021-10-01-announcing-teaclave-0-3-0/)\xa0\xb7 Sep 30 2021\\n\\n**Community**\\n\\n- New committers: Yuan Zhuang and Rong Fan from Baidu\\n- Discord: Connect directly with Teaclave community members (join link: [https://discord.gg/ynECXsxm5P](https://discord.gg/ynECXsxm5P))\\n\\n**Security**\\n\\n- *SmashEx: Smashing SGX Enclaves Using Exceptions* (to appear at CCS 2021):\\n  Jinhua Cui (National University of Defense Technology, National University of\\n  Singapore); Zhijingcheng Yu (National University of Singapore); Shweta Shinde\\n  (ETH Zurich); Prateek Saxena (National University of Singapore); Zhiping Cai\\n  (National University of Defense Technology)\\n- [https://arxiv.org/ftp/arxiv/papers/2110/2110.06657.pdf](https://arxiv.org/ftp/arxiv/papers/2110/2110.06657.pdf)\\n- CVE-2021-0186\\n    - [https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00548.html](https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00548.html)\\n    - **Description**: Improper input validation in the Intel(R) SGX SDK\\n      applications compiled for SGX2 enabled processors may allow a privileged\\n      user to potentially escalation of privilege via local access.\\n    - **Affected Products**: Intel SGX SDK for Windows v2.12 and earlier, Intel\\n      SGX SDK for Linux v2.13 and earlier, Intel\xae Processors supporting SGX2.\\n    - Intel recommends updating the Intel\xae SGX SDK to the versions listed below.\\n      Enclaves built with the new Intel\xae SGX SDK version should increment the\\n      value of their ISVSVN field.\\n- Patch: [https://github.com/intel/linux-sgx/commit/edfe42a517b3e4b1d81204c3cdef6da6cb35fefc](https://github.com/intel/linux-sgx/commit/edfe42a517b3e4b1d81204c3cdef6da6cb35fefc)\\n\\n![Patch in Intel SGX SDK](./img/cve-2021-0186-patch.png)\\n\\n### Using and Customizing Teaclave SGX SDK \u2014 Shunfan Zhou\\n\\n- Teaclave SGX SDK\\n    - pro: security\\n    - con: testing is hard\\n- Case study: rust-bitcoin\\n    - std\\n    - Feature\\n    - Port dependencies recursively\\n- Some issues\\n    - efforts of porting\\n    - security: 1) updates of upstream, 2) unit tests\\n    - More TEE backend: AMD SEV, ARM CCA\\n- libs is not completed in SGX for vanilla Rust standard library\\n- Phala libc-hacks\\n    - directly use Intel\'s libc\\n    - use ocall warpper functions\\n- Conflicts: multiple language items in Rust\\n- Runtime behavior checks\\n- HW mode issue: `rand::thread_rnd()` is using CPUID, which is not allowed in SGX\\n- Check instructions after compiling\\n\\n### Free Discussion\\n\\n- About AMD SEV in Azure: [https://azure.microsoft.com/en-us/blog/azure-and-amd-enable-lift-and-shift-confidential-computing/](https://azure.microsoft.com/en-us/blog/azure-and-amd-enable-lift-and-shift-confidential-computing/)\\n\\n## Attendees\\n\\n- Mingshen Sun\\n- Qinkun Bao\\n- He Sun\\n- George\\n- Hongbo Chen\\n- hang\\n- Kevin\\n- Ben\\n- Ruide\\n- Rudong Zhou\\n- shelven\\n- Tongxin Li\\n- Weijie Liu\\n- Zha0Chan\\n- Tianyi Li\\n- DuanRan\\n- Gordon\\n- david\\n\\n\\n## Group Photo\\n\\n![Group Photo](./img/teaclave-meetup-8-zoom.png)"},{"id":"/2021/10/06/podling-teaclave-report-october-2021","metadata":{"permalink":"/blog/2021/10/06/podling-teaclave-report-october-2021","source":"@site/blog/2021-10-06-podling-teaclave-report-october-2021.md","title":"Podling Teaclave Report - October 2021","description":"Teaclave","date":"2021-10-06T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Podling Teaclave Report - October 2021","date":"2021-10-06T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #8","permalink":"/blog/2021/10/14/teaclave-meetup-8"},"nextItem":{"title":"Announcing Apache Teaclave (incubating) 0.3.0","permalink":"/blog/2021/10/01/announcing-teaclave-0.3.0"}},"content":"## Teaclave\\n\\nTeaclave is a universal secure computing platform, making computation on privacy-sensitive data safe and simple.\\n\\nTeaclave has been incubating since 2019-08-20.\\n\\n### Three most important unfinished issues to address before graduating:\\n\\n  - Improve project structure and documentation\\n  - Grow the community (attracting more committers, contributors, users)\\n  - Publish Apache releases (resolving logistics on Apache release)\\n\\n### Are there any issues that the IPMC or ASF Board need to be aware of?\\n\\nNone.\\n\\n### How has the community developed since the last report?\\n\\nSince the last report, we have organized one monthly virtual meetup (we skipped one due to the public holiday). For each meetup, we have minutes write-up published on the Teaclave blog.\\n  - Teaclave Meetup #7: <https://teaclave.apache.org/blog/2021-08-26-teaclave-meetup-7/>\\n\\nStarting from this meetup, we use Google Calendar to show the meetup schedule and location (i.e., the Zoom link).\\n  - Teaclave Community Calendar: <https://calendar.google.com/calendar/u/0/embed?src=l1q5osem2br8i4bj7dgik5sae4@group.calendar.google.com>\\n\\nWe also have two new members elected since the last report:\\n  - 2021-09-20: Yuan Zhuang (Apache ID: TBD), Committer\\n  - 2021-09-20: Rong Fan (Apache ID: TBD), Commiter\\n\\n### How has the project developed since the last report?\\n\\nHere are the summaries of recent progress:\\n\\nTeaclave Faas Platform\\n\\n  - Add TVM MNIST example\\n  - Add IDE helper script\\n  - Add license header and include SkyWalking Eyes in CI for automatic checking\\n  - Release v0.3.0: https://teaclave.apache.org/download/#teaclave\\n  - Consolidate `docker-compose` scripts for servers with different SGX drivers\\n\\nTeaclave TrustZone SDK\\n\\n  - TEE Socket APIs and examples\\n  - Upgrade building docker to Ubuntu 20.04\\n  - Switch to GitHub Actions\\n  - Add -rs to examples and update test scripts\\n  - Update to OP-TEE 3.14.0\\n\\nTeaclave SGX SDK\\n\\n  - Intel SGX SDK 2.14\\n  - Move wiki pages to the document directory for homepage rendering\\n  - Better project template\\n\\nWebsite\\n\\n  - [blog] \u4f7f\u7528 Teaclave SGX SDK \u5f00\u53d1 SGX \u5e94\u7528 \xb7 Aug 24 2021: <https://teaclave.apache.org/blog/2021-08-25-developing-sgx-application-with-teaclave-sgx-sdk/>\\n  - [blog] Announcing Apache Teaclave (incubating) 0.3.0 \xb7 Sep 30 2021: <https://teaclave.apache.org/blog/2021-10-01-announcing-teaclave-0-3-0/>\\n  - [style] Update the contributors page to include Apache ID and tags for each committers\\n\\nCommunity Collaboration\\n\\n  - Teaclave/Intel: Integrating Graphene as a new Library OS executor\\n  - Teaclave/OP-TEE: Integrating examples in Rust TrustZone SDK in OP-TEE\\n\\n### How would you assess the podling\'s maturity?\\nPlease feel free to add your own commentary.\\n\\n  - [ ] Initial setup\\n  - [ ] Working towards first release\\n  - [x] Community building\\n  - [ ] Nearing graduation\\n  - [ ] Other:\\n\\n### Date of last release:\\n\\n  2021-08-23: Apache Teaclave (incubating) 0.3.0\\n\\n### When were the last committers or PPMC members elected?\\n\\n  - 2021-09-20: Yuan Zhuang (Apache ID: TBD), Committer\\n  - 2021-09-20: Rong Fan (Apache ID: TBD), Committer\\n\\n### Have your mentors been helpful and responsive?\\n\\nYes, our mentors work responsively to help us with electing new mentors, developing new features, fixing bugs, and expanding the community.\\n\\n### Is the PPMC managing the podling\'s brand / trademarks?\\n\\nWe don\'t find any 3rd parties incorrectly using the podling\'s name and brand.  The VP, Brand has approved the project name. (PODLINGNAMESEARCH-175)"},{"id":"/2021/10/01/announcing-teaclave-0.3.0","metadata":{"permalink":"/blog/2021/10/01/announcing-teaclave-0.3.0","source":"@site/blog/2021-10-01-announcing-teaclave-0.3.0.md","title":"Announcing Apache Teaclave (incubating) 0.3.0","description":"On behalf of the Teaclave community, I am happy to announce the third Apache","date":"2021-10-01T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Announcing Apache Teaclave (incubating) 0.3.0","date":"2021-10-01T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Podling Teaclave Report - October 2021","permalink":"/blog/2021/10/06/podling-teaclave-report-october-2021"},"nextItem":{"title":"Teaclave Meetup #7","permalink":"/blog/2021/08/26/teaclave-meetup-7"}},"content":"On behalf of the Teaclave community, I am happy to announce the *third* Apache\\nIncubator release of Teaclave, 0.3.0. Teaclave is a universal secure computing\\nplatform, making computation on privacy-sensitive data safe and simple.\\nApache Teaclave (including the\\n[FaaS platform](https://github.com/apache/incubator-teaclave),\\n[SGX SDK](https://github.com/apache/incubator-teaclave-sgx-sdk),\\nand [TrustZone SDK](https://github.com/apache/incubator-teaclave-trustzone-sdk)) is\\nbeing used and contributed by developers from many organizations and\\nother open source projects. Please see the [*powered by*](/powered-by) page to learn more.\\n\\nThis is the third official Apache Incubator release. In this release, we focus\\nmore on bringing [WebAssembly](https://webassembly.org/) into Teaclave. Now, you\\ncan run functions written in different languages in Teaclave with the\\nWebAssembly executor. Specifically, we modify\\n[WebAssembly Micro Runtime](https://github.com/bytecodealliance/wasm-micro-runtime) and add\\nit as a new executor in Teaclave.\\n\\n## Highlights\\n\\nIn this release, we added a new WebAssembly executor which supports to run\\nfunction in the WebAssembly bytecode. Therefore, in addition to native code and\\nPython scripts, Teaclave can run many other languages which can be compiled in\\nto WebAssembly. This enables a lot of functions of privacy-preseving computation\\nthat are not easily rewritten in Rust or Python. Furthermore, because of the\\necosystem of WebAssembly, we can even run deep neural network models in the\\nWebAssembly executor.\\n\\n![Teaclave Function Executors](./img/teaclave-function-executors-wasm.png)\\n\\nTo illustrate the capability of the executor, we also support WebAssembly\\nmachine learning models compiled by [Apache TVM](https://tvm.apache.org/).\\nApache TVM is an open source machine learning compiler framework for CPUs, GPUs,\\nand machine learning accelerators. TVM also supports WebAssembly runtime\\nbackend. We also introduce a new MNIST inference example to show the usage of\\nthe new executor with TVM.\\n\\n![Using the WebAssembly executor for Machine Learning Inference with TVM](./img/teaclave-tvm-webassembly.png)\\n\\n## 0.3.0 Release Notes\\n\\nHere is a list of notable changes in Teaclave version 0.3.0.\\n\\n**Features**\\n\\n  - Add the WebAssembly executor to support functions written in other languages.\\n  - Examples of running C and Rust with the WebAssembly executor.\\n  - Support inference tasks with models compiled by TVM.\\n  - Add the MNIST inference example to demonstrate the ability of using TVM in Teaclave.\\n\\n**Enhancements**\\n\\n  - Add the script to simplify developing with editors with Rust\'s Language Server Protocol support.\\n  - Upgrade SGX SDK dependencies, i.e., Intel SGX SDK to version 2.14.100.2, DCAP to version 1.11.100.2.\\n\\n**Bug Fixes**\\n\\n  - Update the SGX SDK used in the runtime dockerfile.\\n  - Fix `Python.h` not found when compiling `acs_py_enclave.c`.\\n  - Fix building system messed up by untracked `Cargo.lock` files.\\n  - Fix dcap building issue.\\n\\n**Docs**\\n\\n  - Add instructions to configure URLs of input/output files in examples.\\n  - Executing WebAssembly in Teaclave: <https://teaclave.apache.org/docs/executing-wasm/>.\\n  - Inferencing with TVM in Teaclave: <https://teaclave.apache.org/docs/inference-with-tvm/>.\\n\\n## Download\\n\\nTeaclave 0.3.0 can be downloaded at [the download page](/download/). Note that \\nit is essential to verify the integrity of the downloaded file using the\\nPGP signature (the `.asc` file) or a hash (the `.sha256` file).\\n\\n## Documentation\\n\\nIf it is the first time to try Teaclave, we provide a simple but clear tutorial\\nto guide you getting stated with Teaclave by invoking\\n[your first function](/docs/my-first-function/) in Teaclave.\\n\\nBasically, you can build the Teaclave platform using docker with these commands:\\n\\n```sh\\n$ tar zxvf apache-teaclave-0.3.0-incubating.tar.gz && cd \\\\\\n  apache-teaclave-0.3.0-incubating\\n$ # Instructions to verify the source tar: https://teaclave.apache.org/download/#verify-the-integrity-of-the-files\\n\\n$ docker run --rm -v $(pwd):/teaclave -w /teaclave \\\\\\n  -it teaclave/teaclave-build-ubuntu-1804-sgx-2.14:latest \\\\\\n   bash -c \\". /root/.cargo/env && \\\\\\n     . /opt/sgxsdk/environment && \\\\\\n     mkdir -p build && cd build && \\\\\\n     cmake -DTEST_MODE=ON -DSGX_SIM_MODE=ON -DGIT_SUBMODULE=OFF .. && \\\\\\n     make\\"\\n```\\n\\nLaunch all services with `docker-compose` using simulation mode:\\n\\n```sh\\n$ (cd docker && docker-compose -f docker-compose-ubuntu-1804-sgx-sim-mode.yml up --build)\\n```\\n\\nAnd invoke function with a Python client:\\n\\n```sh\\n$ cd examples/python\\n$ PYTHONPATH=../../sdk/python python3 builtin_echo.py \'Hello, Teaclave!\'\\n[+] registering user\\n[+] login\\n[+] registering function\\n[+] creating task\\n[+] approving task\\n[+] invoking task\\n[+] getting result\\n[+] done\\n[+] function return:  b\'Hello, Teaclave!\'\\n```\\n\\nIf you want to understand the internals of Teaclave, we provide several\\ndocuments about the [design](/docs/#design) of Teaclave. Also, we extensively\\ndocument our [codebase](/docs/#codebase) in each sub directories. At last, [API references](/docs/#api-references)\\nare automatically generated and uploaded to our homepage.\\n\\n## Community\\n\\n- Join us on our [mailing list](https://lists.apache.org/list.html?dev@teaclave.apache.org) and [Discord channel](https://discord.gg/ynECXsxm5P).\\n- Follow us at [@ApacheTeaclave](https://twitter.com/ApacheTeaclave).\\n- Meet us at our [monthly community meetup](https://teaclave.apache.org/community/#calendar).\\n- See [more](https://teaclave.apache.org/community/)."},{"id":"/2021/08/26/teaclave-meetup-7","metadata":{"permalink":"/blog/2021/08/26/teaclave-meetup-7","source":"@site/blog/2021-08-26-teaclave-meetup-7.md","title":"Teaclave Meetup #7","description":"In Aug 26, we gathered on Zoom for the 7th Teaclave meetup. In this meetup,","date":"2021-08-26T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #7","date":"2021-08-26T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Announcing Apache Teaclave (incubating) 0.3.0","permalink":"/blog/2021/10/01/announcing-teaclave-0.3.0"},"nextItem":{"title":"\u4f7f\u7528 Teaclave SGX SDK \u5f00\u53d1 SGX \u5e94\u7528","permalink":"/blog/2021/08/25/developing-sgx-application-with-teaclave-sgx-sdk"}},"content":"In Aug 26, we gathered on Zoom for the 7th Teaclave meetup. In this meetup,\\nMingshen briefly introduce recent updates in Teaclave, and also introduce new\\nmembers attending the meetup.\\n\\nFor all Teaclave events, we publish a *Teaclave Community Event Calendar*:\\n<https://calendar.google.com/calendar/u/0/embed?src=l1q5osem2br8i4bj7dgik5sae4@group.calendar.google.com>.\\nYou can subscribe to see our latest schedule information including the Zoom\\nlink.\\n\\nHere is the minutes for Teaclave Meetup #7 on Aug 26, 2021.\\n\\n## Attendees\\n\\n- Mingshen Sun\\n- Ran Duan\\n- Tianyi Li\\n- Ruide Zhang\\n- Yanhua Luo\\n- Hongbo Chen\\n- Weijie Liu\\n- Tongxin Li\\n- Wenhao Wang\\n- Chan Zhao\\n\\n## Agenda\\n\\n- Recent updates in Teaclave - Mingshen Sun\\n- Free discussion\\n\\n## Notes\\n\\n### Recent updates in Teaclave - Mingshen\\n\\n**Teaclave Faas Platform**\\n\\n- Add TVM MNIST example (#535)\\n- Add IDE helper script (#539)\\n- Release v0.3.0: [https://teaclave.apache.org/download/#teaclave](https://teaclave.apache.org/download/#teaclave)\\n\\n**Teaclave TrustZone SDK**\\n\\n- TEE Socket APIs and examples\\n- Upgrade building docker to Ubuntu 20.04\\n- Switch to GitHub Actions\\n- Add -rs to examples and update test scripts (#34)\\n- Update to OP-TEE 3.14.0 (#35)\\n\\n**Teaclave SGX SDK**\\n\\n- Intel SGX SDK 2.14\\n\\n**Website**\\n\\n- [blog] [Podling Teaclave Report - August 2021 \xb7 Aug 01 2021](https://teaclave.apache.org/blog/2021-08-02-podling-teaclave-report-august-2021/)\\n- [blog] [\u4f7f\u7528 Teaclave SGX SDK \u5f00\u53d1 SGX \u5e94\u7528 \xb7 Aug 24 2021](https://teaclave.apache.org/blog/2021-08-25-developing-sgx-application-with-teaclave-sgx-sdk/)\\n\\n**External Collaboration**\\n\\n- Teaclave/Intel: Integrating Graphene as a new Library OS executor\\n- Teaclave/OP-TEE: Integrating examples in Rust TrustZone SDK in OP-TEE\\n\\n### Free Discussion\\n\\nIntro\\n\\n- New members: Tianyi Li from Ant Group, Wenhao Wang from CAS\\n\\nAbout Occlum NGO\\n\\n- Mingshen: what is Occlum NGO? [https://github.com/occlum/ngo](https://github.com/occlum/ngo)\\n- Wenhao: related news: [https://juejin.cn/post/6963839027665436709](https://juejin.cn/post/6963839027665436709)\\n- Ran: will discuss with the Occlum group\\n\\n## Group Photos\\n\\n![Teaclave Meetup #7](./img/teaclave-meetup-7-zoom.png)"},{"id":"/2021/08/25/developing-sgx-application-with-teaclave-sgx-sdk","metadata":{"permalink":"/blog/2021/08/25/developing-sgx-application-with-teaclave-sgx-sdk","source":"@site/blog/2021-08-25-developing-sgx-application-with-teaclave-sgx-sdk.md","title":"\u4f7f\u7528 Teaclave SGX SDK \u5f00\u53d1 SGX \u5e94\u7528","description":"[[TOC]]","date":"2021-08-25T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Wenwen Ruan","key":null,"page":null}],"frontMatter":{"title":"\u4f7f\u7528 Teaclave SGX SDK \u5f00\u53d1 SGX \u5e94\u7528","date":"2021-08-25T00:00:00.000Z","author":"Wenwen Ruan"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #7","permalink":"/blog/2021/08/26/teaclave-meetup-7"},"nextItem":{"title":"Podling Teaclave Report - August 2021","permalink":"/blog/2021/08/02/podling-teaclave-report-august-2021"}},"content":"[[TOC]]\\n\\n\\n## Teaclave SGX SDK\u5e94\u7528\u5f00\u53d1\u73af\u5883\u7b80\u4ecb\u4ee5\u53ca\u642d\u5efa\\n\\nIntel SGX (Software Guard Extension, \u8f6f\u4ef6\u9632\u62a4\u6269\u5c55) \u56e0\u4e3a\u5176\u8f83\u4e3a\u51fa\u8272\u7684\u6027\u80fd\u548c\u5b89\u5168\u6027\uff0c\u662f\u76ee\u524d\u6700\u4e3a\u5b66\u672f\u754c\u548c\u5de5\u4e1a\u754c\u5173\u6ce8\u7684 TEE (Trusted Execution Environment, \u53ef\u4fe1\u6267\u884c\u73af\u5883)\u3002Intel SGX \u5728\u5185\u5b58\u4e2d\u5212\u5206\u4e86\u540d\u4e3a enclave\uff08\u98de\u5730\uff09\u7684\u9694\u79bb\u533a\u57df\uff0c\u7528\u6765\u5b58\u653e\u654f\u611f\u6570\u636e\u548c\u4ee3\u7801\u3002\u901a\u8fc7\u63d0\u4f9b\u8be5\u9694\u79bb\u7684\u53ef\u4fe1\u6267\u884c\u73af\u5883\uff0cenclave \u5728\u64cd\u4f5c\u7cfb\u7edf\u3001BIOS \u548c\u865a\u62df\u673a\u76d1\u63a7\u5668\u7b49\u7cfb\u7edf\u8f6f\u4ef6\u5747\u4e0d\u53ef\u4fe1\u7684\u60c5\u51b5\u4e0b\uff0c\u4ecd\u7136\u5bf9 enclave \u5185\u90e8\u7684\u4ee3\u7801\u548c\u6570\u636e\u63d0\u4f9b\u4fdd\u62a4\uff0c\u4fdd\u969c\u7528\u6237\u7684\u5173\u952e\u6570\u636e\u548c\u4ee3\u7801\u7684\u673a\u5bc6\u6027\u548c\u5b8c\u6574\u6027\u3002\\n\\n\u4f46\u5982\u679c Intel SGX \u7a0b\u5e8f\u4ecd\u7136\u4f7f\u7528 C/C++ \u8fd9\u7c7b\u5185\u5b58\u4e0d\u5b89\u5168\u7684\u8bed\u8a00\u5f00\u53d1\u7684\u8bdd\uff0c\u5c31\u4f1a\u548c\u4f20\u7edf\u8f6f\u4ef6\u4e00\u6837\u9762\u4e34\u7740\u5185\u5b58\u7834\u574f\u6f0f\u6d1e\u7684\u95ee\u9898\u3002\u5bf9\u4e8e enclave \u6765\u8bf4\uff0c\u53d7\u5230\u7684\u5371\u5bb3\u4f1a\u66f4\u4e3a\u4e25\u91cd\uff0c\u56e0\u4e3a enclave \u4e2d\u4fdd\u5b58\u7684\u591a\u662f\u673a\u5bc6\u6570\u636e\u548c\u4ee3\u7801\u3002Teaclave SGX \u7684\u4e3b\u8981\u76ee\u6807\u5c31\u662f\u901a\u8fc7\u4f7f\u7528\u9ad8\u6548\u7684\u5185\u5b58\u5b89\u5168\u8bed\u8a00 \u2014\u2014 Rust \u6765\u652f\u6301 enclave \u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\uff0c\u4ece\u800c\u5728\u4fdd\u8bc1 Intel SGX enclave \u5185\u5b58\u5b89\u5168\u7684\u540c\u65f6\u4e0d\u4f1a\u5e26\u6765\u663e\u8457\u7684\u6027\u80fd\u5f00\u9500\u3002\\n\\nTeaclave SGX SDK \u5185\u90e8\u7ed3\u6784\u5206\u4e3a\u4e09\u5c42\uff1a\\n\\n+ \u6700\u5e95\u5c42\u662f\u4f7f\u7528 C/C++ \u548c\u6c47\u7f16\u5b9e\u73b0\u7684 Intel SGX SDK\u3002\\n+ \u4e2d\u95f4\u5c42\u662f Rust \u5bf9 C/C++ \u7684 FFI (Foreign function Interfaces, \u5916\u90e8\u51fd\u6570\u63a5\u53e3)\u3002\\n+ \u6700\u9ad8\u5c42\u662f Teaclave SGX SDK\u3002\\n\\n![Teaclave SGX SDK \u6982\u8981\u56fe](./img/2021-08-13-overview-of-teaclave-sgx-sdk-cn.png)\\n\\nTeaclave SGX SDK \u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u5728\u8fdb\u884c\u5f00\u53d1\u65f6\u5c31\u53ea\u9700\u8981\u57fa\u4e8e\u6700\u4e0a\u5c42\u7684 Teaclave SGX SDK \u6765\u8fdb\u884c\u5f00\u53d1\uff0c\u5e95\u5c42\u7684\u5b9e\u73b0\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\u662f\u900f\u660e\u7684\u3002\u672c\u6587\u5c06\u4ece\u5f00\u53d1\u8005\u7684\u89d2\u5ea6\u4ecb\u7ecd\u57fa\u4e8e Teaclave SGX SDK \u5f00\u53d1\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u3002\\n\\n### \u51c6\u5907\u6761\u4ef6\\n\\n+ Ubuntu16.04 \u6216\u8005 18.04 \u6216\u8005 20.04 (Teaclave SGX SDK v1.1.3 \u4e2d\u589e\u52a0\u4e86\u5bf9 Ubuntu 20.04 \u7684\u652f\u6301)\\n+ docker \u73af\u5883\\n\\n*\u672c\u6587\u57fa\u4e8e Teaclave SGX SDK v1.1.3 \u63d0\u4ea4\u54c8\u5e0c\u503c\uff1ad107bd0718f723221750a4f2973451b386cbf9d2* \\n\\n\\n### \u57fa\u4e8e docker \u914d\u7f6e Teaclave SGX SDK \u5f00\u53d1\u73af\u5883\\n\\n\u9996\u5148\u9700\u8981\u7528\u6237\u673a\u5668 CPU \u652f\u6301 Intel SGX \u5e76\u4e14\u5728 BIOS \u4e0a\u5f00\u542f\u4e86 Intel SGX \u652f\u6301\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 [SGX-hardware\u9879\u76ee](https://github.com/ayeks/SGX-hardware) \u6216\u8005\u5728 [Intel \u5b98\u7f51](https://www.intel.com/content/www/us/en/products/details/processors.html) \u4e2d\u641c\u7d22\u81ea\u5df1\u7684 CPU \u578b\u53f7\u67e5\u770b\u662f\u5426\u652f\u6301 Intel SGX\u3002\u4e0b\u56fe\u4ee5 Intel Core i7-7700K \u5904\u7406\u5668\u4e3a\u4f8b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8be5\u673a\u578b\u652f\u6301 SGX\u3002\\n\\n![sgx-enable.png](./img/2021-08-13-sgx-enable.png)\\n\\n\u5f53\u786e\u5b9a CPU \u652f\u6301 Intel SGX \u4e4b\u540e\uff0c\u8fd8\u9700\u8981\u5f00\u542f BIOS \u4e2d\u7684 SGX \u9009\u9879\u3002CPU \u4e0a\u7684 SGX \u9009\u9879\u53ef\u80fd\u6709 `enabled` \u6216\u8005 `software controlled`\u3002\u5177\u6709 `enabled` \u9009\u9879\u7684\u4e3b\u673a\u76f4\u63a5\u5728 BIOS \u4e0a\u9009\u62e9 `enabled` \u5373\u53ef\uff0c\u800c`software controlled` \u8868\u793a SGX \u7684\u5f00\u542f\u9700\u8981\u7531\u8f6f\u4ef6\u89e6\u53d1\uff0c\u8fd8\u9700\u901a\u8fc7 Intel \u5b98\u65b9\u63d0\u4f9b\u7684 [sgx-software-enable](https://github.com/intel/sgx-software-enable) \u5f00\u542f\u3002\u4e0b\u8f7d\u597d `sgx-software-enable` \u4e4b\u540e\uff0c\u8fd0\u884c `Makefile` \u7f16\u8bd1\u751f\u6210\u53ef\u6267\u884c\u4ee3\u7801 `sgx_enable` \uff0c\u6267\u884c `sudo ./sgx_enable` \u987a\u5229\u8fd0\u884c\u540e\u91cd\u542f\u4e3b\u673a\uff0c\u5373\u53ef\u987a\u5229\u5f00\u542f Intel SGX\u3002 \\n\\n\u786c\u4ef6\u6761\u4ef6\u51c6\u5907\u5b8c\u6bd5\u4e4b\u540e\uff0c\u8fd8\u9700\u8981\u5b89\u88c5 [Linux SGX \u9a71\u52a8](https://download.01.org/intel-sgx/sgx-linux/2.10/distro/ubuntu16.04-server/sgx_linux_x64_driver_2.6.0_602374c.bin)\uff08\u672c\u5b9e\u9a8c\u73af\u5883\u7684\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u4e3a ubuntu16.04 \uff0c\u5b89\u88c5\u65f6\u9700\u8981\u6839\u636e\u81ea\u5df1\u7684\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u53f7\u5728 [\u5b98\u7f51](https://download.01.org/intel-sgx/) \u4e0b\u8f7d\u5bf9\u5e94\u7684 Intel SGX \u9a71\u52a8\uff09 \uff0c\u5b89\u88c5\u5b8c\u6bd5\u4e4b\u540e\u9700\u8981\u786e\u8ba4 `/dev/isgx` \u7684\u5b58\u5728\u3002\\n\\n\u4e0b\u8f7d Teaclave SGX SDK \u4ee5\u53ca\u652f\u6301\u7f16\u8bd1 SGX \u8bbe\u5907\u7684 docker image\u3002\\n\\n`$ https://github.com/apache/incubator-teaclave-sgx-sdk`\\n\\n`$ docker pull baiduxlab/sgx-rust`\\n\\n\u542f\u52a8\u4e00\u4e2a docker\uff0c\u5e76\u4e14\u628a Teaclave SGX SDK \u9879\u76ee\u76ee\u5f55\u6620\u5c04\u5230 docker \u4e2d\u3002\\n\\n`$ docker run -v /your/absolute/path/to/incubator-teaclave-sgx-sdk:/root/sgx -ti --device /dev/isgx baiduxlab/sgx-rust`\\n\\n\u5728\u8fd0\u884c\u7684 docker container \u4e2d\u542f\u52a8 aesm \u670d\u52a1\uff0c**White list update request successful for Version** \u8bed\u53e5\u610f\u5473\u7740\u542f\u52a8\u6210\u529f\u3002\\n\\n````bash\\nroot@docker:/# LD_LIBRARY_PATH=/opt/intel/sgx-aesm-service/aesm/ /opt/intel/sgx-aesm-service/aesm/aesm_service &\\naesm_service[17]: [ADMIN]White List update requested\\naesm_service[17]: Failed to load QE3: 0x4004\\naesm_service[17]: The server sock is 0x56096ab991c0\\naesm_service[17]: [ADMIN]White list update request successful for Version: 103\\n````\\n\\n\u6267\u884c Teaclave SGX SDK \u4e2d\u7684\u7b80\u5355\u5b9e\u4f8b helloworld \uff0c\u68c0\u67e5\u662f\u5426\u6b63\u5e38\u8fd0\u884c\u3002\\n\\n```bash\\nroot@docker:~# cd sgx/samplecode/helloworld/\\nroot@docker:~/sgx/samplecode/helloworld# make\\nroot@docker:~/sgx/samplecode/helloworld# cd bin/\\nroot@docker:~/sgx/samplecode/helloworld/bin# ./app\\n[+] global_eid: 2\\nThis is normal world string passed into enclave!\\nThis is a Rust string!\\n[+] say_something success ...\\n```\\n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5728\u81ea\u5df1\u7684\u673a\u5668\u4e0a\u8dd1\u8d77\u6765\u4e86 Teaclave SGX SDK \u7684 helloworld \u793a\u4f8b\u5566\uff01\\n\\n## Teaclave SGX SDK \u793a\u4f8b helloworld \u5256\u6790\\n\\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u9605\u8bfb helloworld \u8fd9\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u7406\u89e3 Teaclave SGX SDK \u5e94\u7528\u7a0b\u5e8f\u7684\u7ec4\u7ec7\u7ed3\u6784\u548c\u8fd0\u884c\u65b9\u5f0f\u3002\\n\\n### helloworld \u76ee\u5f55\u7ed3\u6784\\n\\n```\\nhelloworld/ \\n\u251c\u2500\u2500 app \\n\u2502\xa0\xa0 \u251c\u2500\u2500 app.c \\n\u2502\xa0\xa0 \u2514\u2500\u2500 app.h \\n\u251c\u2500\u2500 bin \\n\u2502\xa0\xa0 \u2514\u2500\u2500 readme.txt \\n\u251c\u2500\u2500 enclave \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.toml \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave.config.xml \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave.edl \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave.lds \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave_private.pem \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Makefile \\n\u2502\xa0\xa0 \u251c\u2500\u2500 src \\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 lib.rs \\n\u2502\xa0\xa0 \u251c\u2500\u2500 x86_64-unknown-linux-sgx.json \\n\u2502\xa0\xa0 \u2514\u2500\u2500 Xargo.toml \\n\u251c\u2500\u2500 lib \\n\u2502\xa0\xa0 \u2514\u2500\u2500 readme.txt \\n\u2514\u2500\u2500 Makefile \\n```\\n\\nhelloworld \u7684\u76ee\u5f55\u7ed3\u6784\u548c Intel SGX \u7684 [SampleEnclave](https://github.com/intel/linux-sgx/blob/HEAD/SampleCode/SampleEnclave) \u76ee\u5f55\u7ed3\u6784\u975e\u5e38\u7c7b\u4f3c\u3002\\n+ app \u76ee\u5f55\u4e2d\u5b58\u653e\u7684\u662f\u4e0d\u53ef\u4fe1\u90e8\u5206\u4ee3\u7801\uff0c\u5305\u62ec `main` \u51fd\u6570\u4ee5\u53ca `OCALL` \u51fd\u6570\u5177\u4f53\u903b\u8f91\u5b9e\u73b0\u3002\\n+ enclave \u76ee\u5f55\u4e2d\u5b58\u653e\u7684\u662f\u53ef\u4fe1\u90e8\u5206\u4ee3\u7801\uff0c\u4e3b\u8981\u662f `ECALL` \u51fd\u6570\u5177\u4f53\u903b\u8f91\u5b9e\u73b0\u3002\\n    + \u4e0d\u540c\u4e8e SGX \uff0c\u5e94\u7528\u5b89\u5168\u533a\u7684\u4ee3\u7801\u5b9e\u73b0\u4f4d\u4e8e **`src/lib.rs`**, \u8be5\u6587\u4ef6\u662f\u6574\u4e2a `helloworld` \u6587\u4ef6\u5939\u4e2d\u552f\u4e00\u4f7f\u7528 Rust \u7f16\u5199\u7684\u6587\u4ef6\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5728\u8be5\u6587\u4ef6\u4e2d\u589e\u52a0\u9700\u8981\u7684\u529f\u80fd\u3002\\n    + \u53e6\u5916\uff0cenclave \u6587\u4ef6\u5939\u4e0b\u591a\u4e86 `Cargo.toml`, `src/lib.rs`, `x86_64-unknown-linux-sgx.json`, `Xargo.toml`\uff1a\\n        + **`Cargo.toml`**: \u9879\u76ee\u6e05\u5355\u6587\u4ef6\uff0c\u5305\u62ec\u9879\u76ee\u540d\u79f0\u3001\u9879\u76ee\u7248\u672c\u4ee5\u53ca\u4f9d\u8d56\u9879\u7b49\u3002\\n        + **`x86_64-unknown-linux-sgx.json`** \u548c **`Xargo.toml`** \u63cf\u8ff0\u4e86\u7528\u4e8e\u9879\u76ee\u4ea4\u53c9\u7f16\u8bd1\u7684\u4fe1\u606f\u3002\\n\\n### \u91cd\u8981\u4ee3\u7801\u6587\u4ef6\u89e3\u6790\\n\\n+ **`Enclave.edl`** \\\\\\n\u8be5\u6587\u4ef6\u89c4\u5b9a\u4e86 Enclave \u8fb9\u754c `ECALL/OCALL` \u7684\u5b9a\u4e49\u3002\\n\\n```\\nenclave {\\n    from \\"sgx_tstd.edl\\" import *;\\n    from \\"sgx_stdio.edl\\" import *;\\n    from \\"sgx_backtrace.edl\\" import *;\\n    from \\"sgx_tstdc.edl\\" import *;\\n\\n    trusted {\\n        /* define ECALLs here. */\\n        public sgx_status_t say_something([in, size=len] const uint8_t* some_string, size_t len);\\n    };\\n\\n    untrusted {\\n\\n    };\\n};\\n```\\n\\n`trusted {...}` \u4e2d\u58f0\u660e `ECALL` \u51fd\u6570\uff0c `untrusted {...}` \u4e2d\u58f0\u660e `OCALL` \u51fd\u6570\u3002\u672c\u4f8b\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2a `ECALL` \u51fd\u6570 `say_something`\uff0c\u8be5\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u5728 `src/lib.rs` \u4e2d\uff0c\u5b83\u7684\u53c2\u6570\u5305\u62ec `uint8_t *` \u7c7b\u578b\u7684\u6307\u9488\u548c\u957f\u5ea6\u53c2\u6570 `len`\u3002\\n\\n+ **`app/app.c`** \\n\\n\u5728 `app/app.c` \u7684 `main` \u51fd\u6570\u4e2d\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u8c03\u7528 `ECALL` \u7684\u4f8b\u5b50\u3002\\n\\n```c\\nsgx_ret = say_something(global_eid,\\n                        &enclave_ret,\\n                        (const uint8_t *) str,\\n                        len);\\n```\\n\\n\u8fd9\u91cc\u7684 `say_something` \u4f3c\u4e4e\u548c `Enclave.edl` \u4e2d\u7684\u58f0\u660e\u4e0d\u592a\u4e00\u6837\uff0cECALL\u4f20\u9012\u53c2\u6570\u65f6\u591a\u4e86\u4e24\u4e2a\u9690\u53c2\u6570\uff1a`enclave_eid` \u548c `say_something` \u7684\u8fd4\u56de\u503c `&enclave_ret`\u3002\u800c `sgx_ret` \u8868\u793a\u7684\u662f ECALL \u6267\u884c\u662f\u5426\u6210\u529f\uff0c\u662f SGX \u7684\u8fd4\u56de\u503c\u3002\\n\\n+ **`enclave/`\u6587\u4ef6\u5939\u90e8\u5206** \\n\\n`enclave/Cargo.toml` \u4e2d\u58f0\u660e\u4e86\u8fd9\u662f\u4e00\u4e2a `staticlib`\uff0c\u8868\u660e Enclave \u5728\u6700\u540e\u4f1a\u88ab\u7f16\u8bd1\u6210\u4e00\u4e2a `.a` \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u4f1a\u548c Intel \u63d0\u4f9b\u7684 `sgx_tstdc.a` \u7b49\u6587\u4ef6\u94fe\u63a5\u5f62\u6210 `enclave.so`\uff0c\u518d\u7ecf\u7531 `sgx_sign` \u5de5\u5177\u914d\u5408 `Enclave.config.xml` \u914d\u7f6e\u6587\u4ef6\u3001`Enclave_private.pem` \u7b7e\u540d\u79c1\u94a5\u505a\u7b7e\u540d\u5e76\u8ba1\u7b97 `measurement` \uff0c\u6700\u540e\u751f\u6210 `enclave.signed.so`\uff0c\u8fd9\u662f Enclave \u7684\u5b8c\u5168\u4f53\u3002\\n\\n+ **`enclave/src/lib.rs`** \\n\\n```rust\\npub extern \\"C\\" fn say_something(some_string: *const u8, some_len: usize) -> sgx_status_t {\\n\\n    let str_slice = unsafe { slice::from_raw_parts(some_string, some_len) };\\n    let _ = io::stdout().write(str_slice);\\n\\n    // A sample &\'static string\\n    let rust_raw_string = \\"This is a \\";\\n    // An array\\n    let word:[u8;4] = [82, 117, 115, 116];\\n    // An vector\\n    let word_vec:Vec<u8> = vec![32, 115, 116, 114, 105, 110, 103, 33];\\n\\n    // Construct a string from &\'static string\\n    let mut hello_string = String::from(rust_raw_string);\\n\\n    // Iterate on word array\\n    for c in word.iter() {\\n        hello_string.push(*c as char);\\n    }\\n\\n    // Rust style convertion\\n    hello_string += String::from_utf8(word_vec).expect(\\"Invalid UTF-8\\")\\n                                               .as_str();\\n\\n    // Ocall to normal world for output\\n    println!(\\"{}\\", &hello_string);\\n\\n    sgx_status_t::SGX_SUCCESS\\n}\\n```\\n\u8be5\u51fd\u6570\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5c06 `&[u8]` \u6570\u7ec4\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u8f93\u51fa\u7684\u51fd\u6570\uff0c\u6ce8\u610f\u5728\u51fd\u6570\u7684\u6700\u540e\u8c03\u7528\u7684 `println!` \u51fd\u6570\u662f\u4e00\u4e2a `OCALL`\u3002 `println!` \u7684\u5177\u4f53\u5b9e\u73b0\u4e2d\u52a0\u5165\u4e86\u5185\u7f6e\u7684 `OCALL`\uff0c\u5e76\u5b9a\u4e49\u4e86\u5185\u7f6e\u7684 `edl` \uff0cimport\u5230\u4e86 `Enclave.edl` \u4e2d\u3002 \\n```\\nenclave {\\n    from \\"sgx_tstd.edl\\" import *;\\n    from \\"sgx_stdio.edl\\" import *;\\n    from \\"sgx_backtrace.edl\\" import *;\\n    from \\"sgx_tstdc.edl\\" import *;\\n```\\n\\n\\n### \u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u76ee\u5f55 \\n\u7ecf\u8fc7\u7f16\u8bd1\u4e4b\u540e\u7684\u4ee3\u7801\u76ee\u5f55\u5982\u4e0b\u6240\u793a\uff0c\u8fd9\u91cc\u7701\u7565\u4e86 `release` \u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9\u3002\\n```\\n\u251c\u2500\u2500 app \\n\u2502\xa0\xa0 \u251c\u2500\u2500 app.c \\n\u2502\xa0\xa0 \u251c\u2500\u2500 app.h \\n\u2502\xa0\xa0 \u251c\u2500\u2500 app.o               #[generate] \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave_u.c         #[generate] \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave_u.h         #[generate] \\n\u2502\xa0\xa0 \u2514\u2500\u2500 Enclave_u.o         #[generate] \\n\u251c\u2500\u2500 bin \\n\u2502\xa0\xa0 \u251c\u2500\u2500 app                 #[generate] \\n\u2502\xa0\xa0 \u251c\u2500\u2500 enclave.signed.so   #[generate] \\n\u2502\xa0\xa0 \u2514\u2500\u2500 readme.txt \\n\u251c\u2500\u2500 enclave \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.lock          #[generate] \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.toml \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave.config.xml \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave.edl \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave.lds \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave_private.pem \\n\u2502\xa0\xa0 \u251c\u2500\u2500 enclave.so          #[generate] \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave_t.c         #[generate] \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave_t.h         #[generate] \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Enclave_t.o         #[generate] \\n\u2502\xa0\xa0 \u251c\u2500\u2500 Makefile \\n\u2502\xa0\xa0 \u251c\u2500\u2500 src \\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 lib.rs \\n\u2502\xa0\xa0 \u251c\u2500\u2500 target              #[generate] \\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 CACHEDIR.TAG    #[generate] \\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 release         #[generate] \\n\u2502\xa0\xa0 \u251c\u2500\u2500 x86_64-unknown-linux-sgx.json \\n\u2502\xa0\xa0 \u2514\u2500\u2500 Xargo.toml \\n\u251c\u2500\u2500 lib \\n\u2502\xa0\xa0 \u251c\u2500\u2500 libenclave.a        #[generate] \\n\u2502\xa0\xa0 \u251c\u2500\u2500 libsgx_ustdc.a      #[generate] \\n\u2502\xa0\xa0 \u2514\u2500\u2500 readme.txt \\n\u2514\u2500\u2500 Makefile \\n```\\nhelloworld \u7f16\u8bd1\u7684\u57fa\u672c\u6d41\u7a0b\u7c7b\u4f3c\u4e8e Intel SGX:\\n+ `edger8r` \u5c06\u8f93\u5165\u7684 `EDL` \u5728 `app/` \u76ee\u5f55\u4e0b\u751f\u6210\u4e0d\u53ef\u4fe1\u4ee3\u7801 `Enclave_u.h` \u548c `Enclave_u.c`\uff1b\\n+ \u7f16\u8bd1\u4e0d\u53ef\u4fe1\u90e8\u5206\u751f\u6210 `bin/app`\uff1b\\n+ `edger8r` \u5728 `enclave/` \u76ee\u5f55\u4e0b\u751f\u6210\u53ef\u4fe1\u4ee3\u7801 `Enclave_t.h` \u548c `Enclave_t.c`\uff1b\\n+ \u7f16\u8bd1\u5e76\u7b7e\u540d\u751f\u6210\u53ef\u4fe1\u52a8\u6001\u94fe\u63a5\u5e93 `enclave.signed.so`\u3002  \\n\\n## \u5f00\u53d1\u8005\u5982\u4f55\u5f00\u53d1\u81ea\u5df1\u7684 Rust SGX Application\\n\u540c\u6837\u7c7b\u4f3c\u4e8e\u5f00\u53d1 Intel SGX Application\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6539\u5199 Teaclave SGX SDK \u6240\u63d0\u4f9b\u7684 `samplecode`\uff0c\u5728\u8fd9\u91cc\uff0c\u6211\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u629b\u7816\u5f15\u7389\u3002\\n\\n### \u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\\n\u5047\u8bbe\u7528\u6237\u5e0c\u671b\u5728 Teaclave SGX SDK \u4e2d\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u6c42\u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6\u7684\u51fd\u6570\uff0c\u53ea\u9700\u8981\u76f4\u63a5\u5728 `src/lib.rs` \u4e2d\u6dfb\u52a0\u5b9e\u73b0\u7684\u51fd\u6570\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801 `intersection` \u51fd\u6570\u662f\u5e0c\u671b\u6dfb\u52a0\u7684\u6c42\u4ea4\u96c6\u51fd\u6570\uff0c\u6ce8\u610f\u8fd9\u91cc\u6c42\u5230\u7684\u4ea4\u96c6\u7ed3\u679c\u662f\u65e0\u91cd\u590d\u5143\u7d20\u7684\u3002\u4f20\u5165\u7684\u4e24\u4e2a\u53c2\u6570\u662f\u9700\u8981\u6c42\u4ea4\u96c6\u7684 `i32` \u5411\u91cf\uff0c\u6700\u540e\u8fd4\u56de\u7684\u662f\u4e24\u4e2a\u5411\u91cf\u7684\u4ea4\u96c6\u3002\u5176\u5177\u4f53\u7684\u5b9e\u73b0\u662f\u901a\u8fc7\u4e00\u4e2a\u989d\u5916\u7684\u6563\u5217\u96c6\uff0c\u8bb0\u5f55 `num1` \u51fa\u73b0\u7684\u5143\u7d20\uff0c\u518d\u5bf9 `num2` \u8fdb\u884c\u904d\u5386\uff0c\u5982\u679c `num2` \u51fa\u73b0\u4e86\u6563\u5217\u96c6\u4e2d\u7684\u5143\u7d20\uff0c\u5219\u5c06\u8be5\u503c `push` \u5230\u4ea4\u96c6\u6570\u7ec4\u4e2d\uff0c\u5e76\u5c06\u6563\u5217\u8868\u4e2d\u7684\u5bf9\u5e94\u5143\u7d20\u79fb\u9664\u3002\u5f53 `num2` \u904d\u5386\u5b8c\u6bd5\u4e4b\u540e\uff0c\u8fd4\u56de\u4ea4\u96c6\u6570\u7ec4\u3002\\n\\n```rust\\npub fn intersection(nums1: Vec<i32>, nums2: Vec<i32>) -> Vec<i32> {\\n        use std::collections::HashSet;\\n        let mut set: HashSet<i32> = HashSet::new();\\n        let mut vec: Vec<i32> = Vec::new();\\n\\n        for i in nums1.iter() {\\n            set.insert(*i);\\n        }\\n\\n        for i in nums2.iter() {\\n            if set.contains(i) {\\n                vec.push(*i);\\n                set.remove(i);\\n            }\\n        }\\n        return vec;\\n    }\\n```\\n\\n\u8003\u8651\u4e00\u4e2a\u6bd4\u8f83\u73b0\u5b9e\u7684\u573a\u666f\uff0c\u4e24\u4e2a\u7528\u6237\u5206\u522b\u5c06\u81ea\u5df1\u7684\u5411\u91cf\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 enclave \u4e2d\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u65f6\u5019\u6570\u636e\u9700\u8981\u4ece\u4e0d\u53ef\u4fe1\u4ee3\u7801\u533a\u57df\u590d\u5236\u5230\u53ef\u4fe1\u4ee3\u7801\u533a\u57df\u3002\\n\u9996\u5148\uff0c\u9700\u8981\u5728 `Enclave.edl` \u6587\u4ef6\u4e2d\u4fee\u6539 `say_something` \u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u8f93\u5165\u53c2\u6570\u4e3a\u4e24\u4e2a\u7528\u6237\u7684\u5411\u91cf\u6307\u9488\u4ee5\u53ca\u5bf9\u5e94\u7684\u5411\u91cf\u5927\u5c0f\u3002\\n```\\npublic sgx_status_t say_something([in, size=len1] size_t* num1, size_t len1,\\n                                  [in, size=len2] size_t* num2, size_t len2);\\n```\\n\\n\u63a5\u7740\uff0c\u5728 `app.c` \u6587\u4ef6\u4e2d\u58f0\u660e\u9700\u8981\u6c42\u4ea4\u96c6\u7684\u6570\u7ec4\u4ee5\u53ca\u5927\u5c0f\u5e76\u4eff\u7167\u793a\u4f8b\u8c03\u7528 `say_something`\u3002 \\n\\n```c\\n    size_t nums1[10] = {0,1,2,3,4,5,6,7,8,9};\\n    size_t nums2[10] = {5,6,7,8,9,10,11,12,13,14};\\n    size_t len1 = sizeof(nums1);\\n    size_t len2 = sizeof(nums2);\\n\\n    sgx_ret = say_something(global_eid, \\n                            &enclave_ret,\\n                            nums1,\\n                            len1,\\n                            nums2,\\n                            len2);\\n```\\n\\n\u56de\u5230 `enclave/src/lib.rs`\uff0c`say_something` \u4f20\u8fdb\u6765\u7684\u662f\u4e24\u4e2a\u5411\u91cf\u7684\u8d77\u59cb\u5730\u5740\u4ee5\u53ca\u5927\u5c0f\u3002\\n```rust\\npub extern \\"C\\" fn say_something(nums1: *mut usize, len1: usize, nums2: *mut usize, len2: usize) -> sgx_status_t \\n```\\n\u7531\u4e8e\u6570\u636e\u662f\u4ece\u975e\u5b89\u5168\u533a\u590d\u5236\u5230\u5b89\u5168\u533a\u7684\uff0c\u8fd8\u9700\u8981\u5bf9 `intersection` \u51fd\u6570\u8fdb\u884c\u90e8\u5206\u6539\u5199\u3002\u4f20\u8fdb\u6765\u7684\u53c2\u6570\u662f\u6570\u7ec4\u6307\u9488\uff0c\u4ee5\u6307\u9488\u5730\u5740\u4e3a\u8d77\u59cb\u5730\u5740\uff0c\u6839\u636e\u5927\u5c0f\u53c2\u6570\u9650\u5236\u8fed\u4ee3\u8303\u56f4\u5e76\u83b7\u5f97\u4e00\u4e2a\u7528\u4e8e\u5faa\u73af\u7684\u5e8f\u53f7\u53d8\u91cf `i`\uff0c\u5728 `for` \u5faa\u73af\u4e2d\u4f7f\u7528 `offset` \u504f\u79fb\u6307\u9488\uff0c\u89e3\u5f15\u7528\u5b83\uff0c\u8bfb\u51fa `nums1` \u548c `nums2` \u7684\u5143\u7d20\u503c\u3002\\n\\n```rust\\npub fn intersection(nums1: *mut usize, len1: usize, nums2: *mut usize, len2: usize) -> Vec<usize> {\\n    use std::collections::HashSet;\\n    let mut set: HashSet<usize> = HashSet::new();\\n    let mut vec: Vec<usize> = Vec::new();\\n\\n    for i in 0..len1/mem::size_of::<usize>() {\\n        let mut val_nums1 = 0;\\n        unsafe {\\n            val_nums1 = *nums1.offset(i as isize);\\n        }\\n        set.insert(val_nums1); \\n    }\\n    \\n    for i in 0..len2/mem::size_of::<usize>() {\\n        let mut val_nums2 = 0;\\n        unsafe {\\n            val_nums2 = *nums2.offset(i as isize);\\n        }\\n        if set.contains(&val_nums2) {\\n            vec.push(val_nums2);\\n            set.remove(&val_nums2);\\n        }\\n    }\\n    return vec;\\n}\\n```\\n\\n\u5b8c\u6574\u7684 `say_something` \u51fd\u6570\u5982\u4e0b\u6240\u793a\u3002\\n\\n```rust\\n#[no_mangle]\\npub extern \\"C\\" fn say_something(nums1: *mut usize, len1: usize, nums2: *mut usize, len2: usize) -> sgx_status_t {\\n    let vec: Vec<usize> = intersection(nums1, len1, nums2, len2); \\n    println!(\\"intersection set is {:?}\\", vec);\\n    sgx_status_t::SGX_SUCCESS\\n}\\n```\\n\\n\u91cd\u65b0\u7f16\u8bd1\u5e76\u8fd0\u884c\uff0c\u5f97\u5230\u8fd0\u884c\u7ed3\u679c\uff1a\\n```bash\\n[+] global_eid: 2\\nintersection set is [5, 6, 7, 8, 9]\\n[+] say_something success ...\\n```\\n\u6211\u4eec\u57fa\u4e8e Teaclave SGX SDK \u7684 helloworld \u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u6c42\u4ea4\u96c6\u51fd\u6570\u3002\\n\\n### \u8c03\u7528 Teaclave SGX SDK \u63d0\u4f9b\u7684 `crate`\\n\\nTeaclave SGX SDK \u91cd\u5199\u4e86\u5f88\u591a SGX \u7684\u5e93\uff0c\u5f53\u6211\u4eec\u9700\u8981\u7528\u67d0\u4e2a\u5e93\u65f6\uff0c\u53ef\u4ee5\u5148\u5728\u4ed3\u5e93\u4e2d\u67e5\u770b\u662f\u5426\u6709\u76f8\u5e94\u7684 `crate` \u5b9e\u73b0\u4ee5\u53ca\u5bf9\u5e94\u7684 [doc](https://teaclave.apache.org/api-docs/crates-enclave/)\u3002\u6bd4\u5982\u5f53\u6211\u4eec\u5e0c\u671b\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570\u65f6\uff0c\u5728 `C++` \u6216\u8005 `Rust` \u73af\u5883\u4e0b\uff0c\u4f1a\u60f3\u5230\u4f7f\u7528 `rand` \u5e93\u3002\u81ea\u7136\u800c\u7136\u5730\uff0cTeaclave SGX SDK \u4e5f\u7528 Rust \u91cd\u5199\u4e86 [`sgx_rand`](https://github.com/apache/incubator-teaclave-sgx-sdk/tree/master/sgx_rand) \u5e93\u3002 \\n\\n\u9996\u5148\u5728 `enclave/Cargo.toml` \u4e2d\u7684 `[target.\'cfg(not(target_env = \\"sgx\\"))\'.dependencies]` \u90e8\u5206\u6dfb\u52a0 `sgx_rand` \u5e93\u7684\u5730\u5740\u3002\\n\\n```toml\\n[target.\'cfg(not(target_env = \\"sgx\\"))\'.dependencies]\\nsgx_rand = {git = \\"https://github.com/apache/teaclave-sgx-sdk.git\\" }\\n```\\n\\n\u73b0\u5728\u4e07\u4e8b\u4ff1\u5907\uff0c\u53ea\u6b20\u8c03\u7528\u3002\u56de\u5230 `lib.rs` \u6587\u4ef6\u4e2d\uff0c\u94fe\u63a5\u5230 `sgx_rand` `crate`\uff0c\u5bfc\u5165\u5176\u4e2d\u7684\u6240\u6709\u9879\uff0c\u58f0\u660e\u9700\u8981\u4f7f\u7528\u7684\u6a21\u5757\u3002\\n\\n```rust\\nextern crate sgx_rand;\\nuse sgx_rand::Rng;\\nuse sgx_rand::os::SgxRng;\\n```\\n\\n\u8c03\u7528 `gen_range` \u51fd\u6570\u751f\u6210 0-10 \u4e4b\u95f4\u7684\u968f\u673a\u6570\u3002\\n\\n```rust \\nlet random = rng.gen_range(0, 10);\\n```\\n\\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 Teaclave SGX SDK \u4e2d\u7684 enclave \u4e2d\u901a\u8fc7\u8c03\u7528\u5b98\u65b9 `crate` \u968f\u673a\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570\u3002\\n\\n## \u603b\u7ed3\\n\u672c\u6587\u9996\u5148\u4ecb\u7ecd\u4e86 Teaclave SGX SDK \u9879\u76ee\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u7136\u540e\u4ee5 `helloworld` \u4e3a\u4f8b\u5b50\uff0c\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 Teaclave SGX SDK \u7684\u793a\u4f8b\u7684\u7ec4\u7ec7\u7ed3\u6784\u548c\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u6700\u540e\uff0c\u4ee5\u5728 `helloworld` \u4e2d\u5b9e\u73b0 `intersection` \u51fd\u6570\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u4e86\u5982\u4f55\u57fa\u4e8e\u63d0\u4f9b\u7684 SampleCode \u8fdb\u884c Teaclave SGX SDK \u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u3002\\n\\n\\n## \u5ef6\u4f38\u9605\u8bfb\\n+ [\u4e00\u4efd\u4e3b\u89c2\u7684 SGX \u5bfc\u8bfb\uff1a\u8fd0\u884c\u7b2c\u4e00\u4e2a SGX \u7a0b\u5e8f](https://github.com/dingelish/SGXfail/blob/master/01.md)\\n+ [Teaclave \u5b98\u7f51](http://teaclave.apache.org)\\n+ [Teaclave SGX SDK \u9879\u76ee\u8bba\u6587\uff1a\u300aTowards Memory Safe Enclave Programming with Rust-SGX\u300b](https://dl.acm.org/citation.cfm?id=3354241)"},{"id":"/2021/08/02/podling-teaclave-report-august-2021","metadata":{"permalink":"/blog/2021/08/02/podling-teaclave-report-august-2021","source":"@site/blog/2021-08-02-podling-teaclave-report-august-2021.md","title":"Podling Teaclave Report - August 2021","description":"Teaclave","date":"2021-08-02T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Podling Teaclave Report - August 2021","date":"2021-08-02T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"\u4f7f\u7528 Teaclave SGX SDK \u5f00\u53d1 SGX \u5e94\u7528","permalink":"/blog/2021/08/25/developing-sgx-application-with-teaclave-sgx-sdk"},"nextItem":{"title":"Teaclave Meetup #6","permalink":"/blog/2021/07/29/teaclave-meetup-6"}},"content":"## Teaclave\\n\\nTeaclave is a universal secure computing platform, making computation on\\nprivacy-sensitive data safe and simple.\\n\\nTeaclave has been incubating since 2019-08-20.\\n\\n### Three most important unfinished issues to address before graduating:\\n\\n- Improve project structure and documentation\\n- Grow the community (attracting more committers, contributors, users)\\n- Publish Apache releases (resolving logistics on Apache release)\\n\\n### Are there any issues that the IPMC or ASF Board need to be aware of?\\n\\nNone. \\n\\n### How has the community developed since the last report?\\n\\nSince the last report, we have organized three monthly virtual meetups. Many\\npeople from the community share their usage experience of Teaclave. Also, we\\ninvited some contributors to talk about some technical details of the design and\\nimplementation. For each meetup, we have minutes write-up published on the\\nTeaclave blog.\\n  - Teaclave Meetup #4: <https://teaclave.apache.org/blog/2021-04-29-teaclave-meetup-4/>\\n  - Teaclave Meetup #5: <https://teaclave.apache.org/blog/2021-06-24-teaclave-meetup-5/>\\n  - Teaclave Meetup #6: <https://teaclave.apache.org/blog/2021-07-29-teaclave-meetup-6/>\\n\\nWe also have two new members:\\n  - 2021-07-09, Hongbo Chen (ya0guang), Commiter\\n  - 2021-07-25, Gordon King (garyw), Mentor\\n\\n### How has the project developed since the last report?\\n\\nHere are the summaries of recent progress of our three sub-projects:\\n\\nTeaclave:\\n  - Change the executor\'s payload type from `String` to `Vec<u8>`.\\n  - Unify the launch of teaclave services.\\n  - Add WebAssembly Executor and corresponding examples.\\n  - Upgrade Intel SGX SDK to the latest release (SGX 2.14.100.2, DCAP 1.11.100.2).\\n  - Some minor fixes of the building system and documentation.\\n\\nTeaclave SGX SDK:\\n  - Minor bug fixes.\\n\\nTeaclave TrustZone SDK:\\n  - Release the first Apache Incubator version 0.1.0: [Announcing Apache Teaclave TrustZone SDK (Incubating) 0.1.0](https://teaclave.apache.org/blog/2021-06-16-announcing-teaclave-trustzone-sdk-0-1-0/).\\n  - Update to OP-TEE 3.13.0.\\n  - Implement the `iSocket` APIs and corresponding examples.\\n  - Implement loadable plugin for TA and corresponding examples.\\n  - Some minor fixes and repository cleanups.\\n\\n### How would you assess the podling\'s maturity?\\nPlease feel free to add your own commentary.\\n\\n  - [ ] Initial setup\\n  - [ ] Working towards first release\\n  - [x] Community building\\n  - [ ] Nearing graduation\\n  - [ ] Other:\\n\\n### Date of last release:\\n\\n  2021-06-10: Apache Teaclave TrustZone SDK (incubating) 0.1.0\\n\\n### When were the last committers or PPMC members elected?\\n\\n  2021-07-25, Gordon King (garyw), Mentor\\n\\n### Have your mentors been helpful and responsive?\\n\\n  Yes, our mentors work responsively to help us with electing new mentors, proposing new features, and expanding the community.\\n\\n### Is the PPMC managing the podling\'s brand / trademarks?\\n\\n  We don\'t find any 3rd parties incorrectly using the podling\'s name and brand. The VP, Brand has approved the project name. (PODLINGNAMESEARCH-175)"},{"id":"/2021/07/29/teaclave-meetup-6","metadata":{"permalink":"/blog/2021/07/29/teaclave-meetup-6","source":"@site/blog/2021-07-29-teaclave-meetup-6.md","title":"Teaclave Meetup #6","description":"In July 29, we gathered on Zoom for the sixth Teaclave meetup. In the meetup, we","date":"2021-07-29T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #6","date":"2021-07-29T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Podling Teaclave Report - August 2021","permalink":"/blog/2021/08/02/podling-teaclave-report-august-2021"},"nextItem":{"title":"Teaclave Meetup #5","permalink":"/blog/2021/06/24/teaclave-meetup-5"}},"content":"In July 29, we gathered on Zoom for the sixth Teaclave meetup. In the meetup, we\\nannounced our new mentor Gordon and invited Gordon to introduce the latest effort\\non integrating Graphene into Teaclave.\\n\\n![Teaclave Meetup #6](./img/teaclave-meetup-6-zoom.png)\\n\\n## Schedule\\n\\n- Recent update of Teaclave, Mingshen (5m)\\n- Introduction to Graphene, Gordon\\n\\n## Notes\\n\\n- [Proposal on Teaclave/Graphene integration](https://github.com/apache/incubator-teaclave/issues/525)\\n- [Graphene v1.0: Toward A Reliable, Open-Source Library OS for SGX](https://grapheneproject.io/wp-content/uploads/2020/01/Intel_SGX_Day_19_Graphene_Talk.pdf)\\n- [Library OS is the New Container](https://osseu18.sched.com/event/FxXc/library-os-is-the-new-container-why-is-library-os-a-better-option-for-compatibility-and-sandboxing-chia-che-tsai-uc-berkeley)\\n- [Intel\xae TDX Architectural Extensions to Advance Confidential Computing in Public Clouds](https://static.sched.com/hosted_files/lsseu2020/46/Oct%2029_Architectural%20Extensions%20for%20VM%20Isolation%20to%20Advance%20Confidential%20Computing_Ravi%20Sahita_Jun%20Nakajima_v4b.pdf)"},{"id":"/2021/06/24/teaclave-meetup-5","metadata":{"permalink":"/blog/2021/06/24/teaclave-meetup-5","source":"@site/blog/2021-06-24-teaclave-meetup-5.md","title":"Teaclave Meetup #5","description":"In Jun 24, we gathered in Zoom for the fifth monthly Teaclave meetup. In this","date":"2021-06-24T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #5","date":"2021-06-24T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #6","permalink":"/blog/2021/07/29/teaclave-meetup-6"},"nextItem":{"title":"Announcing Apache Teaclave TrustZone SDK (incubating) 0.1.0","permalink":"/blog/2021/06/16/announcing-teaclave-trustzone-sdk-0.1.0"}},"content":"In Jun 24, we gathered in Zoom for the fifth monthly Teaclave meetup. In this\\nmeetup, we\'re glad to have Hongbo (@ya0guang) talking about his contributions on\\nadding WebAssembly Micro Runtime to Teaclave as an executor (PR:\\n[#504](https://github.com/apache/incubator-teaclave/pull/504),\\n[#512](https://github.com/apache/incubator-teaclave/pull/512)).\\n\\n\\n![Teaclave Meetup #5](./img/teaclave-meetup-5-zoom.png)\\n\\n## Schedule\\n\\n- Recent update of Teaclave, Mingshen (5m)\\n- Executing WebAssembly in Teaclve, Hongbo (40m)\\n- Open discussion\\n\\n## Notes\\n\\n### Recent Update of Teaclave\\n\\n**Teaclave TrustZone SDK version 0.1.0 released**\\n- Vote result: [https://lists.apache.org/thread.html/r441addf283f6c8780326f372e39a9d723164f6d910184ea3686a5c4a%40%3Cdev.teaclave.apache.org%3E](https://lists.apache.org/thread.html/r441addf283f6c8780326f372e39a9d723164f6d910184ea3686a5c4a%40%3Cdev.teaclave.apache.org%3E)\\n- Release notes: <https://github.com/apache/incubator-teaclave-trustzone-sdk/releases/tag/v0.1.0>\\n- Download link: <https://teaclave.apache.org/download/>\\n\\n**Linaro OP-TEE Contributions meeting**\\n- Recording: [https://linaro-org.zoom.us/rec/share/0o3Ku4zaXSrP-Ep0WI5P-XB-KAiP5d94kXbKmg43VqrnRHUmsLV_sv1wI01JbL0C.kSM-_ov2pc9Sggf_](https://linaro-org.zoom.us/rec/share/0o3Ku4zaXSrP-Ep0WI5P-XB-KAiP5d94kXbKmg43VqrnRHUmsLV_sv1wI01JbL0C.kSM-_ov2pc9Sggf_), Passcode: 9c.&%KR6\\n- Slides: [https://drive.google.com/file/d/1YPig8k-xRyeRxuu1ALTmkqY-nxtH5upR/view?usp=sharing](https://drive.google.com/file/d/1YPig8k-xRyeRxuu1ALTmkqY-nxtH5upR/view?usp=sharing)\\n\\n### Executing WebAssembly in Teaclave\\n\\n![Executing WebAssembly in Teaclave](./img/teaclave-meetup-5-webassembly.png)\\n\\n- [Slides](./pdf/teaclave-meetup-5-executing-webassembly-in-teaclave.pdf)\\n\\nSome question and discussion:\\n\\n- Can we reuse the WebAssembly runtime to improve the performance of startup?\\n- Bridging `tlibc` functions into WAMR.\\n\\n### Open Discussion\\n\\n- ARM CCA: <https://www.arm.com/why-arm/architecture/security-features/arm-confidential-compute-architecture>\\n- EdgelessSys mablerun: <https://github.com/edgelesssys/marblerun>\\n- Attestation mechanism in Google Cloud Confidential Computing"},{"id":"/2021/06/16/announcing-teaclave-trustzone-sdk-0.1.0","metadata":{"permalink":"/blog/2021/06/16/announcing-teaclave-trustzone-sdk-0.1.0","source":"@site/blog/2021-06-16-announcing-teaclave-trustzone-sdk-0.1.0.md","title":"Announcing Apache Teaclave TrustZone SDK (incubating) 0.1.0","description":"On behalf of the Teaclave community, I am happy to announce the release of","date":"2021-06-16T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Announcing Apache Teaclave TrustZone SDK (incubating) 0.1.0","date":"2021-06-16T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #5","permalink":"/blog/2021/06/24/teaclave-meetup-5"},"nextItem":{"title":"Accepting Rust OP-TEE TrustZone SDK to Apache Teaclave (incubating) Proposal","permalink":"/blog/2021/06/04/accepting-rust-optee-trustzone-sdk-proposal"}},"content":"On behalf of the Teaclave community, I am happy to announce the release of\\nTeaclave TrustZone SDK 0.1.0. This is the first Apache Incubator release since\\nthe recent donation to the Teaclave community.\\n\\nTeaclave TrustZone SDK provides abilities to build safe TrustZone applications\\nin Rust. The SDK is based on the OP-TEE project which follows GlobalPlatform TEE\\nspecifications and provides ergonomic APIs. In addition, it enables capability\\nto write TrustZone applications with Rust\'s standard library and many\\nthird-party libraries (i.e., crates). Teaclave TrustZone SDK is a sub-project of\\nApache Teaclave (incubating). To learn more about the design and history of\\nTrustZone SDK,\\nplease read the blog [Welcome Rust OP-TEE TrustZone SDK To Teaclave](https://teaclave.apache.org/blog/2021-03-14-welcome-rust-optee-trustzone-sdk/).\\n\\n## Highlights\\n\\nThis version implements the following Rust APIs in GlobalPlatform TEE\\nspecifications:\\n\\n**TEE Client API** (`optee-teec`)\\n- Context\\n- Error\\n- Operation\\n- Parameter\\n- Session\\n- UUID\\n\\n**TEE Internal Core API** (`optee-utee`)\\n- Arithmetical\\n- Crypto Operation\\n- Error\\n- Object\\n- Parameter\\n- Time\\n- Trace\\n\\nHere is a demonstration of using these Rust APIs to open a session and invoke a\\nfunction to TA.\\n\\n![Teaclave TrustZone SDK APIs](./img/teaclave-trustzone-sdk-apis.png)\\n\\nWe also provides procedure macros to automatically generate bindings interfaces of TA:\\n- `#[ta_create]`, `#[ta_destroy]`, `#[ta_open_session]`, `#[ta_close_session]`, `#[ta_invoke_command]`\\n\\nThese annotations will automatically generate helper functions to bridge the normal/secure worlds.\\n\\n![Teaclave TrustZone SDK Macros](./img/teaclave-trustzone-sdk-macros.png)\\n\\nThis version includes rewrites of all examples (e.g., AES, authentication, big\\ninteger, HOTP) from OP-TEE repository. In addition, we include more examples\\nusing `serde` for serialization and deserialization.\\n\\n![Examples in Teaclave TrustZone SDK](./img/teaclave-trustzone-sdk-examples.png)\\n\\nThis version is compatible with OP-TEE 3.13.0.\\n\\n## Getting Started\\n\\nHere is a simple instruction to download, build and test the TrustZone SDK:\\n\\n```\\n$ wget https://dist.apache.org/repos/dist/dev/incubator/teaclave/trustzone-sdk-0.1.0-rc.1/apache-teaclave-trustzone-sdk-0.1.0-rc.1-incubating.tar.gz\\n$ tar zxvf apache-teaclave-trustzone-sdk-0.1.0-rc.1-incubating.tar.gz && cd\\napache-teaclave-trustzone-sdk-0.1.0-incubating\\n\\n$ # Instructions to verify the source tar:\\nhttps://teaclave.apache.org/download/#verify-the-integrity-of-the-files\\n\\n$ # Building\\n$ docker run --rm -it -v$(pwd):/teaclave-trustzone-sdk -w\\n/teaclave-trustzone-sdk teaclave/teaclave-trustzone-sdk-build:0.1.1\\nbash -c \\"source environment && make\\"\\n\\n$ # Testing\\n$ docker run --rm -it -v$(pwd):/teaclave-trustzone-sdk -w\\n/teaclave-trustzone-sdk teaclave/teaclave-trustzone-sdk-build:0.1.1\\nbash -c \\"source environment && cd ci && ./ci.sh\\"\\n```\\n\\nWe also provide a document [Getting Started with OP-TEE for QEMU\\nARMv8](https://teaclave.apache.org/trustzone-sdk-docs/getting-started-with-optee-for-qemu-armv8/)\\nto get started step by step.\\n\\n## Download\\n\\nYou can download the release from the\\n[download](https://teaclave.apache.org/download/) page. Also, please checkout\\nour [repository](https://github.com/apache/incubator-teaclave-trustzone-sdk)\\nhosted on GitHub.\\n\\n## Contributing\\n\\nTeaclave TrustZone SDK is under the Apache License v2 and open source in The\\nApache Way. We aim to create a project that is maintained and owned by the\\ncommunity. All kinds of contributions are welcome. Thanks to our contributors."},{"id":"/2021/06/04/accepting-rust-optee-trustzone-sdk-proposal","metadata":{"permalink":"/blog/2021/06/04/accepting-rust-optee-trustzone-sdk-proposal","source":"@site/blog/2021-06-04-accepting-rust-optee-trustzone-sdk-proposal.md","title":"Accepting Rust OP-TEE TrustZone SDK to Apache Teaclave (incubating) Proposal","description":"Abstract","date":"2021-06-04T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"The Teaclave PPMC","key":null,"page":null}],"frontMatter":{"title":"Accepting Rust OP-TEE TrustZone SDK to Apache Teaclave (incubating) Proposal","date":"2021-06-04T00:00:00.000Z","author":"The Teaclave PPMC"},"unlisted":false,"prevItem":{"title":"Announcing Apache Teaclave TrustZone SDK (incubating) 0.1.0","permalink":"/blog/2021/06/16/announcing-teaclave-trustzone-sdk-0.1.0"},"nextItem":{"title":"Teaclave Meetup #4","permalink":"/blog/2021/04/29/teaclave-meetup-4"}},"content":"## Abstract\\n\\nRust OP-TEE TrustZone SDK provides abilities to build safe TrustZone\\napplications in Rust. The SDK is based on the OP-TEE project which\\nfollows GlobalPlatform TEE specifications and provides ergonomic APIs.\\nMore information can be found at the project repository:\\nhttps://github.com/sccommunity/rust-optee-trustzone-sdk.\\n\\n## Proposal\\n\\nRust OP-TEE TrustZone SDK provides abilities to build safe TrustZone\\napplications in Rust.\\n\\n### Background\\n\\nThe Rust OP-TEE TrustZone project is being actively developed within\\nBaidu. It was open source on Jan 30, 2019.\\n\\n### Rationale\\n\\nARM TrustZone is another hardware trusted execution environment\\nimplementation. The goal of Teaclave is to provide a universal secure\\ncomputing platform which is agnostic with TEE implementation.\\nCurrently, Teaclave has Teaclave SGX SDK and only supports Intel SGX.\\nWith the Rust OP-TEE TrustZone SDK, we can build the Teaclave platform\\non ARM TrustZone.\\n\\n### Initial Goals\\n\\n- Transfer repository to the Apache Incubator under the Teaclave project\\n- Code cleanup and more documentation\\n\\n#### Meritocracy:\\n\\nThe Rust OP-TEE TrustZone SDK project was originally developed by\\nShengye Wan and Mingshen Sun within Baidu. The project now has new\\ncommitters from around the world. Some open source projects like\\nhttps://github.com/veracruz-project are using the SDK to build their\\nsystems. We encourage everyone to ask questions and create pull\\nrequests to the project.\\n\\n#### Community:\\n\\nWe see several open source projects which are using the SDK for\\ndevelopment. Also, we already receive contributions from external\\ncomitters. The community is growing overtime.\\n\\n#### Core Developers:\\n\\nThe core developers are:\\n- Shengye Wan (simonsywan at gmail dot com)\\n- Mingshen Sun (mssun at apache.org)\\n\\n#### Alignment:\\n\\nThe project is a complimentary of Teaclave\'s TEE backends.\\n\\n### Known Risks\\n\\nAn exercise in self-knowledge. Risks don\'t mean that a project is\\nunacceptable. If they are recognized and noted, then they can be\\naddressed during incubation.\\n\\n#### Project Name\\n\\nSince the project will be accepted as a subproject in Teaclave, the\\nproject is renamed to Teaclave TrustZone SDK.\\n\\n#### Inexperience with Open Source:\\n\\nOne of the core developers, Mingshen Sun is from the Teaclave\\ncommunity. He\'s familiar with The Apache Way for the open source\\ncommunity.\\n\\n#### Length of Incubation:\\n\\nThe project will be in incubation with Apache Teaclave (incubating) project.\\n\\n### Documentation\\n\\n- https://github.com/sccommunity/rust-optee-trustzone-sdk/wiki/Getting-started-with-OPTEE-for-QEMU-ARMv8\\n\\n### Initial Source\\n\\n- https://github.com/sccommunity/rust-optee-trustzone-sdk\\n\\n### Source and Intellectual Property Submission Plan\\n\\nWe will submit a Software Grant for this project later.\\n\\n#### External Dependencies:\\n\\nThe dependencies have Apache compatible license, which is provided\\nunder the BSD 2-Clause license.\\n\\n#### Cryptography:\\n\\nN/A\\n\\n### Required Resources\\n\\n#### Mailing lists:\\n\\nThe project shares the same mailing list of Teaclave.\\n\\n#### Git Repositories:\\n\\n- https://gitbox.apache.org/repos/asf/incubator-teaclave-trustzone-sdk.git\\n- https://github.com/apache/incubator-teaclave-trustzone-sdk\\n\\n#### Issue Tracking:\\n\\nSame with Teaclave.\\n\\n#### Other Resources:\\n\\nN/A\\n\\n### Initial Committers\\n\\n- Mingshen Sun (mssun at apache dot org)\\n- Shengye Wan (simonsywan at gmail dot com)"},{"id":"/2021/04/29/teaclave-meetup-4","metadata":{"permalink":"/blog/2021/04/29/teaclave-meetup-4","source":"@site/blog/2021-04-29-teaclave-meetup-4.md","title":"Teaclave Meetup #4","description":"In April 29, we gathered in Zoom for the third monthly Teaclave meetup. In this","date":"2021-04-29T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #4","date":"2021-04-29T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Accepting Rust OP-TEE TrustZone SDK to Apache Teaclave (incubating) Proposal","permalink":"/blog/2021/06/04/accepting-rust-optee-trustzone-sdk-proposal"},"nextItem":{"title":"Podling Teaclave Report - April 2021","permalink":"/blog/2021/04/10/podling-teaclave-report-april-2021"}},"content":"In April 29, we gathered in Zoom for the third monthly Teaclave meetup. In this\\nmeetup, we\'re glad to have Jiang Jun from [Phala Network](https://phala.network/en/)\\nto give a talk on Taclave SGX SDK meets Substrate. Phala Network is a\\ndecentralized confidential computing cloud with tech stack includes Teaclave SGX\\nSDK and Substrate.\\n\\n![Phala Network](./img/teaclave-meetup-phala-network.png)\\n\\nIn the meetup, we discuss use cases, technical details and implementation of\\nPhala Network, as well as some difficulties with current version of Teaclave SGX\\nSDK.\\n\\nWe are continuing work with out community together to improve the projects.\\nHopefully, more users and developers can join in our community and share your\\nexperience.\\n\\n![Teaclave Meetup #4](./img/teaclave-meetup-4-zoom.png)\\n\\nAt last, if you are interested in our meetup, please subscribe our mailing list\\nfor the latest schedule of meetups."},{"id":"/2021/04/10/podling-teaclave-report-april-2021","metadata":{"permalink":"/blog/2021/04/10/podling-teaclave-report-april-2021","source":"@site/blog/2021-04-10-podling-teaclave-report-april-2021.md","title":"Podling Teaclave Report - April 2021","description":"Teaclave","date":"2021-04-10T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Podling Teaclave Report - April 2021","date":"2021-04-10T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #4","permalink":"/blog/2021/04/29/teaclave-meetup-4"},"nextItem":{"title":"Teaclave Meetup #3","permalink":"/blog/2021/03/25/teaclave-meetup-3"}},"content":"## Teaclave\\n\\nTeaclave is a universal secure computing platform, making computation on\\nprivacy-sensitive data safe and simple.\\n\\nTeaclave has been incubating since 2019-08-20.\\n\\n### Three most important unfinished issues to address before graduating:\\n\\n- Improve project structure and documentation\\n- Grow the community (attracting more committers, contributors, users)\\n- Publish Apache releases (resolving logistics on Apache release)\\n\\n### Are there any issues that the IPMC or ASF Board need to be aware of?\\n\\nNone. \\n\\n### How has the community developed since the last report?\\n\\nSince the last report, we have started monthly virtual meetups for three times.\\nMany people from the community share their usage experience of Teaclave. Also,\\nwe invited some contributors to talk about some technical details of the design\\nand implementation. For each meetup, we have minutes write-up published on the\\nTeaclave blog.\\n  - Teaclave Meetup #1: <https://teaclave.apache.org/blog/2021-01-27-teaclave-meetup-1/>\\n  - Teaclave Meetup #2: <https://teaclave.apache.org/blog/2021-02-24-teaclave-meetup-2/>\\n  - Teaclave Meetup #3: <https://teaclave.apache.org/blog/2021-03-24-teaclave-meetup-3/>\\n\\nIn addition, we have one more project (Crust Network) powered by Teaclave joined\\nin our \\"Powered By\\" page on the Teaclave homepage.\\n  - <https://teaclave.apache.org/powered-by/>\\n\\n### How has the project developed since the last report?\\n\\nDuring this period, we also accepted the Rust OP-TEE TrustZone SDK project to\\nTeaclave as a sub-project, named as Teaclave TrustZone SDK. Similar to Teaclave\\nSGX SDK, Teaclave TrustZone SDK will be the foundation of the Teaclave FaaS\\nplatform to support multiple trusted execution environments.\\n  - Welcome Rust OP-TEE TrustZone SDK TO Teaclave: <https://teaclave.apache.org/blog/2021-03-14-welcome-rust-optee-trustzone-sdk/>\\n\\nWe published a project roadmap in 2021:\\n  - Roadmap in 2021: Project Maturity and Community Buildup: <https://teaclave.apache.org/blog/2021-01-19-roadmap-in-2021-project-maturity-and-community-buildup/>\\n\\nWe also announce the 0.2.0 release. In 0.2.0, we focus on various components\\nincluding built-in functions, SDKs in different languages, docker, command line\\ninterface, documents, etc.\\n  - Announcing Apache Teaclave (incubating) 0.2.0: <https://teaclave.apache.org/blog/2021-03-01-announcing-teaclave-0-2-0/>\\n\\n### How would you assess the podling\'s maturity?\\nPlease feel free to add your own commentary.\\n\\n  - [ ] Initial setup\\n  - [ ] Working towards first release\\n  - [x] Community building\\n  - [ ] Nearing graduation\\n  - [ ] Other:\\n\\n### Date of last release:\\n\\n  2021-03-02: Apache Teaclave (incubating) 0.2.0\\n\\n### When were the last committers or PPMC members elected?\\n\\n  2020-10-22, Ran Duan (rduan), Committer\\n\\n### Have your mentors been helpful and responsive?\\n\\n  Yes, our mentors work responsively to help us with accepting new project\\n  donation into Teaclave.\\n\\n### Is the PPMC managing the podling\'s brand / trademarks?\\n\\n  We don\'t find any 3rd parties incorrectly using the podling\'s name and brand. The VP, Brand has approved the project name. (PODLINGNAMESEARCH-175)"},{"id":"/2021/03/25/teaclave-meetup-3","metadata":{"permalink":"/blog/2021/03/25/teaclave-meetup-3","source":"@site/blog/2021-03-25-teaclave-meetup-3.md","title":"Teaclave Meetup #3","description":"In March 25, we gathered in Zoom for the third monthly Teaclave meetup. In this","date":"2021-03-25T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #3","date":"2021-03-25T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Podling Teaclave Report - April 2021","permalink":"/blog/2021/04/10/podling-teaclave-report-april-2021"},"nextItem":{"title":"\u6b22\u8fce Rust OP-TEE TrustZone SDK \u6210\u4e3a Teaclave \u5b50\u9879\u76ee","permalink":"/blog/2021/03/15/welcome-rust-optee-trustzone-sdk-cn"}},"content":"In March 25, we gathered in Zoom for the third monthly Teaclave meetup. In this\\nmeetup, we\'re glad to have two speakers talking about some initial progress of\\nTeaclave verification and comparison of public cloud attestation services.\\n\\n![Teaclave Meetup #3](./img/teaclave-meetup-3-zoom.jpg)\\n\\n## Schedule\\n\\n- Recent Update of Teaclave, Mingshen (3m)\\n- Teaclave Verification, Sean (15m)\\n- Comparison of Public Cloud Attestation Services, Mengyuan Li (45 m)\\n\\n## Teaclave Verification\\n\\nIn this session, Sean talked introduced the plan of Teaclave verification.\\nThe main ideas is to create formal descriptions, specifications, and proofs for\\nsome core components of Teaclave.\\n\\nThe initial effort on this field is trying to formally describe the access\\ncontrol module in Teaclave. And then prove it with requirements defined in\\n[Common Criteria for Information Technology Security Evaluation](https://www.commoncriteriaportal.org/files/ccfiles/CCPART2V3.1R5.pdf).\\nThe security objective of access control module is to prevent unauthorized users\\nfrom accessing the critical data through tasks and functions. By achieving the\\nsecurity objective, the threats of runtime tasks and functions abuse are\\neliminated under the assumptions identified in security problem definition.\\nWith these objectives, we can find some corresponding requirements in Common\\nCriteria, e.g., FIA_UAU.2 for user authentication before any action.\\n\\nThe initial work has been accepted as a separate project in Teaclave.\\nIf you are interested in this topic, please see\\n<https://github.com/apache/incubator-teaclave-verification> to learn more.\\n\\n## Comparison of Public Cloud Attestation Services\\n\\nThen, Mengyuan talked his recent research on attestation, especially, on public\\ncloud attestation services.\\n\\n![Public Cloud Attestation Services](./img/public-cloud-attestation-services.png)\\n\\nHere the abstract of the talk:\\n\\nConfidential computing is an emerging security feature provided by more and more\\npublic cloud service providers (e.g., Amazon AWS, Microsoft Azure, and Google\\nCloud) in order to help customers protect their sensitive data in the cloud\\nenvironment. Some popular confidential computing services include Intel Software\\nGuard Extensions (SGX) enclaves and AMD Secure Encrypted Virtualization (SEV)\\nVMs. These services are usually atop different hardware-based Trusted Execution\\nEnvironments (TEE) technologies.\\n\\nMeanwhile, to help convince the customers the trustworthiness of the platform\\nhardware and the integrity of codes inside the TEE, cloud services providers\\nalso offer remote attestation services. In this talk, we will first cover the\\nremote attestation workflow provided by some famous cloud TEE services,\\nincluding Azure Open Enclave, Nitro Enclave, Google confidential computing VM\\nand Fortanix. From the perspective of customers, we also focus on the\\nattestation reports the customers can get. We then introduce Teaclave\'s current\\nattestation design and discuss the attestation report standard Teaclave should\\nfollow.\\n\\nHe also discussed the attestation design of Teaclave.\\n\\n![Public Cloud Attestation Services of Teaclave](./img/public-cloud-attestation-services-teaclave.png)\\n\\nIn the end, he also summarized the roles in the attestation ecosystem and\\npositions of services/products discussed in this talk.\\n\\n![Public Cloud Attestation Services Summary](./img/public-cloud-attestation-services-summary.png)\\n\\nAt last, thanks for attending this meetup. I\'ll continue to drive this meetup\\nand make it a monthly activity for the community. If you want to speak in the\\nnext time, please post your proposed topic in the mailing list. I\'ll help you to\\nschedule the time."},{"id":"/2021/03/15/welcome-rust-optee-trustzone-sdk-cn","metadata":{"permalink":"/blog/2021/03/15/welcome-rust-optee-trustzone-sdk-cn","source":"@site/blog/2021-03-15-welcome-rust-optee-trustzone-sdk-cn.md","title":"\u6b22\u8fce Rust OP-TEE TrustZone SDK \u6210\u4e3a Teaclave \u5b50\u9879\u76ee","description":"English | \u4e2d\u6587","date":"2021-03-15T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"\u6b22\u8fce Rust OP-TEE TrustZone SDK \u6210\u4e3a Teaclave \u5b50\u9879\u76ee","date":"2021-03-15T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #3","permalink":"/blog/2021/03/25/teaclave-meetup-3"},"nextItem":{"title":"Welcome Rust OP-TEE TrustZone SDK to Teaclave","permalink":"/blog/2021/03/15/welcome-rust-optee-trustzone-sdk"}},"content":"[English](/blog/2021-03-14-welcome-rust-optee-trustzone-sdk) | [\u4e2d\u6587](/blog/2021-03-14-welcome-rust-optee-trustzone-sdk-cn)\\n\\nTrustZone \u4e3a\u624b\u673a\u3001\u5d4c\u5165\u5f0f\u8bbe\u5907\u3001\u4e91\u8ba1\u7b97\u7b49 ARM \u751f\u6001\u63d0\u4f9b\u5b89\u5168\u7684\u53ef\u4fe1\u6267\u884c\u73af\u5883\uff0c\u7528\u4e8e\u5305\u62ec\\n\u5b89\u5168\u652f\u4ed8\u3001\u5bc6\u94a5\u7ba1\u7406\u3001\u6a21\u578b\u4fdd\u62a4\u7b49\u573a\u666f\u3002\u4f46\u662f\u7531\u4e8e\u5185\u5b58\u5b89\u5168\u95ee\u9898\uff0cTrustZone \u4e2d\u8fd0\u884c\u7684\u5b89\u5168\\n\u5e94\u7528 (trusted application \u6216\u53eb TA) \u7684\u5b89\u5168\u6027\u5927\u6253\u6298\u6263\u3002\\n\u4f8b\u5982[\u9ad8\u901a QSEE \u5185\u5b58\u5b89\u5168\u95ee\u9898](http://bits-please.blogspot.com/2016/05/qsee-privilege-escalation-vulnerability.html)\\n[1] \u9020\u6210\u7684\u5b89\u5168\u4e16\u754c\uff08secure world) \u7684\u6f0f\u6d1e\uff0c\\n\u540e\u679c\u751a\u81f3\u53ef\u4ee5[\u62ff\u5230\u5168\u78c1\u76d8\u52a0\u5bc6\u7684\u5bc6\u94a5](http://bits-please.blogspot.com/2016/06/extracting-qualcomms-keymaster-keys.html) [2]\u3002\\n\\n2019 \u5e74\u521d\u767e\u5ea6\u5f00\u6e90\u4e86 Rust OP-TEE TrustZone SDK\uff0c\u4e3a\u5f53\u4eca\u5e7f\u6cdb\u4f7f\u7528\u7684\u5f00\u6e90 TrustZone \u5b9e\\n\u73b0 OP-TEE \u63d0\u4f9b\u4e86\u4e00\u5957**\u5185\u5b58\u5b89\u5168**\u3001**\u4f7f\u7528\u65b9\u4fbf**\u7684 SDK\u3002SDK \u57fa\u4e8e GlobalPlatform \u7684\\nTEE \u6807\u51c6\uff0c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u6807\u51c6\u7684\u5f00\u53d1\u63a5\u53e3\u3002\u9664\u6b64\u4e4b\u5916 Rust OP-TEE TrustZone SDK **\u652f\u6301\\n\u6807\u51c6\u5e93**\u548c**\u7b2c\u4e09\u65b9\u5e93**\uff0c\u63d0\u9ad8\u4e86 TA \u7684\u5f00\u53d1\u901f\u5ea6\uff0c\u5e76\u6269\u5c55\u4e86 TrustZone \u7684\u5e94\u7528\u573a\u666f\u3002\\n\\n\u4e3a\u4e86\u52a0\u901f\u9690\u79c1\u5b89\u5168\u751f\u6001\u53d1\u5c55\uff0c\u5b8c\u5584 TrustZone \u7684\u6280\u672f\u57fa\u7840\u8bbe\u65bd\uff0c\u767e\u5ea6\u5728 2021 \u5e74\u521d\u6b63\u5f0f\u628a\\n\u9879\u76ee\u6350\u8d60\u7ed9 Apache \u57fa\u91d1\u4f1a\uff0c\u4f5c\u4e3a Teaclave \u7684\u5b50\u9879\u76ee\u4e4b\u4e00\uff0c\u540c\u65f6\u66f4\u540d\u4e3a Teaclave\\nTrustZone SDK\uff0c\u65b0\u7684\u9879\u76ee\u4ee3\u7801\u5e93\u5730\u5740\u4e3a\uff1a\\n[https://github.com/apache/incubator-teaclave-trustzone-sdk](https://github.com/apache/incubator-teaclave-trustzone-sdk)\\n\u3002Teaclave TrustZone SDK \u4e0e Teaclave SGX SDK \u4e00\u6837\uff0c\u53ef\u4ee5\u4e3a Teaclave FaaS \u9690\u79c1\u5b89\u5168\\n\u8ba1\u7b97\u5e73\u53f0\u63d0\u4f9b\u5e95\u5c42\u652f\u6301\uff0c\u8d4b\u80fd\u591a\u5e73\u53f0\u53ef\u4fe1\u6267\u884c\u73af\u5883\u7684\u9690\u79c1\u5b89\u5168\u8ba1\u7b97\u751f\u6001\u3002\\n\\n## Teaclave TrustZone SDK \u8bbe\u8ba1\u548c\u5b9e\u73b0\\n\\nTeaclave TrustZone SDK \u5728 GlobalPlatform \u6807\u51c6\u7684 API \u4e0a\u91cd\u65b0\u8bbe\u8ba1\u4e86\u5b89\u5168\u7684 Rust \u63a5\u53e3\uff0c\\n\u4f7f\u7528 Rust \u7f16\u5199 TA\uff08\u56fe\u4e2d\u7684 trusted apps\uff09\u548c app\uff08\u56fe\u4e2d client apps\uff09\u80fd\u591f\u5927\u5927\u51cf\u5c11\u5185\\n\u5b58\u5b89\u5168\u95ee\u9898\uff0c\u786e\u4fdd\u53ef\u4fe1\u6267\u884c\u73af\u5883\u7684\u5b89\u5168\u3002\\n\\n![Teaclave TrustZone SDK Design](./img/teaclave-trustzone-sdk-design.png)\\n\\n\u901a\u8fc7\u4f7f\u7528 Rust \u7684\u8fc7\u7a0b\u5b8f\uff08procedure macro\uff09\u81ea\u52a8\u751f\u6210\u8fb9\u754c\u4ee3\u7801\uff0c\u51cf\u5c11\u4e86\u5f00\u53d1\u4e2d\u4e0d\u5fc5\u8981\u7684\\n\u8d1f\u62c5\uff0c\u5e76\u4e14\u80fd\u591f\u907f\u514d\u5f00\u53d1\u4e2d\u56e0\u4e3a\u7c97\u5fc3\u9020\u6210\u7684\u5b89\u5168\u95ee\u9898\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ea\u9700\u8981\u5728\u76f8\u5e94\u7684\u51fd\u6570\u4e0a\\n\u52a0 `#[ta_create]`, `#[ta_open_session]`, `#[ta_close_session]`, `#[ta_destory]`,\\n`#[ta_invoke_command]`\u3002\\n\\n![Teaclave TrustZone SDK Macros](./img/teaclave-trustzone-sdk-macros.png)\\n\\n\u901a\u8fc7\u5229\u7528 Rust \u7684\u4e30\u5bcc\u7684\u7c7b\u578b\u7cfb\u7edf\uff0c\u80fd\u5728\u7f16\u8bd1\u65f6\u62a5\u544a\u5185\u5b58\u5b89\u5168\u95ee\u9898\uff0c\u4f8b\u5982\u4e0b\u56fe\u4e2d\u5bf9\u4e8e\\nclient \u7684\u5b9e\u73b0\uff0c\u76f8\u6bd4\u590d\u6742\u5e76\u4e14\u7c7b\u578b\u7b80\u5355\u7684 C \u63a5\u53e3\uff0cRust API \u8bed\u4e49\u66f4\u6e05\u6670\uff0c\u5e76\u63d0\u4f9b\u5f3a\u7c7b\u578b\\n\u68c0\u67e5\u3002\\n\\n![Teaclave TrustZone SDK APIs](./img/teaclave-trustzone-sdk-apis.png)\\n\\n\u9879\u76ee\u4e2d\u63d0\u4f9b\u4e86 13 \u4e2a\u6837\u4f8b\u7a0b\u5e8f\uff0c\u5305\u62ec\u52a0\u89e3\u5bc6\uff0c\u5b89\u5168\u5b58\u50a8\uff0cHOTP \u7b49\u7b49\u3002\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u5c55\u793a\u4e86\\n\u4f7f\u7528 Rust \u7684\u7b2c\u4e09\u65b9\u5e93 serde \u4f5c\u4e3a\u8fb9\u754c\u7684\u5e8f\u5217\u5316\u6765\u4f20\u9012\u590d\u6742\u53c2\u6570\uff0c\u907f\u514d\u51fa\u73b0\u5b89\u5168\u8fb9\u754c\u8bbe\u8ba1\\n\u4e0d\u5f53\u5f15\u53d1\u7684\u5185\u5b58\u5b89\u5168\u95ee\u9898\u3002\\n\\n## \u5feb\u901f\u4e0a\u624b\u3001\u6587\u6863\\n\\nTeaclave TrustZone SDK \u7684 API \u90fd\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u6587\u6863\uff0c\u5728\u9879\u76ee Wiki \u4e2d\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\\n\u5feb\u901f\u4e0a\u624b\u7684\u4f8b\u5b50\uff0c\u5728 QEMU \u6a21\u62df\u5668\u4e2d\u8fd0\u884c\u4f7f\u7528 TrustZone SDK \u7684 trusted app\u3002\u94fe\u63a5\u5982\u4e0b\uff1a\\n[https://github.com/apache/incubator-teaclave-trustzone-sdk/wiki/Getting-started-with-OPTEE-for-QEMU-ARMv8](https://github.com/apache/incubator-teaclave-trustzone-sdk/wiki/Getting-started-with-OPTEE-for-QEMU-ARMv8)\\n\u3002\u66f4\u591a\u5173\u4e8e Teaclave TrustZone SDK \u7684\u8bbe\u8ba1\u548c\u6027\u80fd\u7b49\u90fd\u5728\u8bba\u6587 RusTEE: Developing\\nMemory-Safe ARM TrustZone Applications \u4e2d\u627e\u5230\uff0c\u6b64\u8bba\u6587\u4e5f\u6536\u5f55\u4e8e ACSAC 2020\u3002\\n\\n![Teaclave TrustZone Paper](./img/teaclave-trustzone-sdk-paper.png)\\n\\n## Teaclave TrustZone SDK \u65f6\u95f4\u7ebf\\n\\n- 2019 \u5e74\u521d\u5f00\u6e90\u3002\\n- 2019 \u5e74\u5728 Linaro Connect \u548c RustCon Asia \u5bf9\u5916\u53d1\u5e03\uff0c\u5f97\u5230\u4e86 ARM \u7684\u652f\u6301\uff0c\u73b0\u5728\u5176\u9690\u79c1\u8ba1\u7b97\u76f8\u5173\u9879\u76ee\u4e2d\u4f7f\u7528\u3002\\n- 2020 \u5e74\u76f8\u5173\u6587\u7ae0\u53d1\u8868\u5728\u56fd\u9645\u9876\u7ea7\u5b89\u5168\u4f1a\u8bae ACSAC\uff0c\u5f97\u5230\u5b66\u672f\u754c\u80af\u5b9a\u3002\\n- \u968f\u7740\u9690\u79c1\u5b89\u5168\u8ba1\u7b97\u7684\u53d1\u5c55\uff0c\u591a\u4e2a\u5f00\u6e90\u9879\u76ee\u5f00\u59cb\u4f7f\u7528\uff0c\u4f8b\u5982\u7531 ARM Research \u4e3b\u5bfc\u7684 Veracruz \u5f00\u6e90\u9879\u76ee\u4f7f\u7528 SDK \u6784\u5efa\u5176\u9690\u79c1\u8ba1\u7b97\u8bd5\u9a8c\u9879\u76ee\uff0cVeracurz \u4e5f\u5c06\u52a0\u5165\u9690\u79c1\u8ba1\u7b97\u8054\u76df\uff08Confidential Computing Consortium\uff09\u3002\\n- 2021 \u5e74 2 \u6708\u5347\u7ea7 TrustZone SDK \u652f\u6301 OP-TEE 3.11 \u548c 3.12\u3002\\n- 2021 \u5e74 2 \u6708\u542f\u52a8\u9879\u76ee\u6350\u8d60\u6d41\u7a0b\uff0c\u901a\u8fc7\u793e\u533a\u6295\u7968\u5e76\u63d0\u4ea4 Software Grant Agreement\u3002\\n- 2021 \u5e74 3 \u6708\u9879\u76ee repository \u6b63\u5f0f\u79fb\u4ea4\u5230 Apache \u7ec4\u7ec7\u4e0b\uff0c\u96b6\u5c5e\u4e8e Apache Teaclave (incubating) \u9879\u76ee\u3002\\n\\n![Teacalve TrustZone SDK Timeline](./img/teaclave-trustzone-sdk-timeline.png)\\n\\n## Teaclave \u5f00\u6e90\u793e\u533a\\n\\nTrustZone SDK \u52a0\u5165 Apache \u540e\uff0c\u5c06\u4e0e Teaclave \u5f00\u6e90\u793e\u533a\u5171\u540c\u53d1\u5c55\uff0c\u975e\u5e38\u6b22\u8fce\u5927\u5bb6\u7684\u8d21\u732e\uff0c\\n\u4e00\u8d77\u63a8\u52a8\u9690\u79c1\u5b89\u5168\u8ba1\u7b97\u751f\u6001 \u3002\u5df2\u6709\u81f3\u5c11\u56db\u5bb6\u516c\u53f8\u6216\u7ec4\u7ec7\u5728\u4ea7\u54c1\u4e2d\u4f7f\u7528 Teaclave\uff0c\u5e76\u4e14\u6709\u8d85\\n\u8fc7\u4e5d\u4e2a\u5f00\u6e90\u9879\u76ee\u4f7f\u7528\u4e86 Teaclave \u5e73\u53f0\u548c Teaclave SGX SDK\u3002\u8fd9\u4e9b\u90fd\u7ed9\u9879\u76ee\u7684\u53d1\u5c55\u63d0\u4f9b\u6e90\\n\u6e90\u4e0d\u65ad\u7684\u52a8\u529b\u3002\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u5b98\u7f51 community \u4e0b\u67e5\u770b\uff1a\\n[https://teaclave.apache.org/community/](https://teaclave.apache.org/community/)\\n\\n![Teaclave Commmunity](./img/teaclave-ecosystem-cn.png)\\n\\nTeaclave \u7684\u5f00\u6e90\u662f\xa0[The Apache Way](https://www.apache.org/theapacheway/)\\n([https://www.apache.org/theapacheway/](https://www.apache.org/theapacheway/))\\n\u7684\u5f00\u6e90\uff0c\u65e0\u8bba\u662f\u4ee3\u7801\u3001\u6587\u6863\u3001\u8bbe\u8ba1\u8fd8\u662f\u8def\u7ebf\u56fe\u89c4\u5212\uff0c\u6211\u4eec\u90fd\u4f1a\u5728\u793e\u533a\u7684\u5404\u4e2a\u6e20\u9053\u4e2d\u8ba8\u8bba\u3002\u5982\\n\u679c \u4f60\u60f3\u5173\u6ce8 Teaclave\uff0c\u4ea6\u6216\u60f3\u52a0\u5165\u6211\u4eec\u7684\u8ba8\u8bba\uff0c\u53ef\u4ee5\u5728\xa0[Github issues](https://lists.apache.org/list.html?dev@teaclave.apache.org)\uff0c\u90ae\u4ef6\u5217 \u8868\\n\u56de\u590d\u6211\u4eec\u3001\u53d1\u8d77\u65b0\u7684\u8bdd\u9898\u3002\u4e5f\u53ef\u4ee5\u5173\u6ce8\u6211\u4eec\u7684 Twitter \u8d26\u53f7\\n[@ApacheTeaclave](https://twitter.com/ApacheTeaclave)\u4e86\u89e3\u6700\u65b0\u52a8\u6001\u3002\u9664\u6b64\u4e4b\u5916\uff0c\\n\u6211\u4eec\u5728[\u5b98\u7f51](https://teaclave.apache.org/docs/papers-talks/)\\n([https://teaclave.apache.org/](https://teaclave.apache.org/))\u4e2d\u63d0\u4f9b\u4e86\\nTeaclave \u76f8\u5173\u7684\u6f14\u8bb2\u3001\u8bba\u6587\u548c\u6587\u7ae0\uff0c\u5305\u62ec TrustZone SDK \u4e4b\u524d\u7684\u6f14\u8bb2 slides \u4ee5\u53ca\u89c6\u9891\u3002\\n\\n\u53c2\u8003\u94fe\u63a5\uff1a\\n\\n[1] Qualcomm\'s Secure Execution Environment (QSEE) privilege escalation\\nvulnerability and exploit (CVE-2015-6639) :\\n[http://bits-please.blogspot.com/2016/05/qsee-privilege-escalation-vulnerability.html](http://bits-please.blogspot.com/2016/05/qsee-privilege-escalation-vulnerability.html)\\n\\n[2] Extracting Qualcomm\'s KeyMaster Keys - Breaking Android Full Disk\\nEncryption:\\n[http://bits-please.blogspot.com/2016/06/extracting-qualcomms-keymaster-keys.html](http://bits-please.blogspot.com/2016/06/extracting-qualcomms-keymaster-keys.html)"},{"id":"/2021/03/15/welcome-rust-optee-trustzone-sdk","metadata":{"permalink":"/blog/2021/03/15/welcome-rust-optee-trustzone-sdk","source":"@site/blog/2021-03-15-welcome-rust-optee-trustzone-sdk.md","title":"Welcome Rust OP-TEE TrustZone SDK to Teaclave","description":"English | \u4e2d\u6587","date":"2021-03-15T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Welcome Rust OP-TEE TrustZone SDK to Teaclave","date":"2021-03-15T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"\u6b22\u8fce Rust OP-TEE TrustZone SDK \u6210\u4e3a Teaclave \u5b50\u9879\u76ee","permalink":"/blog/2021/03/15/welcome-rust-optee-trustzone-sdk-cn"},"nextItem":{"title":"Apache Teaclave (incubating) 0.2.0 \u53d1\u5e03","permalink":"/blog/2021/03/02/announcing-teaclave-0.2.0-cn"}},"content":"[English](/blog/2021-03-14-welcome-rust-optee-trustzone-sdk) | [\u4e2d\u6587](/blog/2021-03-14-welcome-rust-optee-trustzone-sdk-cn)\\n\\nTrustZone is a security feature by ARM SoC to provide a trusted execution\\nenvironment to protect areas like mobile computing, edge computing, and\\nemerging confidential computing, supporting scenarios like payments, key\\nmanagement, model protection, etc. However, one major security threat in\\nTrustZone applications is the memory safety issue. For instance, a\\nvulnerability of Qualcomm\'s QSEE is caused by the memory safety issue [1].\\nAttackers can even get the full-disk encryption key by exploiting such kind of\\nvulnerability [2].\\n\\nIn 2019, Baidu open sourced the Rust OP-TEE TrustZone SDK project, enabling\\nsafe, functional, and ergonomic development of TrustZone app developments.\\nThe SDK provides a safer APIs based on the GlobalPlatform\'s TEE standard.\\nIn addition, Rust OP-TEE TrustZone SDK also support Rust\'s standard library and\\nthird-party crates (i.e., libraries). This will improve the efficiency of\\ndevelopments of TrustZone apps, and also extend its usage scenarios.\\n\\nTo accelerate the development of confidential computing ecosystem and improve\\nTrustZone\'s foundation, Baidu has donated Rust OP-TEE TrustZone SDK to Apache Software\\nFoundation as a subproject of Teaclave, and renamed it as Teaclave TrustZone SDK.\\nThe location of new repository is \\n[https://github.com/apache/incubator-teaclave-trustzone-sdk](https://github.com/apache/incubator-teaclave-trustzone-sdk).\\nSimilar to Teaclave SGX SDK, Teaclave TrustZone SDK will be the foundation of\\nTeaclave FaaS platform to support multiple trusted execution environments.\\n\\n## Design and Implementation of Teaclave TrustZone SDK\\n\\nBased on the GlobalPlatform\'s C APIs, Teaclave TrustZone SDK provides safer Rust interfaces.\\nWith the SDK, TrustZone apps will not be affected by any memory safety issues\\ncaused by the Rust\'s strong type system.\\n\\n![Teaclave TrustZone SDK Design](./img/teaclave-trustzone-sdk-design.png)\\n\\nWe also created procedure macros to help developments. For example, developers\\ncan simply put\\n`#[ta_create]`, `#[ta_open_session]`, `#[ta_close_session]`, `#[ta_destory]`,\\nand `#[ta_invoke_command]` annotations before corresponding functions. These\\nannotations will automatically generate helper functions to bridge the normal/secure worlds.\\n\\n![Teaclave TrustZone SDK Macros](./img/teaclave-trustzone-sdk-macros.png)\\n\\nBy using the rich type system of Rust, the memory safety issues will be reported\\nat compile time. For example, in the following case, compared to C\'s APIs, the\\nRust APIs have clearer semantics and more strict type checking.\\n\\n![Teaclave TrustZone SDK APIs](./img/teaclave-trustzone-sdk-apis.png)\\n\\nThe project also has 13 samples, including encryption/decryption, secure storage, HOTP, etc.\\nAlso, we provide a message passing sample code by using `serde` for\\nserialization and de-serialization between different worlds to avoid any\\nsecurity issues caused by improper design in boundaries.\\n\\n## Getting Started and Documentations\\n\\nAll APIs in Teaclave TrustZone SDK are well documented. In the project\'s Wiki\\npage, we have [a quick-start document](https://github.com/apache/incubator-teaclave-trustzone-sdk/wiki/Getting-started-with-OPTEE-for-QEMU-ARMv8)\\nto guide you compiling and running a TrustZone app in QEMU emulators.\\nYou can find more design and performance evaluation in our paper published in ACSAC 2020.\\n\\n![Teaclave TrustZone Paper](./img/teaclave-trustzone-sdk-paper.png)\\n\\n## Teaclave TrustZone SDK Timeline\\n\\n- 2019: Open source.\\n- 2019: Talks in Linaro Connect and RustCon Asia.\\n- 2020: Technical report published in ACSAC 2020.\\n- 2020: Many open source projects started to use the SDK. E.g., [Veracruz by ARM Research](https://github.com/veracruz-project/veracruz)\\n  is an experimental projects on confidential computing using the SDK.\\n- Feb 2021: Support OP-TEE 3.11 and 3.12.\\n- Feb 2021: Initial the donation procedure.\\n- Mar 2021: Officially transferred to Teaclave.\\n\\n![Teacalve TrustZone SDK Timeline](./img/teaclave-trustzone-sdk-timeline.png)\\n\\nReferences:\\n\\n[1] Qualcomm\'s Secure Execution Environment (QSEE) privilege escalation\\nvulnerability and exploit (CVE-2015-6639) :\\n[http://bits-please.blogspot.com/2016/05/qsee-privilege-escalation-vulnerability.html](http://bits-please.blogspot.com/2016/05/qsee-privilege-escalation-vulnerability.html)\\n\\n[2] Extracting Qualcomm\'s KeyMaster Keys - Breaking Android Full Disk\\nEncryption:\\n[http://bits-please.blogspot.com/2016/06/extracting-qualcomms-keymaster-keys.html](http://bits-please.blogspot.com/2016/06/extracting-qualcomms-keymaster-keys.html)"},{"id":"/2021/03/02/announcing-teaclave-0.2.0-cn","metadata":{"permalink":"/blog/2021/03/02/announcing-teaclave-0.2.0-cn","source":"@site/blog/2021-03-02-announcing-teaclave-0.2.0-cn.md","title":"Apache Teaclave (incubating) 0.2.0 \u53d1\u5e03","description":"English | \u4e2d\u6587","date":"2021-03-02T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Apache Teaclave (incubating) 0.2.0 \u53d1\u5e03","date":"2021-03-02T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Welcome Rust OP-TEE TrustZone SDK to Teaclave","permalink":"/blog/2021/03/15/welcome-rust-optee-trustzone-sdk"},"nextItem":{"title":"Announcing Apache Teaclave (incubating) 0.2.0","permalink":"/blog/2021/03/02/announcing-teaclave-0.2.0"}},"content":"[English](/blog/2021-03-01-announcing-teaclave-0-2-0/) | [\u4e2d\u6587](/blog/2021-03-01-announcing-teaclave-0-2-0-cn/)\\n\\nApache Teaclave (incubating) \u662f\u4e00\u4e2a\u9690\u79c1\u5b89\u5168\u8ba1\u7b97\u5e73\u53f0\uff0c\u4e3a\u9690\u79c1\u6570\u636e\u8ba1\u7b97\u8d4b\u80fd\u3002\u57fa\u4e8e\u786c\\n\u4ef6\u5b89\u5168\u80fd\u529b\uff0cTeaclave \u786e\u4fdd\u654f\u611f\u6570\u636e\u5728\u53ef\u4fe1\u57df\u5916\u548c\u79bb\u5cb8\u573a\u666f\u4e0b\u5b89\u5168\u53ef\u63a7\u7684\u6d41\u901a\u548c\u5904\u7406\uff0c\u65e0\\n\u9700\u62c5\u5fc3\u9690\u79c1\u6570\u636e\u6cc4\u9732\u548c\u6ee5\u7528\u3002 Teaclave \u540c\u65f6\u652f\u6301\u591a\u65b9\u53c2\u4e0e\u7684\u8054\u5408\u8ba1\u7b97\uff0c\u6253\u7834\u4f01\u4e1a\u548c\u7ec4\u7ec7\u4e2d\\n\u7684\u6570\u636e\u5b64\u5c9b\u3002Teaclave \u4e8e 2019 \u5e74\u7531\u767e\u5ea6\u6350\u8d60\u8fdb\u5165 Apache \u57fa\u91d1\u4f1a\u5b75\u5316\u5668\u3002\u5728 2020 \u5e74 10\\n\u6708\u53d1\u5e03\u7b2c\u4e00\u4e2a\u5f00\u6e90\u793e\u533a\u7248\u672c\u3002\\n\\nTeaclave \u4f7f\u7528 Intel SGX\uff0c \u63d0\u4f9b\u57fa\u4e8e\u786c\u4ef6\u9694\u79bb\u3001\u5185\u5b58\u52a0\u5bc6\u3001\u8fdc\u7a0b\u8bc1\u5b9e\u7b49\u5b89\u5168\u6280\u672f\u4fdd\u62a4\u6570\u636e\\n\u9690\u79c1\u8ba1\u7b97\u4efb\u52a1\u3002 Teaclave \u5e73\u53f0\u63d0\u4f9b\u4e86\u51fd\u6570\u5373\u670d\u52a1\uff08function-as-a-service\uff09\u63a5\u53e3\uff0c\u964d\u4f4e\\n\u4e86\u4f7f\u7528\u95e8\u69db\u3002\u5e73\u53f0\u4e2d\u4e5f\u5b9e\u73b0\u4e86\u4f17\u591a\u5185\u7f6e\u51fd\u6570\uff0c\u4f8b\u5982\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u591a\u65b9\u8054 \u5408\u6c42\u4ea4\uff0c\u52a0\u89e3\u5bc6\\n\u8ba1\u7b97\u7b49\u7b49\u5e38\u7528\u529f\u80fd\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5f00\u53d1\u8005\u8fd8\u53ef\u4ee5\u4f7f\u7528 Python \u81ea\u7531\u7f16\u5199\u51fd\u6570\u6765\u64cd\u4f5c\u9690\u79c1\u6570\u636e\uff0c\\n\u5728\u4e2d\u5e73\u53f0\u6267\u884c\u3002\u6700\u540e\uff0c\u4e3a\u4e86\u907f\u514d\u5185\u5b58\u5b89\u5168\u6f0f\u6d1e\u5e26\u6765\u7684\u5b89\u5168\u98ce\u9669\uff0cTeaclave \u8fd8\u4f7f\u7528\u5185\u5b58\u5b89\u5168\\n\u7f16\u7a0b\u8bed\u8a00 Rust \u7f16\u5199\u3002\\n\\n2021 \u5e74 3 \u6708 2 \u65e5\uff0c\u6211\u4eec\u8fce\u6765\u4e86 Teaclave \u7b2c\u4e8c\u4e2a\u793e\u533a\u7248\u672c\u7684\u53d1\u5e03 0.2.0\u3002\u5728\u8fd9\u4e00\u7248\u672c\u4e2d\uff0c\\n\u6211\u4eec\u91cd\u70b9\u653e\u5728\u63d0\u4f9b\u66f4\u591a\u7684\u5185\u5efa\u51fd\u6570\uff0c\u4e0d\u540c\u8bed\u8a00\u7684\u5ba2\u6237\u7aef SDK\uff0c\u66f4\u65b9\u4fbf\u7684 docker \u90e8\u7f72\u73af\u5883\uff0c\\n\u547d\u4ee4\u884c\u63a5\u53e3\uff0c\u6587\u6863\u7b49\u7b49\u3002\\n\\n## Teaclave 0.2.0 \u4eae\u70b9\u4ecb\u7ecd\\n\\n\u5728 0.2.0 \u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u591a\u79cd\u8bed\u8a00\u7684\u5ba2\u6237\u7aef SDK\uff0c\u73b0\u5728\u6211\u4eec\u63d0\u4f9b\u4e86 Python\u3001Rust\u3001C\u3001\\nSwift \u56db\u79cd\u8bed\u8a00\u7684\u63a5\u53e3\uff0c\u5728 Teaclave Meetup #2 \u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u4e0d\u540c\u8bed\u8a00 SDK \u7684\u7ec4\\n\u7ec7\u7ed3\u6784\u548c\u6846\u67b6\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u4f7f\u7528 JSON \u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u65b9\u5f0f\u4f5c\u4e3a\u591a\u8bed\u8a00\u7684\u8fb9\u754c\u3002\u4e0b\\n\u56fe\u63cf\u8ff0\u4e86\u8fd9\u51e0\u79cd\u8bed\u8a00 SDK \u7684\u5173\u7cfb\uff0c\u4ee5\u53ca\u4e00\u4e9b\u4e8b\u4f8b\u7684\u63a5\u53e3\u3002\\n\\n![Teaclave Client SDKs](./img/teaclave-client-sdks.png)\\n\\n## Teaclave 0.2.0 \u7248\u672c\u8be6\u60c5\\n\\n\u8be6\u7ec6\u6765\u8bb2 0.2.0 \u5305\u62ec\u4e00\u4e0b\u4fee\u6539\u4ee5\u53ca\u65b0\u529f\u80fd\uff1a\\n\\n### Functions\\n\\n- \u589e\u52a0\u5185\u7f6e\u7684 PCA (Principal Component Analysis) \u51fd\u6570\\n- \u6dfb\u52a0\u6cc4\u6f0f\u5bc6\u7801\u67e5\u8be2\u5185\u7f6e\u51fd\u6570 (#447)\\n\\n### SDK\\n\\n- \u589e\u52a0 Rust \u5ba2\u6237\u7aef SDK (#455)\\n- \u589e\u52a0 C \u5ba2\u6237\u7aef SDK (#470)\\n- \u589e\u52a0 Swift \u5ba2\u6237\u7aef SDK\uff0c\u4e5f\u5c31\u662f iOS framework\\n- \u4fee\u6539 SDK \u4e2d\u63a5\u53e3\u7684 CMAC \u683c\u5f0f\u4e3a byte array\\n\\n### Docker\\n\\n- \u589e\u52a0 `teaclave-file-service` \u5bb9\u5668\u4f5c\u4e3a\u793a\u4f8b\u7a0b\u5e8f\u7684\u8fdc\u7a0b\u6587\u4ef6\u7cfb\u7edf (#446)\\n- \u4fee\u590d\u5728\u4eff\u771f\u6a21\u5f0f\u4e0b\u7684 docker compose \u6587\u4ef6 (#462)\\n\\n### CLI\\n\\n- \u589e\u52a0 `attesation` \u7684\u5b50\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c55\u793a\u5f53\u524d SGX \u5e73\u53f0\u7684\u8fdc\u7a0b\u8ba4\u8bc1\u62a5\u544a\\n\\n### \u6587\u6863\\n\\n- \u589e\u52a0 codebase \u4e2d\u7684\u6587\u6863\\n- \u589e\u52a0\u5728 Azure Confidential Compute VM \u4e2d\u90e8\u7f72 Teaclave \u7684\u6587\u6863\u4ecb\u7ecd\\n\\n### \u5176\u4ed6\\n\\n- \u5728 binder \u6a21\u5757\u4e2d\u589e\u52a0 input/output buffer \u7684\u68c0\u67e5\u4ee5\u53ca\u6d4b\u8bd5\\n- \u4f7f\u7528 Github Action \u8fdb\u884c PR \u7684\u7f16\u8bd1\u3001\u6d4b\u8bd5\u4ee5\u53ca\u683c\u5f0f\u68c0\u67e5\\n- \u6587\u6863\u7684\u6253\u78e8\\n\\n## \u5982\u4f55\u4e0b\u8f7d\\n\\nTeaclave 0.2.0 \u7248\u672c\u53ef\u4ee5\u5728\u5b98\u7f51\u4e0b\u8f7d\u9875\u9762\u627e\u5230\uff08\u6ce8\u610f\u9a8c\u8bc1 PGP \u7b7e\u540d\u548c hash\uff09\u3002\\n\\n## \u5feb\u901f\u5165\u95e8\\n\\n\u5982\u679c\u60a8\u60f3\u5c1d\u8bd5\u4f7f\u7528 Teaclave\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4e0a\u624b\u6587\u6863\uff08[https://teaclave.apache.org/docs/my-first-function/](https://teaclave.apache.org/docs/my-first-function/)\uff09\u6765\u6267\u884c\u4e00\u4e2a\u6253\u5370 hello world \u7684\u51fd\u6570\u3002\\n\\n\u7b80\u5355\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u4f7f\u7528 docker \u7f16\u8bd1 Teaclave\uff1a\\n\\n```\\n$ cd incubator-teaclave\\n$ docker run --rm -v $(pwd):/teaclave -w /teaclave \\\\\\n  -it teaclave/teaclave-build-ubuntu-1804-sgx-2.9.1:latest \\\\\\n   bash -c \\". /root/.cargo/env && \\\\\\n     . /opt/sgxsdk/environment && \\\\\\n     mkdir -p build && cd build && \\\\\\n     cmake -DTEST_MODE=ON .. && \\\\\\n     make\\"\\n```\\n\\n\u7136\u540e\u4f7f\u7528 `docker-compose` \u5728\u4eff\u771f\u6a21\u5f0f\u4e0b\u6267\u884c Teaclave \u7684\u6240\u6709\u670d\u52a1\uff1a\\n\\n```\\n$ (cd docker && docker-compose -f docker-compose-ubuntu-1804-sgx-sim-mode.yml up --build)\\n```\\n\\n\u6700\u540e\uff0c\u5c31\u53ef\u4ee5\u5728 examples \u76ee\u5f55\u4e0b\u4f7f\u7528 Python \u8c03\u7528 echo \u51fd\u6570\u6253\u5370 \\"Hello, Teaclave!\\"\uff1a\\n\\n```\\n$ cd examples/python\\n$ PYTHONPATH=../../sdk/python python3 builtin_echo.py \'Hello, Teaclave!\'\\n[+] registering user\\n[+] login\\n[+] registering function\\n[+] creating task\\n[+] approving task\\n[+] invoking task\\n[+] getting result\\n[+] done\\n[+] function return:  b\'Hello, Teaclave!\'\\n```\\n\\n\u5982\u679c\u4f60\u60f3\u6df1\u5165\u7684\u4e86\u89e3 Teaclave \u7684\u5185\u90e8\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff0c\u6211\u4eec\u8fd8\u6709\u66f4\u591a\u8bbe\u8ba1\u6587\u6863\u3001API \u6587\u6863\u3001\u4ee3\u7801\u5e93\u6587\u6863\u7b49\u4f60\u53d1\u73b0\u3002"},{"id":"/2021/03/02/announcing-teaclave-0.2.0","metadata":{"permalink":"/blog/2021/03/02/announcing-teaclave-0.2.0","source":"@site/blog/2021-03-02-announcing-teaclave-0.2.0.md","title":"Announcing Apache Teaclave (incubating) 0.2.0","description":"English | \u4e2d\u6587","date":"2021-03-02T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Announcing Apache Teaclave (incubating) 0.2.0","date":"2021-03-02T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Apache Teaclave (incubating) 0.2.0 \u53d1\u5e03","permalink":"/blog/2021/03/02/announcing-teaclave-0.2.0-cn"},"nextItem":{"title":"Teaclave Meetup #2","permalink":"/blog/2021/02/25/teaclave-meetup-2"}},"content":"[English](/blog/2021-03-01-announcing-teaclave-0-2-0/) | [\u4e2d\u6587](/blog/2021-03-01-announcing-teaclave-0-2-0-cn/)\\n\\nOn behalf of the Teaclave community, I am happy to announce the *second* Apache\\nIncubator release of Teaclave, 0.2.0. Teaclave is a universal secure computing\\nplatform, making computation on privacy-sensitive data safe and simple.\\n\\nIn 0.2.0, we focus on various components including built-in functions, SDKs in\\ndifferent languages, docker, command line interface, documents, etc.\\n\\n## Highlights\\n\\nIn version 0.2.0, we added more client SDKs in different languages; Rust, C, and\\neven Swift. In [Teaclave Meetup #2](/blog/2021-02-24-teaclave-meetup-2), we\\nintroduced the design of client SDKs.\\nBasically, we are using JSON serialization/deserialization to make the interface\\nsimple and easy to work on.\\n\\n![Teaclave Client SDKs](./img/teaclave-client-sdks.png)\\n\\n## 0.2.0 Release Notes\\n\\nSpecifically, we have following updates:\\n\\n### Functions\\n\\n- Add the builtin PCA (Principal Component Analysis) function\\n- Add the exposed password checking built-in function (#447)\\n\\n### SDK\\n\\n- Add Rust client SDK (#455)\\n- Add C client SDK and examples (#470)\\n- Add Swift SDK (iOS framework)\\n- Change CMAC format from string to bytes array\\n\\n### Docker\\n\\n- Add a `teaclave-file-service `container to the docker compose file to help run the examples (#446)\\n- Fix sim mode docker compose file (#462)\\n\\n### CLI\\n\\n- [cli] Add the attest subcommand to display attestation report from the remote Teaclave service\\n\\n### Documents\\n\\n- [docs] Add permalink for codebase\'s README (#428)\\n- [docs] Add document of Deploying Teaclave on Azure Confidential Computing Virtual Machines\\n\\n### Bug Fixes\\n\\n- [binder] Add checks and test case for input/output buffer. (#423)\\n\\n### Misc\\n\\n- Start to use GitHub Action (#473)\\n- Add GitHub issue templates (#476)\\n- Document polishing\\n\\n## Download\\n\\nTeaclave 0.2.0 can be downloaded at [the download page](/download/). Note that \\nit is essential to verify the integrity of the downloaded file using the\\nPGP signature (the `.asc` file) or a hash (the `.sha256` file).\\n\\n## Documentation\\n\\nIf it is the first time to try Teaclave, we provide a simple but clear tutorial\\nto guide you getting stated with Teaclave by invoking\\n[your first function](/docs/my-first-function/) in Teaclave.\\n\\nBasically, you can build the Teaclave platform using docker with these commands:\\n\\n```sh\\n$ cd incubator-teaclave\\n$ docker run --rm -v $(pwd):/teaclave -w /teaclave \\\\\\n  -it teaclave/teaclave-build-ubuntu-1804-sgx-2.9.1:latest \\\\\\n   bash -c \\". /root/.cargo/env && \\\\\\n     . /opt/sgxsdk/environment && \\\\\\n     mkdir -p build && cd build && \\\\\\n     cmake -DTEST_MODE=ON .. && \\\\\\n     make\\"\\n```\\n\\nLaunch all services with `docker-compose` using simulation mode:\\n\\n```sh\\n$ (cd docker && docker-compose -f docker-compose-ubuntu-1804-sgx-sim-mode.yml up --build)\\n```\\n\\nAnd invoke function with a Python client:\\n\\n```sh\\n$ cd examples/python\\n$ PYTHONPATH=../../sdk/python python3 builtin_echo.py \'Hello, Teaclave!\'\\n[+] registering user\\n[+] login\\n[+] registering function\\n[+] creating task\\n[+] approving task\\n[+] invoking task\\n[+] getting result\\n[+] done\\n[+] function return:  b\'Hello, Teaclave!\'\\n```\\n\\nIf you want to understand the internals of Teaclave, we provide several\\ndocuments about the [design](/docs/#design) of Teaclave. Also, we extensively\\ndocument our [codebase](docs/#codebase) in each sub directories. At last, [API references](docs/#api-references)\\nare automatically generated and uploaded to our homepage."},{"id":"/2021/02/25/teaclave-meetup-2","metadata":{"permalink":"/blog/2021/02/25/teaclave-meetup-2","source":"@site/blog/2021-02-25-teaclave-meetup-2.md","title":"Teaclave Meetup #2","description":"Last time, we discussed setting the meetup as a regular activity (i.e., the","date":"2021-02-25T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #2","date":"2021-02-25T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Announcing Apache Teaclave (incubating) 0.2.0","permalink":"/blog/2021/03/02/announcing-teaclave-0.2.0"},"nextItem":{"title":"Teaclave Meetup #1","permalink":"/blog/2021/01/28/teaclave-meetup-1"}},"content":"Last time, we discussed setting the meetup as a regular activity (i.e., the\\nlast Thursday in each Month). On Feb 25, we organized the second Teaclave\\nvirtual meetup. Around ten people from the community showed up in the virtual\\nmeetup. Thanks for attending the meetup. Hope to see more people in the next\\nmeetup and sharing your ideas.\\n\\n![Teaclave Meetup #2](./img/teaclave-meetup-2-zoom.png)\\n\\nFor people who were not available at this time, here is a short summary.\\n\\n## Schedule\\n\\n- Recent updates on Teaclave, Mingshen Sun (15 m)\\n- Q&A and free discussion (45 m)\\n\\n## Recent Updates on Teaclave\\n\\nMingshen shared some recent updates on Teaclave with following outlines:\\n\\n- Teaclave TrustZone SDK donation\\n- Releasing Apache Teaclave (incubating) 0.2.0\\n- Teaclave Client SDK in Swift (iOS framework)\\n- Talks in OC3 - Open Confidential Computing Conference 2021, Mar 11\\n\\n### Rust OP-TEE TrustZone SDK donation\\n\\nFor the recent donation on Rust OP-TEE TrustZone SDK, here is a timeline of the\\nproject. Currently, this project is under transfer and will be under the\\nApache organization on GitHub in the next few days.\\n\\n![Rust OP-TEE TrustZone SDK Donation Timeline](./img/rust-optee-trustzone-sdk-donation-timeline.png)\\n\\n### Teaclave Client SDKs\\n\\nMingshen also gave a brief introduction on the design and implementation of\\nTeaclave client SDKs in different languages and their relationships.\\n\\n![Teaclave Client SDKs](./img/teaclave-client-sdks.png)\\n\\n## Demo of Rust Std Aware Cargo\\n\\nOne of our contributor `lyj` also demonstrated his efforts on std aware Cargo\\n(#311 in `incubator-teaclave-sgx-sdk`). By using this method, people no longer\\nneeds `Xargo` or `no-std` to build the SGX enclave. Hope this improvement will\\nease the development of SGX enclaves and porting crates.\\n\\nAt last, thanks for attending this meetup. I\'ll continue to drive this meetup\\nand make it a monthly activity for the community. If you want to speak in the\\nnext time, please post your proposed topic in the mailing list. I\'ll help you to\\nschedule the time."},{"id":"/2021/01/28/teaclave-meetup-1","metadata":{"permalink":"/blog/2021/01/28/teaclave-meetup-1","source":"@site/blog/2021-01-28-teaclave-meetup-1.md","title":"Teaclave Meetup #1","description":"We just finished the first public virtual meetup. Around 11 people from the","date":"2021-01-28T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave Meetup #1","date":"2021-01-28T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #2","permalink":"/blog/2021/02/25/teaclave-meetup-2"},"nextItem":{"title":"Roadmap in 2021: Project Maturity and Community Buildup","permalink":"/blog/2021/01/20/roadmap-in-2021-project-maturity-and-community-buildup"}},"content":"We just finished the first public virtual meetup. Around 11 people from the\\ncommunity show up in the virtual meetup. Thanks for attending the meetup. \\n\\n![Teaclave Meetup #1](./img/teaclave-meetup-1-zoom.png)\\n\\nFor people who were not available at this time, here is a short summary:\\n\\n## Schedule\\n\\n- Recent Update and Roadmap in 2021 by Mingshen Sun (40 minutes)\\n- Q&A and free discussion (20 minutes)\\n## Recent Updates of Teaclave\\n\\n- Teaclave TrustZone SDK donation\\n- Rust/C client SDK\\n- GitHub Actions, GitHub Issue templates\\n- GSoC call for proposals\\n- Teaclave meetup call for speakers\\n\\n## 2021 Objectives of Teaclave Projects\\n\\n- Teaclave FaaS Platform: The best platform for secure computing applications.\\n  The most influential open source project in the secure computing community.\\n- Teaclave SGX SDK: Keep the leading position in SGX SDK. Healthy and\\n  sustainable community.\\n- Teaclave TrustZone SDK: Become a mature project for developing TrustZone\\n  applications.\\n- MesaPy for SGX (not in ASF, but related with Teaclave): Mature Python\\n  scripting VM for SGX. More versatile scenarios: data analytics, machine\\n  learning, and smart contract.\\n\\n## Project Release Timeline\\n\\n- Release Teaclave SGX SDK\'s Apache official release (Q1, Q3)\\n- Regular releases of Teaclave FaaS Platform (Q1, Q2, Q3, Q4)\\n- Teaclave TrustZone SDK Apache donation (Q1)\\n- Teaclave TrustZone SDK apache official release (Q2)\\n- MesaPy for SGX Apache donation (Q2)\\n- MesaPy for SGX Apache official release (Q3)\\n\\n## Community Activities\\n\\n- Regular meetup (monthly)\\n- Annually Teaclave workshop (H2)\\n- Blogs (monthly)\\n\\n## To-do List\\n- [RFC] Roadmap in 2021: Project Maturity and Community Buildup\\n  (https://github.com/apache/incubator-teaclave/issues/460)\\n\\nAt last, thanks for attending this meetup. I\'ll continue to drive this meetup\\nand make it a monthly activity for the community. If you want to speak in the\\nnext time, please post your proposed topic in the mailing list. I\'ll help you\\nto schedule the time."},{"id":"/2021/01/20/roadmap-in-2021-project-maturity-and-community-buildup","metadata":{"permalink":"/blog/2021/01/20/roadmap-in-2021-project-maturity-and-community-buildup","source":"@site/blog/2021-01-20-roadmap-in-2021-project-maturity-and-community-buildup.md","title":"Roadmap in 2021: Project Maturity and Community Buildup","description":"Last year, we published an RFC - \\"Roadmap: Towards the First Public Release\\". Thanks","date":"2021-01-20T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Roadmap in 2021: Project Maturity and Community Buildup","date":"2021-01-20T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave Meetup #1","permalink":"/blog/2021/01/28/teaclave-meetup-1"},"nextItem":{"title":"Podling Teaclave Report - January 2021","permalink":"/blog/2021/01/01/podling-teaclave-report-january-2021"}},"content":"Last year, we published an RFC - \\"[Roadmap: Towards the First Public Release](https://github.com/apache/incubator-teaclave/issues/121)\\". Thanks\\nfor the continuous efforts made by the community. We have completed several\\nmilestones and amazing achievements.\\n\\nSpecifically, we published the first Apache incubator release - [version 0.1.0](https://teaclave.apache.org/blog/2020-10-21-announcing-teaclave-0-1-0/). In this release, we refactored and rewrote almost all core components for\\nbetter engineering. New features and enhancements was implemented and well\\ntested. Also we wrote plenty of documents for the design, implementation, as\\nwell as the code base. Furthermore, the [homepage](https://teaclave.apache.org/)\\nof Apache Teaclave (incubating) was built and online, which contains many\\nuseful information on the project and community. We also organized several\\noffline meetups to build up and grow the Teaclave family. In addition, for\\nbetter explaining the project, we introduced the blog in the Teaclave homepage\\nand then published an [article about the ecosystem](https://teaclave.apache.org/blog/2020-12-08-teaclave-ecosystem/).\\nIn this article, we spent some time to summarize existing open source projects\\npowered by Teaclave. Last but not least, we also attended SGX Workshop and\\nApacheCon to introduce our project. Overall we\'re very glad to see the\\ndevelopment of the project and growth of the community.\\n\\nIn the year of 2021, we need to focus on the maturity of the project and\\nbuilding a healthier and more sustainable community. Therefore, I summarize\\nseveral to-do lists here. There are mainly four parts. The first three are about\\nthe project\'s features and enhancements, which include Teaclave FaaS framework,\\nTeaclave SGX SDK, and Teaclave TrustZone SDK (this project just completed the\\ndonation voting, more things need to do later). The last one is about community\\nbuildup. Yes, this is a very long list. Please let me know if you are interested\\nin. I\'m more than happy to help you if not familiar with Teaclave, SGX, or Rust.\\nAt last, this is not a complete list. Feel free to comment and discuss in this\\nthread.\\n\\n## Teaclave FaaS Framework\\n\\n  - Support WebAssembly executor\\n  - Expose attestation related functions to the executor runtime\\n  - Database persistency\\n  - Execution report for end user\\n  - Async RPC framework for better throughput performance\\n  - Monitoring\\n  - Performance/Scalability evaluation\\n  - Multi-language client SDK: C, Rust client SDK\\n  - Improve legacy code using latest compiler features\\n  - Documentation: Lifecycle of a task in Teaclave\\n  - Documentation: How to launch a multi-party secure computation task\\n  - Documentation: FAQ\\n  - Technical report\\n  - Use a separated service and rule evaluation engine for access control\\n  - Implement KMS\\n  - Attestation specification for third party enclaves\\n  - Automatic state transition of pre-approved tasks\\n  - Local configuration of attestation method\\n  - Better attestation report freshness management\\n  - Refactor RPC interfaces\\n  - Add a secure logging service\\n  - Active enclaves status service\\n  - Support multiple TEE implementations\\n  - GRPC or thrift compatibility\\n  - Universal TEE interface design and implementation\\n\\n## Teaclave SGX SDK\\n\\n  - Security auditing and enhancement\\n  - Code polishing\\n  - Publish an Apache release\\n  - Design a proper development, releasing development lifecycle\\n  - Documentation polishing\\n  - Tutorial\\n  - Maintenance of Rust crates for Teaclave\\n  - Document porting guideline for Rust crates for SGX\\n  - std Aware Cargo supports\\n  - Rust secure file system\\n\\n## Teaclave TrustZone SDK\\n\\n  - Keep update to the latest Rust standard library\\n  - Keep update to the latest OP-TEE version\\n  - Rust Crates for TrustZone, examples\\n  - Design attestation framework for TZ\\n\\n## Teaclave Community\\n\\n  - Organize meetups on topics around Teaclave\\n  - Give public talks to developers\\n  - Reach out to more Teaclave users\\n  - Collaboration with industry and academia\\n  - Blogs on Rust, TEE, and Teaclave"},{"id":"/2021/01/01/podling-teaclave-report-january-2021","metadata":{"permalink":"/blog/2021/01/01/podling-teaclave-report-january-2021","source":"@site/blog/2021-01-01-podling-teaclave-report-january-2021.md","title":"Podling Teaclave Report - January 2021","description":"Teaclave","date":"2021-01-01T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Podling Teaclave Report - January 2021","date":"2021-01-01T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Roadmap in 2021: Project Maturity and Community Buildup","permalink":"/blog/2021/01/20/roadmap-in-2021-project-maturity-and-community-buildup"},"nextItem":{"title":"The Teaclave Secure Computing Ecosystem - Projects Powered by Teaclave","permalink":"/blog/2020/12/09/teaclave-ecosystem"}},"content":"## Teaclave\\n\\nTeaclave is a universal secure computing platform.\\n\\nTeaclave has been incubating since 2019-08-20.\\n\\n### Three most important unfinished issues to address before graduating:\\n\\n  1. Improve project structure and documentation\\n  2. Grow the community (attracting more committers, contributors, users)\\n  3. Publish more Apache releases\\n\\n### Are there any issues that the IPMC or ASF Board need to be aware of?\\n\\nNone. \\n\\n### How has the community developed since the last report?\\n\\n- We received contributions from a new external contributor.\\n- We found a new project using Teaclave SGX SDK called Veracruz, which is a\\n  framework for defining and deploying collaborative, privacy-preserving\\n  computations amongst a group of mutually mistrusting individuals.\\n- We summarized the community and projects powered by Teaclave and published\\n  a blog on our homepage.\\n- Rust TrustZone SDK will be accepted in Teaclave as a subproject. The community\\n  is discussing and voting the acceptance.\\n- The community has accepted a new committer.\\n\\n### How has the project developed since the last report?\\n\\n- Add PCA function in the builtin executor.\\n- Add exposed password checking function in the builtin executor.\\n- Add the attestation subcommand to display attestation report form the Intel\\n  attestation service.\\n- Add document to support deploying on Azure confidential computing VM.\\n\\n\\n### How would you assess the podling\'s maturity?\\nPlease feel free to add your own commentary.\\n\\n  - [ ] Initial setup\\n  - [ ] Working towards first release\\n  - [x] Community building\\n  - [ ] Nearing graduation\\n  - [ ] Other:\\n\\n### Date of last release:\\n\\n  2020-10-09\\n\\n### When were the last committers or PPMC members elected?\\n\\n  2020-10-22\\n\\n### Have your mentors been helpful and responsive?\\n\\nYes, our mentors are very helpful and responsive on our discussion about security\\nreporting and new projects acceptance voting.\\n\\n### Is the PPMC managing the podling\'s brand / trademarks?\\nWe don\'t find any 3rd parties incorrectly using the podling\'s name and brand.\\nThe VP, Brand has approved the project name. (PODLINGNAMESEARCH-175)"},{"id":"/2020/12/09/teaclave-ecosystem","metadata":{"permalink":"/blog/2020/12/09/teaclave-ecosystem","source":"@site/blog/2020-12-09-teaclave-ecosystem.md","title":"The Teaclave Secure Computing Ecosystem - Projects Powered by Teaclave","description":"English | \u4e2d\u6587","date":"2020-12-09T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"The Teaclave Secure Computing Ecosystem - Projects Powered by Teaclave","date":"2020-12-09T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Podling Teaclave Report - January 2021","permalink":"/blog/2021/01/01/podling-teaclave-report-january-2021"},"nextItem":{"title":"Teaclave \u5b89\u5168\u8ba1\u7b97\u5f00\u6e90\u751f\u6001 - \u7531 Teaclave \u9a71\u52a8\u7684\u5f00\u6e90\u9879\u76ee\u4e00\u89c8","permalink":"/blog/2020/12/04/teaclave-ecosystem-cn"}},"content":"[English](/blog/2020-12-09-teaclave-ecosystem/) | [\u4e2d\u6587](/blog/2020-12-04-teaclave-ecosystem-cn/)\\n\\nApache Teaclave (incubating) is an open source universal secure computing\\nplatform, making computation on privacy-sensitive data safe and simple. With\\nhardware-based security capabilities (e.g., Intel SGX), Teaclave enables\\nsensitive data to be circulated and processed under security control, even in\\noff-site and offshore environments, without being compromised or misused. By\\nproviding muti-party interfaces, Teaclave can help to \\"bridge the data islands\\"\\nwithin/among organizations and companies.\\n\\n## Highlights\\n\\nIn a nutshell, Teaclave have these four highlights:\\n\\n- **Secure and Attestable**: Teaclave adopts multiple security technologies to\\n  enable secure computing, in particular, Teaclave uses Intel SGX to serve the\\n  most security-sensitive tasks with hardware-based isolation, memory encryption\\n  and attestation. Also, Teaclave is written in Rust to prevent memory-safety\\n  issues.\\n- **Function-as-a-Service**: Teaclave is a function-as-a-service platform\\n  supports tasks like privacy-preserving machine learning, private set\\n  intersection, and crypto computation. In addition, developers can also write\\n  and execute Python function. Teaclave supports both general secure computing\\n  tasks and flexible multi-party secure computation.\\n- **Ease of Use**: Teaclave builds its components in containers, therefore, it\\n  supports deployment both locally and within cloud infrastructures. Teaclave\\n  also provides convenient endpoint APIs, client SDKs and command line tools.\\n- **Flexibility**: Components in Teaclave are designed in modular, and some like\\n  remote attestation can be easily embedded in other projects. In addition,\\n  Teaclave SGX SDK can also be used separately to write standalone SGX enclaves\\n  for other purposes.\\n\\n![Secure Computing and Intel SGX](./img/secure-computing-intel-sgx.png)\\n\\n## **Teaclave Ecosystem**\\n\\nTeaclave provides an open ecosystem in the Apache Way to various parties like\\nproject developers, platform users, service providers, first/third-party library\\nusers. In a border view, the Teaclave community aims to support commercial\\nproducts, academic research projects, teaching platform, and other open source\\nprojects powered by Teaclave.\\n\\n<center><img src=\\"./img/teaclave-ecosystem.png\\" width=\\"85%\\" /></center>\\n\\nDue to the importance of porting, maintaining, auditing of third-party libraries\\nin the trusted computing environments, we maintains hundreds of Rust\'s libraries\\nfor TEE, e.g., crypto, scientific computation, and machine learning libraries.\\nWith these libraries around the Teaclave ecosystem, this drives the development\\nof other projects powered by Teaclave. Furthermore, we are also incubating many\\nimportant TEE components like [MesaPy for SGX](https://github.com/mesalock-linux/mesapy/tree/sgx),\\nand [Rust OP-TEE TrustZone SDK]((https://github.com/sccommunity/rust-optee-trustzone-sdk).\\n\\nThe Teaclave open-source ecosystem is also supporting many commercial products.\\nFor example, Baidu, as a platform service provider, has announced the\\n[MesaTEE](https://anquan.baidu.com/product/mesatee)\\nsecure computing platform, providing a secure, efficient, and extensible secure\\ncomputing solution to help companies and organizations for privacy-preserving\\ndata exchange/computation.\\n\\nIn addition, the Teaclave ecosystem is also actively sponsoring academic\\nresearch in trusted execution environment and system security like topics about\\nsecurity in TEE, designing of memory-safe SGX SDK, security of supply chains,\\netc. Many studies has been published in top-tier conferences.\\n\\n## Projects powered by Teaclave\\n\\nBecause of the openness and flexibility of Teaclave, many projects are based on\\nthe Teaclave platforms and Teaclave SGX SDK. Here, we summarize several popular\\nopen source or commercial products powered by Teaclave. We hope more\\norganizations and companies can come and join the ecosystem, pushing forward the\\nboundary of data privacy and secure computation.\\n\\n  - [Advanca](https://github.com/advanca/advanca): A privacy-preserving\\n    general-purpose compute/storage infrastructure for Dapps.\\n  - [Anonify](https://github.com/LayerXcom/anonify): A blockchain-agnostic\\n    execution environment with privacy and auditability based on TEE.\\n![Anonify: A blockchain-agnostic execution environment with privacy and auditability](./img/anonify.png)\\n  - [Enigma Core](https://github.com/enigmampc/enigma-core): Enigma Core\\n    library. The domain: Trusted and Untrusted App in Rust.\\n  - [Crypto.com Chain](https://github.com/crypto-com/chain): Alpha version\\n    prototype of Crypto.com Chain.\\n  - [Occlum](https://github.com/occlum/occlum): Occlum is a memory-safe,\\n    multi-process library OS for Intel SGX. This project plans to join the\\n    Confidential Computing Consortium in the near future.\\n  - [Phala Network](https://github.com/Phala-Network/phala-blockchain):\\n    A TEE-Blockchain hybrid architecture implementing Confidential Contract on\\n    Polkadot.\\n  - [SafeTrace](https://github.com/enigmampc/SafeTrace): Privacy preserving\\n    voluntary COVID-19 self-reporting platform for contact tracing.\\n  - [Secret Network](https://github.com/enigmampc/SecretNetwork): A\\n    blockchain-based, open-source protocol that lets anyone perform computations\\n    on encrypted data, bringing privacy to smart contracts and public\\n![Secret Network is a blockchain-based, open-source protocol that lets anyone perform computations on encrypted data, bringing privacy to smart contracts and public blockchains.](./img/secret-network.png)\\n    blockchains.\\n  - [substraTEE](https://github.com/scs/substraTEE): Trusted Off-Chain Compute\\n    Framework for substrate blockchains.\\n  - [Veracruz](https://github.com/veracruz-project/veracruz): Veracruz is a\\n    framework for defining and deploying collaborative, privacy-preserving\\n    computations amongst a group of mutually mistrusting individuals.\\n  This project plans to join the Confidiential Computing Consortium in the near future.\\n\\n![Projects powered by Teaclave](./img/logo-projects-powered-by-teaclave.png)\\n\\nIn summary, all above projects are trying to utilize capabilities from TEE, like\\nhardware-isolation, memory encryption and remote attestation, to protect data\\ncomputation or serve as trusted party.\\nBased on Teaclave SGX SDK, some projects like Occlum and Veracruz aim to provide a more flexible TEE\\nframework. Others like Secret Network and substraTEE want to implement a trusted\\nnode for their business logics. Also, some projects are using some common\\ncomponents like remote attestation libraries in their code base. Overall, the\\nTeaclave ecosystem has empowered lots of successful projects. We have a list of\\nprojects powered by Teaclave in the community homepage.\\n\\nAt last, everyone are very welcome to join the Teaclave community and contribute\\nto the secure computing ecosystem. Hope to see more users and contributors in\\nthe Teaclave community. BTW, if there are any other amazing projects I didn\'t\\nmention you plan to work on, please also share with me. I\'m more than happy to\\nlearn more about it."},{"id":"/2020/12/04/teaclave-ecosystem-cn","metadata":{"permalink":"/blog/2020/12/04/teaclave-ecosystem-cn","source":"@site/blog/2020-12-04-teaclave-ecosystem-cn.md","title":"Teaclave \u5b89\u5168\u8ba1\u7b97\u5f00\u6e90\u751f\u6001 - \u7531 Teaclave \u9a71\u52a8\u7684\u5f00\u6e90\u9879\u76ee\u4e00\u89c8","description":"English | \u4e2d\u6587","date":"2020-12-04T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Teaclave \u5b89\u5168\u8ba1\u7b97\u5f00\u6e90\u751f\u6001 - \u7531 Teaclave \u9a71\u52a8\u7684\u5f00\u6e90\u9879\u76ee\u4e00\u89c8","date":"2020-12-04T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"The Teaclave Secure Computing Ecosystem - Projects Powered by Teaclave","permalink":"/blog/2020/12/09/teaclave-ecosystem"},"nextItem":{"title":"\u8ba9\u5b89\u5168\u8ba1\u7b97\u66f4\u7b80\u5355 - Apache Teaclave (incubating) 0.1.0 \u6b63\u5f0f\u53d1\u5e03","permalink":"/blog/2020/10/29/announcing-teaclave-0.1.0-cn"}},"content":"[English](/blog/2020-12-09-teaclave-ecosystem/) | [\u4e2d\u6587](/blog/2020-12-04-teaclave-ecosystem-cn/)\\n\\nApache Teaclave (incubating) ([https://teaclave.apache.org/](https://teaclave.apache.org/))\u662f\u5168\u7403\u9996\u4e2a\u901a\u7528\u5b89\u5168\u8ba1\u7b97\u5e73\u53f0\uff0c\u4e3a\u9690\u79c1\u6570\u636e\u8ba1\u7b97\u8d4b\u80fd\uff0c\u8ba9\u5b89\u5168\u8ba1\u7b97\u66f4\u7b80\u5355\u3002Teaclave \u57fa\u4e8e\u786c\u4ef6\u5b89\u5168\u80fd\u529b\uff08Intel SGX\uff09\uff0c\u786e\u4fdd\u654f\u611f\u6570\u636e\u5728\u53ef\u4fe1\u57df\u5916\u548c\u79bb\u5cb8\u573a\u666f\u4e0b\u5b89\u5168\u53ef\u63a7\u7684\u6d41\u901a\u548c\u5904\u7406\uff0c\u65e0\u9700\u62c5\u5fc3\u9690\u79c1\u6570\u636e\u6cc4\u9732\u548c\u6ee5\u7528\u3002\u540c\u65f6\uff0cTeaclave \u8fd8\u652f\u6301\u591a\u65b9\u53c2\u4e0e\u7684\u8054\u5408\u8ba1\u7b97\uff0c\u6253\u7834\u4f01\u4e1a\u548c\u7ec4\u7ec7\u4e2d\u7684\u6570\u636e\u5b64\u5c9b\u3002Teaclave \u4e8e 2019 \u5e74 8 \u6708\u8fdb\u5165 Apache \u57fa\u91d1\u4f1a\u5b75\u5316\u5668\uff0c2020 \u5e74 10 \u6708\uff0cTeaclave \u793e\u533a\u6b63\u5f0f\u901a\u8fc7\u5e76\u53d1\u5e03\u4e86 0.1.0 \u7248\u3002\\n\\n## Teaclave \u7684\u56db\u5927\u4eae\u70b9\\n\\n\u7b80\u5355\u6765\u8bf4\uff0cTeaclave \u6709\u56db\u5927\u4eae\u70b9\uff1a\\n\\n- **\u5b89\u5168\u6027**\uff1aTeaclave \u4f7f\u7528\u591a\u91cd\u5b89\u5168\u6280\u672f\u4fdd\u62a4\u9690\u79c1\u6570\u636e\u7684\u8ba1\u7b97\u3002\u6211\u4eec\u4f7f\u7528 Intel SGX\uff0c\u63d0\u4f9b\u57fa\u4e8e\u786c\u4ef6\u9694\u79bb\u3001\u5185\u5b58\u52a0\u5bc6\u3001\u8fdc\u7a0b\u8bc1\u5b9e\u7b49\u5b89\u5168\u6280\u672f\u4fdd\u62a4\u6570\u636e\u9690\u79c1\u8ba1\u7b97\u4efb\u52a1\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u4e3a\u4e86\u907f\u514d\u5185\u5b58\u5b89\u5168\u6f0f\u6d1e\u5e26\u6765\u7684\u5b89\u5168\u98ce\u9669\uff0cTeaclave \u8fd8\u4f7f\u7528\u5185\u5b58\u5b89\u5168\u7f16\u7a0b\u8bed\u8a00 Rust \u7f16\u5199\u3002\\n- **\u529f\u80fd\u6027**\uff1aTeaclave \u5e73\u53f0\u63d0\u4f9b\u4e86\u66f4\u52a0\u4fbf\u5229\u7684\u51fd\u6570\u5373\u670d\u52a1\uff08function-as-a-service\uff09\u63a5\u53e3\uff0c\u5927\u5927\u7684\u964d\u4f4e\u4e86\u4f7f\u7528\u95e8\u69db\u3002\u5e73\u53f0\u4e2d\u4e5f\u5b9e\u73b0\u4e86\u4f17\u591a\u5185\u7f6e\u51fd\u6570\uff0c\u4f8b\u5982\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u591a\u65b9\u8054\u5408\u6c42\u4ea4\uff0c\u52a0\u89e3\u5bc6\u8ba1\u7b97\u7b49\u7b49\u5e38\u7528\u529f\u80fd\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5f00\u53d1\u8005\u8fd8\u53ef\u4ee5\u4f7f\u7528 Python \u81ea\u7531\u7f16\u5199\u51fd\u6570\u6765\u64cd\u4f5c\u9690\u79c1\u6570\u636e\uff0c\u63d0\u4ea4\u81f3 Teaclave \u5e73\u53f0\u6267\u884c\u3002\u4e0e\u4f20\u7edf FaaS \u6846\u67b6\u4e0d\u540c\u7684\u662f\uff0cTeaclave \u63d0\u4f9b\u4e86\u7075\u6d3b\u7684\u591a\u65b9\u53c2\u4e0e\u8ba1\u7b97\u63a5\u53e3\uff0c\u5927\u5927\u7b80\u5316\u591a\u65b9\u5b89\u5168\u8ba1\u7b97\u7684\u6d41\u7a0b\u3002\\n- **\u6613\u7528\u6027**\uff1aTeaclave \u63d0\u4f9b\u4fbf\u5229\u7684\u90e8\u7f72\u65b9\u5f0f\uff0c\u652f\u6301\u5728\u672c\u5730\u548c\u4e91\u4e0a\u4ee5\u5bb9\u5668\u7684\u65b9\u5f0f\u8fdb\u884c\u90e8\u7f72\u3002\u9879\u76ee\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u5b8c\u5584\u7684\u63a5\u53e3\uff0c\u5ba2\u6237\u7aef SDK \u4ee5\u53ca\u547d\u4ee4\u884c\u5de5\u5177\u5e2e\u52a9\u5f00\u53d1\u8005\u4f7f\u7528\u5e73\u53f0\u7684\u529f\u80fd\u3002\\n- **\u7075\u6d3b\u6027**\uff1aTeaclave \u8bbe\u8ba1\u4e86\u7075\u6d3b\u7684\u7ec4\u4ef6\u548c\u670d\u52a1\u6846\u67b6\uff0c\u5176\u4ed6\u9879\u76ee\u4ec5\u9700\u5c11\u91cf\u4fee\u6539\u5c31\u53ef\u4ee5\u4f7f\u7528 Teaclave \u4e2d\u7684\u5404\u79cd\u7ec4\u4ef6\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u4f7f\u7528 Teaclave \u8fdc\u7a0b\u8bc1\u5b9e\u5e93\u4f5c\u4e3a\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5e93\uff0c\u6216\u8005\u76f4\u63a5\u5355\u72ec\u90e8\u7f72\u4f7f\u7528 Teaclave \u4e2d\u7684\u6570\u636e\u5e93\u670d\u52a1\u7b49\u3002\u5f53\u7136\uff0c\u5f00\u53d1\u8005\u4e5f\u53ef\u4f7f\u7528 Teaclave SGX SDK \uff08\u539f Rust SGX SDK\uff09\u6765\u6784\u5efa\u5168\u65b0\u7684 SGX \u5e94\u7528\u3002\\n\\n![Secure Computing and Intel SGX](./img/secure-computing-intel-sgx.png)\\n\\n## **Teaclave \u5f00\u6e90\u751f\u6001**\\n\\nTeaclave \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f00\u653e\u7684\u5f00\u6e90\u751f\u6001\uff0c\u5176\u4e2d\u65e2\u6709 Teaclave \u9879\u76ee\u7684\u5f00\u53d1\u8005\uff0c\u4e5f\u5305\u62ec\u5b89\u5168\u8ba1\u7b97\u5e73\u53f0\u7684\u7528\u6237\u3001\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u4ee5\u53ca\u5728\u5b89\u5168\u8ba1\u7b97\u76f8\u5173\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86 Teaclave \u4e2d\u7684\u6838\u5fc3\u5e93\u548c\u7b2c\u4e09\u65b9\u5e38\u7528\u5e93\u7684\u4f7f\u7528\u8005\u3002\u53e6\u4e00\u65b9\u9762\uff0cTeaclave \u751f\u6001\u670d\u52a1\u4e8e\u5546\u4e1a\u4ea7\u54c1\u3001\u5b66\u672f\u7814\u7a76\u9879\u76ee\u3001\u53ef\u4fe1\u8ba1\u7b97\u6559\u5b66\u5e73\u53f0\uff0c\u540c\u65f6\u793e\u533a\u4e5f\u652f\u6301\u7531 Teaclave \u9a71\u52a8\u7684\u7b2c\u4e09\u65b9\u5f00\u6e90\u9879\u76ee\u3002\\n\\n<center><img src=\\"./img/teaclave-ecosystem-cn.png\\" width=\\"75%\\" /></center>\\n\\n\u5728\u53ef\u4fe1\u6267\u884c\u73af\u5883\u4e2d\uff0c\u7b2c\u4e09\u65b9\u5e93\u7684\u79fb\u690d\u3001\u7ef4\u62a4\u3001\u5ba1\u8ba1\u5c24\u4e3a\u91cd\u8981\u3002\u6211\u4eec\u4e3a Teaclave \u751f\u6001\u63d0\u4f9b\u4e86\u4e0a\u767e\u4e2a Rust \u7684\u7b2c\u4e09\u65b9\u5f00\u53d1\u5e93\uff0c\u6bd4\u5982\u5bc6\u7801\u5b66\u5e93\uff0c\u79d1\u5b66\u8ba1\u7b97\u5e93\uff0c\u673a\u5668\u5b66\u4e60\u5e93\u7b49\u7b49\uff0c\u5927\u5927\u7684\u4e30\u5bcc\u4e86 Teaclave \u751f\u6001\uff0c\u5e76\u4e14\u9a71\u52a8\u4e86\u5176\u4ed6\u57fa\u4e8e Teaclave \u7684\u5f00\u6e90\u9879\u76ee\u53d1\u5c55\u3002\u9664\u4e86\u7ef4\u62a4\u7b2c\u4e09\u65b9\u5e93\uff0c\u6211\u4eec\u4e5f\u5b75\u5316\u51fa\u4e86\u4e00\u4e9b\u91cd\u8981\u7684 TEE \u7ec4\u4ef6\uff0c\u6bd4\u5982\uff0c\u9488\u5bf9 SGX \u73af\u5883\u7684 Python \u89e3\u91ca\u5668 - MesaPy ([https://github.com/mesalock-linux/mesapy/tree/sgx](https://github.com/mesalock-linux/mesapy/tree/sgx))\uff0c\u4ee5\u53ca\u5bf9 TrustZone \u540e\u7aef TEE \u5b9e\u73b0\u7684 SDK - Rust OP-TEE TrustZone SDK ([https://github.com/sccommunity/rust-optee-trustzone-sdk](https://github.com/sccommunity/rust-optee-trustzone-sdk))\u3002\\n\\nTeaclave \u5f00\u6e90\u751f\u6001\u4e5f\u652f\u6301\u7740\u4f17\u591a\u5546\u4e1a\u4ea7\u54c1\u3002\u6bd4\u5982\uff0c\u57fa\u4e8e Teaclave \u5f00\u6e90\u4ee3\u7801\uff0c\u767e\u5ea6\u4f5c\u4e3a\u5e73\u53f0\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u6784\u5efa\u4e86 MesaTEE \u5b89\u5168\u8ba1\u7b97\u5e73\u53f0\uff0c\u8be5\u5e73\u53f0\u63d0\u4f9b\u4e86\u5f3a\u5b89\u5168\u3001\u9ad8\u6027\u80fd\u3001\u6613\u6269\u5c55\u7684\u82af\u7247\u7ea7\u6570\u636e\u5b89\u5168\u8ba1\u7b97\u89e3\u51b3\u65b9\u6848\u3002\u534f\u52a9\u673a\u6784\u4e4b\u95f4\u89e3\u51b3\u6570\u636e\u5408\u4f5c\u8fc7\u7a0b\u4e2d\u6570\u636e\u5b89\u5168\u548c\u9690\u79c1\u95ee\u9898\uff0c\u6253\u7834\u6570\u636e\u5b64\u5c9b\u3002 \u901a\u8fc7\u79c1\u6709\u5316\u6216\u4e91\u670d\u52a1\u5e2e\u52a9\u91d1\u878d\u3001\u653f\u52a1\u3001\u4e92\u8054\u7f51\u7b49\u884c\u4e1a\u5728\u8054\u5408\u5efa\u6a21\u3001\u8054\u5408\u8425\u9500\u3001\u8054\u5408\u98ce\u63a7\u7b49\u573a\u666f\u4e0b\u4e00\u7ad9\u5f0f\u5b8c\u6210\u6570\u636e\u8054\u5408\u8ba1\u7b97\uff0c\u5b9e\u73b0 \u201c\u6570\u636e\u53ef\u7528\u4e0d\u53ef\u89c1\u201d\u7684\u5b89\u5168\u4f53\u9a8c\u3002\\n\\nTeaclave \u751f\u6001\u4e5f\u652f\u6301\u7740\u53ef\u4fe1\u8ba1\u7b97\u548c\u7cfb\u7edf\u5b89\u5168\u76f8\u5173\u7684\u5b66\u672f\u7814\u7a76\uff0c\u5176\u4e2d\u5305\u62ec\u53ef\u4fe1\u6267\u884c\u73af\u5883\u7684\u5b89\u5168\uff0c\u5185\u5b58\u5b89\u5168\u7684 SGX SDK \u8bbe\u8ba1\uff0cSGX \u7b2c\u4e09\u65b9\u5e93\u751f\u6001\u7684\u5b89\u5168\u7b49\u7b49\u76f8\u5173\u8bfe\u9898\u3002\u5176\u4e2d\u6709\u591a\u7bc7\u5b66\u672f\u6210\u679c\u53d1\u8868\u5728\u56fd\u9645\u9876\u7ea7\u4f1a\u8bae\u4e0a\u3002\\n\\n## **\u7531 Teaclave \u9a71\u52a8\u7684\u5f00\u6e90\u9879\u76ee**\\n\\n\u6b63\u56e0\u4e3a Teaclave \u7684\u5f00\u6e90\u3001\u5f00\u653e\u53ca\u5176\u7075\u6d3b\u6027\uff0c\u8bb8\u591a\u9879\u76ee\u57fa\u4e8e Teaclave \u5e73\u53f0\u6216 SGX SDK \u6784\u5efa\uff0c\u4ee5\u4e0b\u5217\u4e3e\u4e86\u51e0\u4e2a\u7531 Teaclave \u9a71\u52a8\u7684\u5f00\u6e90\u9879\u76ee\u6216\u5546\u4e1a\u4ea7\u54c1\u3002\u5e0c\u671b\u66f4\u591a\u7684\u516c\u53f8\u3001\u9879\u76ee\u80fd\u591f\u52a0\u5165\u5b89\u5168\u8ba1\u7b97\u7684\u751f\u6001\u5f53\u4e2d\uff0c\u5171\u540c\u63a8\u52a8\u6570\u636e\u9690\u79c1\u3001\u5b89\u5168\u8ba1\u7b97\u7684\u53d1\u5c55\u3002\\n\\n- **Advanca** \u662f\u670d\u52a1\u4e8e\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\uff08Dapps\uff09\u7684\u4e00\u4e2a\u901a\u7528\u7684\u9690\u79c1\u4fdd\u62a4\u8ba1\u7b97/\u5b58\u50a8\u57fa\u7840\u8bbe\u65bd\u3002[https://github.com/advanca/advanca](https://github.com/advanca/advanca)\\n- **Anonify**: \u5728\u533a\u5757\u94fe\u4e0a\u5229\u7528\u53ef\u4fe1\u6267\u884c\u73af\u5883 (TEE) \u6280\u672f\uff0c\u5411\u7528\u6237\u63d0\u4f9b\u9632\u7be1\u6539\u7684\u6570\u636e\u5171\u4eab\u6280\u672f\u8bbe\u65bd\uff1b\u5728\u7075\u6d3b\u6267\u884c\u4e1a\u52a1\u903b\u8f91\u540c\u65f6\uff0c\u4fdd\u8bc1\u5206\u5e03\u5f0f\u8d26\u672c\u4e2d\u5404\u4e2a\u53c2\u4e0e\u8005\u7684\u6570\u636e\u9690\u79c1\u3002[https://github.com/LayerXcom/anonify](https://github.com/LayerXcom/anonify)\\n\\n![Anonify: A blockchain-agnostic execution environment with privacy and auditability](./img/anonify.png)\\n\\n- **Enigma** \u8054\u5408\u591a\u4e2a\u533a\u5757\u94fe\u5382\u5546\u6784\u5efa\u53bb\u4e2d\u5fc3\u5316\u7f51\u7edc\u8054\u76df \u2014 Secret Network\uff0c\u4e3a\u533a\u5757\u94fe\u7528\u6237\u63d0\u4f9b\u6570\u636e\u9690\u79c1\u4fdd\u62a4\u670d\u52a1\u3002\u5728 Secret Network \u4e2d\uff0c\u7528\u6237\u6570\u636e\u5bc6\u6587\u4f5c\u4e3a\u8f93\u5165\u88ab\u667a\u80fd\u5408\u7ea6\u6267\u884c\uff0c\u6267\u884c\u7ed3\u679c\u57fa\u4e8e\u5171\u8bc6\u534f\u8bae\u9a8c\u8bc1\u540e\u4e0a\u94fe\u3002[https://github.com/enigmampc/enigma-core](https://github.com/enigmampc/enigma-core), [https://github.com/enigmampc/SecretNetwork](https://github.com/enigmampc/SecretNetwork)\\n\\n![Secret Network is a blockchain-based, open-source protocol that lets anyone perform computations on encrypted data, bringing privacy to smart contracts and public blockchains.](./img/secret-network.png)\\n\\n- **Crypto.com** \u7684\u8bd5\u9a8c\u6027\u9879\u76ee Crypto.com chain \u4e2d\u4f7f\u7528 Teaclave \u8fdb\u884c SGX \u5e94\u7528\u7684\u5f00\u53d1\u3002[https://github.com/crypto-com/chain](https://github.com/crypto-com/chain)\\n- **Phala Network** \u662f\u4e00\u4e2a TEE-\u533a\u5757\u94fe\u6df7\u5408\u7ed3\u6784\u5b9e\u65bd\u7684\u667a\u80fd\u5408\u7ea6\u3002[https://github.com/Phala-Network/phala-blockchain](https://github.com/Phala-Network/phala-blockchain)\\n- **SafeTrace** \u9879\u76ee\u662f\u4e00\u4e2a\u9690\u79c1\u4fdd\u62a4\u7684\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u8ffd\u8e2a\u7cfb\u7edf\uff0c\u4f7f\u7528 SGX \u4fdd\u8bc1\u7528\u6237\u7684\u4f4d\u7f6e\u6570\u636e\u80fd\u591f\u5b89\u5168\u7684\u8fdb\u884c\u4ea4\u6362\u3002[https://github.com/enigmampc/SafeTrace](https://github.com/enigmampc/SafeTrace)\\n- **substraTEE** \u4e3a substrate blockchains \u63d0\u4f9b\u4e86\u53ef\u4fe1\u7684 off-chain \u8ba1\u7b97\u6846\u67b6\u3002[https://github.com/scs/substraTEE](https://github.com/scs/substraTEE)\\n- **Occlum** \u9879\u76ee\u662f\u57fa\u4e8e Teaclave SGX SDK \u63d0\u4f9b\u4e86\u4e00\u4e2a library OS \u7c7b\u578b\u7684 SGX \u53ef\u4fe1\u6267\u884c\u73af\u5883\uff0c\u4f7f\u5e94\u7528\u7a0b\u5e8f\u51e0\u4e4e\u4e0d\u9700\u8981\u4fee\u6539\u6e90\u4ee3\u7801\u5373\u53ef\u653e\u5165 SGX \u4e0a\u8fd0\u884c\u3002\u8be5\u9879\u76ee\u5373\u5c06\u52a0\u5165 Confidiential Computing Consortium \u673a\u5bc6\u8ba1\u7b97\u8054\u76df\u3002[https://github.com/occlum/occlum](https://github.com/occlum/occlum)\\n- **Veracruz** \u662f\u4e00\u4e2a\u591a\u65b9\u4e0d\u4fe1\u4efb\u73af\u5883\u4e0b\u7684\u9690\u79c1\u4fdd\u62a4\u7684\u8ba1\u7b97\u6846\u67b6\u3002\u8be5\u9879\u76ee\u5373\u5c06\u52a0\u5165 Confidiential Computing Consortium \u673a\u5bc6\u8ba1\u7b97\u8054\u76df\u3002[https://github.com/veracruz-project/veracruz](https://github.com/veracruz-project/veracruz)\\n\\n![Projects powered by Teaclave](./img/logo-projects-powered-by-teaclave.png)\\n\\n\u4ee5\u4e0a\u4e9b\u9879\u76ee\u90fd\u662f\u5229\u7528 TEE \u63d0\u4f9b\u7684\u786c\u4ef6\u9694\u79bb\u3001\u5185\u5b58\u52a0\u5bc6\u3001\u8fdc\u7a0b\u8bc1\u5b9e\u7b49\u7279\u6027\uff0c\u4fdd\u62a4\u4e1a\u52a1\u4e2d\u6570\u636e\u8ba1\u7b97\u7684\u9690\u79c1\u3002\u4e00\u4e9b\u9879\u76ee\u5728 SGX SDK \u57fa\u7840\u4e0a\u63d0\u4f9b\u4e86\u66f4\u4e3a\u4fbf\u5229\u7684\u53ef\u4fe1\u6267\u884c\u73af\u5883\u6846\u67b6\uff0c\u6bd4\u5982 Occlum \u548c Veracruz\u3002\u53e6\u5916\u4e00\u4e9b\u9879\u76ee\u4f7f\u7528 SGX SDK \u7f16\u5199 TEE \u5e94\u7528\u4fdd\u62a4\u5176\u4e1a\u52a1\u903b\u8f91\u4e2d\u7684\u6570\u636e\u9690\u79c1\uff0c\u6216\u63d0\u4f9b\u53ef\u4fe1\u7684\u8282\u70b9\uff0c\u5982 Secret Network \u548c substraTEE\u3002\u8fd8\u6709\u4e00\u4e9b\u9879\u76ee\u79fb\u690d\u4f7f\u7528 Teaclave \u5e73\u53f0\u91cc\u7684\u901a\u7528\u6a21\u5757\uff0c\u6bd4\u5982\u8fdc\u7a0b\u8bc1\u5b9e\u4ee3\u7801\u5e93\u7b49\u7b49\u3002\u66f4\u591a\u5173\u4e8e\u7531 Teaclave \u9a71\u52a8\u7684\u5f00\u6e90\u9879\u76ee\u5217\u8868\u53ef\u4ee5\u5728\u5b98\u7f51\u4e2d\u67e5\u770b\uff08[https://teaclave.apache.org/community/](https://teaclave.apache.org/community/)\uff09\u3002\\n\\n\u6700\u540e\uff0cTeaclave \u9879\u76ee\u975e\u5e38\u6b22\u8fce\u5927\u5bb6\u5171\u540c\u53c2\u4e0e\u793e\u533a\uff0c\u63a8\u52a8\u9690\u79c1\u5b89\u5168\u8ba1\u7b97\u53d1\u5c55\u3002"},{"id":"/2020/10/29/announcing-teaclave-0.1.0-cn","metadata":{"permalink":"/blog/2020/10/29/announcing-teaclave-0.1.0-cn","source":"@site/blog/2020-10-29-announcing-teaclave-0.1.0-cn.md","title":"\u8ba9\u5b89\u5168\u8ba1\u7b97\u66f4\u7b80\u5355 - Apache Teaclave (incubating) 0.1.0 \u6b63\u5f0f\u53d1\u5e03","description":"English | \u4e2d\u6587","date":"2020-10-29T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"\u8ba9\u5b89\u5168\u8ba1\u7b97\u66f4\u7b80\u5355 - Apache Teaclave (incubating) 0.1.0 \u6b63\u5f0f\u53d1\u5e03","date":"2020-10-29T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Teaclave \u5b89\u5168\u8ba1\u7b97\u5f00\u6e90\u751f\u6001 - \u7531 Teaclave \u9a71\u52a8\u7684\u5f00\u6e90\u9879\u76ee\u4e00\u89c8","permalink":"/blog/2020/12/04/teaclave-ecosystem-cn"},"nextItem":{"title":"Announcing Apache Teaclave (incubating) 0.1.0","permalink":"/blog/2020/10/22/announcing-teaclave-0.1.0"}},"content":"[English](/blog/2020-10-21-announcing-teaclave-0-1-0/) | [\u4e2d\u6587](/blog/2020-10-28-announcing-teaclave-0-1-0-cn/)\\n\\nApache Teaclave (incubating) \u4f5c\u4e3a\u5168\u7403\u9996\u4e2a\u5f00\u6e90\u901a\u7528\u5b89\u5168\u8ba1\u7b97\u5e73\u53f0\uff0c\u5728 2020 \u5e74 10 \u6708\\n21 \u65e5\u793e\u533a\u6295\u7968\u6b63\u5f0f\u901a\u8fc7 0.1.0 \u7684\u7248\u672c\u53d1\u5e03\u30020.1.0 \u7248\u662f Teaclave \u793e\u533a\u53d1\u5c55\u91cd\u8981\u7684\u91cc\u7a0b\u7891\uff0c\\n\u5b83\u662f\u66a8 Teaclave \u8fdb\u5165 Apache \u5b75\u5316\u5668\u540e\u53d1\u5e03\u7684\u7b2c\u4e00\u4e2a\u6b63\u5f0f\u7248\u672c\uff0c\u8fd9\u610f\u5473\u7740 Teaclave \u901a\u5411\\nApache \u9876\u7ea7\u9879\u76ee\u4e4b\u8def\u8d70\u4e0a\u4e86\u6b63\u8f68\u3002\\n\\nTeaclave \u662f\u4e00\u4e2a\u5b89\u5168\u8ba1\u7b97\u5e73\u53f0\uff0c\u4e3a\u9690\u79c1\u6570\u636e\u8ba1\u7b97\u8d4b\u80fd\u3002\u57fa\u4e8e\u786c\u4ef6\u5b89\u5168\u80fd\u529b\uff0cTeaclave \u786e\u4fdd\\n\u654f\u611f\u6570\u636e\u5728\u53ef\u4fe1\u57df\u5916\u548c\u79bb\u5cb8\u573a\u666f\u4e0b\u5b89\u5168\u53ef\u63a7\u7684\u6d41\u901a\u548c\u5904\u7406\uff0c\u65e0\u9700\u62c5\u5fc3\u9690\u79c1\u6570\u636e\u6cc4\u9732\u548c\u6ee5\u7528\u3002\\nTeaclave \u540c\u65f6\u652f\u6301\u591a\u65b9\u53c2\u4e0e\u7684\u8054\u5408\u8ba1\u7b97\uff0c\u6253\u7834\u4f01\u4e1a\u548c\u7ec4\u7ec7\u4e2d\u7684\u6570\u636e\u5b64\u5c9b\u3002\\n\\n\u7b80\u5355\u6765\u8bf4\uff0cTeaclave \u6709\u4ee5\u4e0b\u56db\u4e2a\u4eae\u70b9\uff1a\\n\\n- **\u5b89\u5168\u6027**\uff1aTeaclave \u4f7f\u7528\u591a\u91cd\u5b89\u5168\u6280\u672f\u4fdd\u62a4\u9690\u79c1\u6570\u636e\u7684\u8ba1\u7b97\u3002\u6211\u4eec\u4f7f\u7528 Intel SGX\uff0c\\n  \u63d0\u4f9b\u57fa\u4e8e\u786c\u4ef6\u9694\u79bb\u3001\u5185\u5b58\u52a0\u5bc6\u3001\u8fdc\u7a0b\u8bc1\u5b9e\u7b49\u5b89\u5168\u6280\u672f\u4fdd\u62a4\u6570\u636e\u9690\u79c1\u8ba1\u7b97\u4efb\u52a1\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\\n  \u4e3a\u4e86\u907f\u514d\u5185\u5b58\u5b89\u5168\u6f0f\u6d1e\u5e26\u6765\u7684\u5b89\u5168\u98ce\u9669\uff0cTeaclave \u8fd8\u4f7f\u7528\u5185\u5b58\u5b89\u5168\u7f16\u7a0b\u8bed\u8a00 Rust \u7f16\u5199\u3002\\n- **\u529f\u80fd\u6027**\uff1aTeaclave \u5e73\u53f0\u63d0\u4f9b\u4e86\u66f4\u52a0\u4fbf\u5229\u7684\u51fd\u6570\u5373\u670d\u52a1\uff08function-as-a-service\uff09\u63a5\\n  \u53e3\uff0c\u5927\u5927\u7684\u964d\u4f4e\u4e86\u4f7f\u7528\u95e8\u69db\u3002\u5e73\u53f0\u4e2d\u4e5f\u5b9e\u73b0\u4e86\u4f17\u591a\u5185\u7f6e\u51fd\u6570\uff0c\u4f8b\u5982\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u591a\u65b9\u8054\\n  \u5408\u6c42\u4ea4\uff0c\u52a0\u89e3\u5bc6\u8ba1\u7b97\u7b49\u7b49\u5e38\u7528\u529f\u80fd\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5f00\u53d1\u8005\u8fd8\u53ef\u4ee5\u4f7f\u7528 Python \u81ea\u7531\u7f16\u5199\u51fd\\n  \u6570\u6765\u64cd\u4f5c\u9690\u79c1\u6570\u636e\uff0c\u63d0\u4ea4\u81f3 Teaclave \u5e73\u53f0\u6267\u884c\u3002\u4e0e\u4f20\u7edf FaaS \u6846\u67b6\u4e0d\u540c\u7684\u662f\uff0cTeaclave\\n  \u63d0\u4f9b\u4e86\u7075\u6d3b\u7684\u591a\u65b9\u53c2\u4e0e\u8ba1\u7b97\u63a5\u53e3\uff0c\u5927\u5927\u7b80\u5316\u591a\u65b9\u5b89\u5168\u8ba1\u7b97\u7684\u6d41\u7a0b\u3002\\n- **\u6613\u7528\u6027**\uff1aTeaclave \u63d0\u4f9b\u4fbf\u5229\u7684\u90e8\u7f72\u65b9\u5f0f\uff0c\u652f\u6301\u5728\u672c\u5730\u548c\u4e91\u4e0a\u4ee5\u5bb9\u5668\u7684\u65b9\u5f0f\u8fdb\u884c\u90e8\u7f72\u3002\\n  \u9879\u76ee\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u5b8c\u5584\u7684\u63a5\u53e3\uff0c\u5ba2\u6237\u7aef SDK \u4ee5\u53ca\u547d\u4ee4\u884c\u5de5\u5177\u5e2e\u52a9\u5f00\u53d1\u8005\u4f7f\u7528\u5e73\u53f0\u7684\u529f\u80fd\u3002\\n- **\u7075\u6d3b\u6027**\uff1aTeaclave \u8bbe\u8ba1\u4e86\u7075\u6d3b\u7684\u7ec4\u4ef6\u548c\u670d\u52a1\u6846\u67b6\uff0c\u5176\u4ed6\u9879\u76ee\u4ec5\u9700\u5c11\u91cf\u4fee\u6539\u5c31\u53ef\u4ee5\u4f7f\\n  \u7528 Teaclave \u4e2d\u7684\u5404\u79cd\u7ec4\u4ef6\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u4f7f\u7528 Teaclave \u8fdc\u7a0b\u8bc1\u5b9e\u5e93\u4f5c\u4e3a\u7b2c\u4e09\u65b9\\n  \u4f9d\u8d56\u5e93\uff0c\u6216\u8005\u76f4\u63a5\u5355\u72ec\u90e8\u7f72\u4f7f\u7528 Teaclave \u4e2d\u7684\u6570\u636e\u5e93\u670d\u52a1\u7b49\u3002\\n  \\n![Teaclave Architecture](./img/teaclave-architecture.png)\\n\\n\u5728 Teaclave \u8fdb\u5165 Apache \u5b75\u5316\u5668\u540e\uff0c\u6211\u4eec\u542f\u52a8\u4e86\u5bf9\u9879\u76ee\u7684\u91cd\u6784\u8ba1\u5212\uff0c\u540c\u65f6\u5bf9\u6574\u4e2a\u9879\u76ee\u4ee3\u7801\\n\u548c\u4ea4\u4e92\u7684\u68b3\u7406\uff0c0.1.0 \u7684\u53d1\u5e03\u662f\u9879\u76ee\u4ece\u8bde\u751f\u5230\u6210\u957f\u7684\u7b2c\u4e00\u6b65\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u4ee5\u4e0b\u51e0\u4e2a\u65b9\\n\u9762\u505a\u4e86\u4ee3\u7801\u91cd\u6784\u548c\u529f\u80fd\u7279\u6027\u5b8c\u5584\uff1a\u63d0\u4f9b\u4e86\u66f4\u5b8c\u5584\u7684\u51fd\u6570\u548c\u6570\u636e\u6ce8\u518c\u6267\u884c\uff0c\u91cd\u65b0\u8bbe\u8ba1\u7684\u51fd\u6570\u7684\\n\u5f00\u53d1\u6d41\u7a0b\uff0c\u652f\u6301\u517c\u5bb9 protobuf \u7684 RPC \u5b9a\u4e49\u63a5\u53e3\uff0c\u652f\u6301\u5206\u5e03\u5f0f\u6267\u884c\u670d\u52a1\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u6267\u884c\\n\u5668\uff0c\u63d0\u4f9b\u66f4\u4f73\u5b8c\u5584\u7684\u6587\u6863\uff0c\u91cd\u65b0\u8bbe\u8ba1\u4e86\u9519\u8bef\u5904\u7406\u673a\u5236\uff0c\u5b8c\u5584\u6d4b\u8bd5\u6846\u67b6\u548c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5b9e\u73b0\u4e86\u66f4\\n\u591a\u7684\u5185\u7f6e\u51fd\u6570\uff0c\u652f\u6301\u4e86\u66f4\u52a0\u7075\u6d3b\u7684\u8fdc\u7a0b\u8bc1\u5b9e\u65b9\u5f0f\uff08DCAP\uff09\uff0c\u91cd\u65b0\u8bbe\u8ba1 RPC \u65b9\u5f0f\u7b49\u7b49\u3002\u66f4\u591a\\n\u66f4\u8be6\u7ec6\u7684\u4fee\u6539\u53ef\u4ee5\u770b\u6211\u4eec\u7684[\u7248\u672c\u53d1\u5e03\u6587\u6863](https://github.com/apache/incubator-teaclave/releases/tag/v0.1.0)\u3002\u8fd9\u6b21\\n\u53d1\u5e03\u4e00\u5171\u4fee\u6539\u4e86 876 \u4e2a\u6e90\u6587\u4ef6\uff0c\u65b0\u589e\u4e86 78,237 \u884c\u4ee3\u7801\uff0c\u5220\u9664\u4e86 54,846 \u884c\u4ee3\u7801\uff0c\u5e76\u4e14\u5728\\nGitHub issue \u4e0a\u89e3\u51b3\u4e86\u6765\u81ea\u793e\u533a\u7684 102 \u4e2a\u95ee\u9898\u3002\\n\\nTeaclave 0.1.0 \u7248\u672c\u53ef\u4ee5\u5728[\u5b98\u7f51\u4e0b\u8f7d\u9875\u9762](/download/)\u627e\u5230\uff08\u6ce8\u610f\u9a8c\u8bc1 PGP \u7b7e\u540d\u548c hash\uff09\u3002\\n\\n\u5728\u65b0\u7248\u672c\u4e2d\u6211\u4eec\u63d0\u4f9b\u4e86\u975e\u5e38\u5168\u9762\u548c\u8be6\u7ec6\u7684\u6587\u6863\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u4e86\u89e3\u548c\u63a5\u89e6 Teaclave\uff0c\u6211\u4eec\\n\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u6613\u4e0a\u624b\u7684[\u65b0\u624b\u5165\u95e8\u6587\u6863](/docs/my-first-function/)\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6587\u6863\u4e2d\\n\u5b66\u4e60\u5982\u4f55\u5728 Teaclave \u4e2d\u7f16\u8bd1\u548c\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u60f3\u6df1\u5165\u7684\u4e86\u89e3\\nTeaclave \u7684\u5185\u90e8\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff0c\u6211\u4eec\u8fd8\u6709\u66f4\u591a\u8bbe\u8ba1\u6587\u6863\u3001API \u6587\u6863\u3001\u4ee3\u7801\u5e93\u6587\u6863\u7b49\u4f60\u53d1\u73b0\u3002\\n\\n\u611f\u8c22\u4e00\u76f4\u4ee5\u6765\u5173\u6ce8\u3001\u4f7f\u7528\u3001\u63d0\u95ee\u3001\u4e3a\u9879\u76ee\u8d21\u732e\u4ee3\u7801\u7684\u4eba\u4eec\uff0cTeaclave \u9879\u76ee\u7684\u53d1\u5c55\u79bb\u4e0d\u5f00[\u793e\u533a](/community/)\u7684\u652f\u6301\u4e0e\u5e2e\u52a9\u3002\u5728\u6b64\uff0c\u6211\u4eec\u975e\u5e38\u9ad8\\n\u5174\u7684\u5ba3\u5e03\uff0c\u5df2\u6709\u56db\u5bb6\u516c\u53f8\u6216\u7ec4\u7ec7\u5728\u4ea7\u54c1\u4e2d\u4f7f\u7528 Teaclave\uff0c\u5e76\u4e14\u6709\u8d85\u8fc7\u4e5d\u4e2a\u5f00\u6e90\u9879\u76ee\u4f7f\u7528\u4e86\\nTeaclave \u5e73\u53f0\u548c Teaclave SGX SDK\u3002\u8fd9\u4e9b\u90fd\u7ed9\u9879\u76ee\u7684\u53d1\u5c55\u63d0\u4f9b\u6e90\u6e90\u4e0d\u65ad\u7684\u52a8\u529b\u3002\\n\\nTeaclave \u7684\u5f00\u6e90\u662f [The Apache Way](https://www.apache.org/theapacheway/)\u7684\\n\u5f00\u6e90\uff0c\u65e0\u8bba\u662f\u4ee3\u7801\u3001\u6587\u6863\u3001\u8bbe\u8ba1\u8fd8\u662f\u8def\u7ebf\u56fe\u89c4\u5212\uff0c\u6211\u4eec\u90fd\u4f1a\u5728\u793e\u533a\u7684\u5404\u4e2a\u6e20\u9053\u4e2d\u8ba8\u8bba\u3002\u5982\u679c\\n\u4f60\u60f3\u5173\u6ce8 Teaclave\uff0c\u4ea6\u6216\u60f3\u52a0\u5165\u6211\u4eec\u7684\u8ba8\u8bba\uff0c\u53ef\u4ee5\u5728 [Github issues](https://lists.apache.org/list.html?dev@teaclave.apache.org)\uff0c\u90ae\u4ef6\u5217\\n\u8868\u56de\u590d\u6211\u4eec\u3001\u53d1\u8d77\u65b0\u7684\u8bdd\u9898\u3002\u4e5f\u53ef\u4ee5\u5173\u6ce8\u6211\u4eec\u7684 Twitter \u8d26\u53f7\\n[@ApacheTeaclave](https://twitter.com/ApacheTeaclave)\u4e86\u89e3\u6700\u65b0\u52a8\u6001\u3002\u9664\u6b64\u4e4b\u5916\uff0c\\n\u6211\u4eec\u5728[\u5b98\u7f51](/docs/papers-talks/)\u4e2d\u63d0\u4f9b\u4e86\\nTeaclave \u76f8\u5173\u7684\u6f14\u8bb2\u3001\u8bba\u6587\u548c\u6587\u7ae0\uff0c\u5305\u62ec\u4eca\u5e74\u5728 ApacheCon \u7684\u6f14\u8bb2 slides \u548c\u89c6\u9891\u3002\\n\\n\u5728\u6b64\uff0c\u611f\u8c22\u6211\u4eec\u6240\u6709[\u8d21\u732e\u8005](/contributors/)\u5bf9\u4e8e\u9879\\n\u76ee\u7684\u8d21\u732e\uff0c\u611f\u8c22 Apache \u793e\u533a[\u5bfc\u5e08\u4eec](/contributors/#mentors)\u7684\u6307\u5bfc\uff0c\u611f\u8c22\u6240\u6709\u5e2e\u52a9\\n\u6269\u5927\u793e\u533a\u3001\u5ba3\u4f20\u793e\u533a\u3001\u8ba8\u8bba\u8def\u7ebf\u56fe\u3001\u7ec4\u7ec7\u793e\u533a\u6d3b\u52a8\u7684 [PPMC \u548c committer \u6210\u5458](/contributors/#committers)\uff0c\\n\u8fd8\u8981\u611f\u8c22\u6b63\u5728\u4e86\u89e3\\n\u548c\u5c1d\u8bd5\u4f7f\u7528 Teaclave \u7684\u4eba\u4eec\uff0c\u4ee5\u53ca\u56de\u9988 Teaclave \u793e\u533a\u7684\u516c\u53f8\u3002\u4f60\u4eec\u90fd\u4e3a Teaclave \u5f00\u6e90\\n\u793e\u533a\u7684\u53d1\u5c55\u505a\u4e86\u5de8\u5927\u7684\u8d21\u732e\u3002\\n\\n\u6700\u540e\uff0c0.1.0 \u53ea\u662f Teaclave \u7684\u5f00\u7aef\uff0c\u6211\u4eec\u8fd8\u4f1a\u548c Teaclave \u793e\u533a\u7ee7\u7eed\u52aa\u529b\uff0c\u63a8\u52a8\u9690\u79c1\u5b89\u5168\\n\u8ba1\u7b97\u7684\u53d1\u5c55\u3002\\n\\n**Teaclave\uff0c\u8ba9\u5b89\u5168\u8ba1\u7b97\u66f4\u7b80\u5355\u3002**"},{"id":"/2020/10/22/announcing-teaclave-0.1.0","metadata":{"permalink":"/blog/2020/10/22/announcing-teaclave-0.1.0","source":"@site/blog/2020-10-22-announcing-teaclave-0.1.0.md","title":"Announcing Apache Teaclave (incubating) 0.1.0","description":"English | \u4e2d\u6587","date":"2020-10-22T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Announcing Apache Teaclave (incubating) 0.1.0","date":"2020-10-22T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"\u8ba9\u5b89\u5168\u8ba1\u7b97\u66f4\u7b80\u5355 - Apache Teaclave (incubating) 0.1.0 \u6b63\u5f0f\u53d1\u5e03","permalink":"/blog/2020/10/29/announcing-teaclave-0.1.0-cn"},"nextItem":{"title":"Podling Teaclave Report - October 2020","permalink":"/blog/2020/10/12/podling-teaclave-report-october-2020"}},"content":"[English](/blog/2020-10-21-announcing-teaclave-0-1-0/) | [\u4e2d\u6587](/blog/2020-10-28-announcing-teaclave-0-1-0-cn/)\\n\\nOn behalf of the Teaclave community, I am happy to announce the *first* Apache\\nIncubator release of Teaclave, 0.1.0. Teaclave is a universal secure computing\\nplatform, making computation on privacy-sensitive data safe and simple.\\n\\nThe 0.1.0 release marks an important milestone for the Teaclave community. This\\nis the first public release of the Teaclave platform. Moreover, this is the\\nfirst official release since we entered Apache Incubator on August 19, 2019.\\n\\n## Project highlights\\n\\nSince this is our first public release, I still want to emphasize the highlights\\nof the Teaclave project.\\n\\nApache Teaclave (incubating) has following highlights:\\n\\n- **Security**: Teaclave adopts multiple security technologies to enable secure\\n  computing. In particular, Teaclave uses Intel SGX to serve the most\\n  security-sensitive tasks with *hardware-based isolation*, *memory encryption*,\\n  and *attestation*. Also, Teaclave is written in Rust to prevent\\n  *memory-safety* issues.\\n- **Functionality**: Teaclave is provided as a *function-as-a-service platform*.\\n  With many built-in functions, it supports tasks like machine learning, private\\n  set intersection, crypto computation, etc. In addition, developers can also\\n  deploy and execute Python scripts in Teaclave. More importantly, unlike\\n  traditional FaaS, Teaclave supports both general secure computing tasks and\\n  *flexible single- and multi-party computation*.\\n- **Usability**: Teaclave builds its components in containers, therefore, it\\n  supports deployment both locally and within cloud infrastructures. Teaclave\\n  also provides convenient endpoint APIs, client SDKs, and command-line tools.\\n- **Modularity**: Components in Teaclave are designed in modular, and some components \\n  like remote attestation can be easily embedded in other projects. In addition,\\n  Teaclave SGX SDK can also be used separately to write standalone SGX enclaves\\n  for other purposes.\\n\\n![Teaclave Architecture](./img/teaclave-architecture.png)\\n\\n## Changes since entering Apache Incubator\\n\\nSince we entered Apache Incubator, we started an ambitious task of refactoring\\nand improving the project in many perspectives. These include:\\n\\n* Supporting function and data registration.\\n    - input data of a function can be fetched from external storage\\n    - reuse registered function in new tasks\\n* Redesigning function development workflow.\\n    - developers only need to write python script with native libraries written in Rust\\n* Providing persistent database implementation.\\n    - port rusty-leveldb to SGX enclave using protected FS to secure file I/O\\n    - add dedicated database service called \\"storage service\\" for data persistency\\n* Supporting protobuf compatible RPC protocol.\\n    - refactor existing service protocol with `.proto` files\\n    - redesign PRC protocol with remote attestation\\n* Supporting distributed workers.\\n    - support docker deployment\\n    - decouple services into different containers\\n* Supporting customized workers.\\n    -  service provider can deploy with other kinds of customized workers besides builtin worker\\n* Providing better documentation.\\n* Providing better error handling.\\n    - errors can be propagated through RPC\\n    - better error triage\\n* Testsuite cleanup/refactoring.\\n* Implementing more built-in functions: we have nine built-in functions, including\\n  echo, face detection, gbdt predict/train, logistic regression predict/train,\\n  online decrypt, ordered set intersect, private join and compute, and RSA sign.\\n* Supporting more flexible attestation mechanisms (DCAP): providing a reference\\n  implementation of DCAP attestation service and supporting DCAP in our\\n  attestation library and build system as well.\\n* RPC enhancement.\\n    - multi-language client\\n* Many other changes.\\n\\nThese changes include 876 files changed, 78,237 insertions, and 54,846 deletions.\\nWe have also closed 102 issues on GitHub to answer questions from the community\\nand implementing feature requests.\\n\\n## Download\\n\\nTeaclave 0.1.0 can be downloaded at [the download page](/download/). Note that \\nit is essential to verify the integrity of the downloaded file using the\\nPGP signature (.asc file) or a hash (.md5 or .sha* file).\\n\\n## Documentation\\n\\nIf it is the first time to try Teaclave, we provide a simple but clear tutorial\\nto guide you getting stated with Teaclave by invoking\\n[your first function](/docs/my-first-function/) in Teaclave.\\n\\nBasically, you can build the Teaclave platform using docker with these commands:\\n\\n```sh\\n$ cd incubator-teaclave\\n$ docker run --rm -v $(pwd):/teaclave -w /teaclave \\\\\\n  -it teaclave/teaclave-build-ubuntu-1804-sgx-2.9.1:latest \\\\\\n   bash -c \\". /root/.cargo/env && \\\\\\n     . /opt/sgxsdk/environment && \\\\\\n     mkdir -p build && cd build && \\\\\\n     cmake -DTEST_MODE=ON .. && \\\\\\n     make\\"\\n```\\n\\nLaunch all services with `docker-compose`:\\n\\n```sh\\n$ (cd docker && docker-compose -f docker-compose-ubuntu-1804.yml up --build)\\n```\\n\\nAnd invoke function with a Python client:\\n\\n```sh\\n$ cd examples/python\\n$ PYTHONPATH=../../sdk/python python3 builtin_echo.py \'Hello, Teaclave!\'\\n[+] registering user\\n[+] login\\n[+] registering function\\n[+] creating task\\n[+] approving task\\n[+] invoking task\\n[+] getting result\\n[+] done\\n[+] function return:  b\'Hello, Teaclave!\'\\n```\\n\\nIf you want to understand the internals of Teaclave, we provide several\\ndocuments about the [design](/docs/#design) of Teaclave. Also, we extensively\\ndocument our [codebase](docs/#codebase) in each sub directories. At last, [API references](docs/#api-references)\\nare automatically generated and uploaded to our homepage.\\n\\n## Community\\n\\nAlong our road to the first public release, we also see the growth of the\\ncommunity who started to follow the project and using in their products. We have\\nseen at least four [organizations](community/#organizations) using Teaclave in\\ntheir products, and more than nine open source [projects](community/#projects)\\nbuilding on top of Teaclave platform or Teaclave SGX SDK.\\n\\nWe build several channels to communicate with the community including GitHub issues,\\n[mailing lists](https://lists.apache.org/list.html?dev@teaclave.apache.org), and\\nTwitter account ([@ApacheTeaclave](https://twitter.com/ApacheTeaclave)).\\n\\nWe also attended ApacheCon this year to introduce Teaclave to the Apache community.\\nIf you missed the talk, please find the slides and other materials of talks,\\npapers, and related articles at [this page](/docs/papers-talks/).\\n\\n## Thanks\\n\\nI\'d like to thank all [contributors](/contributors/) to build this community.\\nThanks to our project [mentors](/contributors/#mentors), who help us to\\nunderstand the Apache way of open source. Furthermore, \\nthanks to all [PPMC members and committers](/contributors/#committers)\\nfor governing and expanding the community, organizing meetups, discussing\\nroadmap, designing components, writing documents, contributing code, and\\nadvertising the project. Moreover, thanks to all [external contributors](/contributors/#contributors-2)\\nwho send pull requests to fix bugs\\nand implementing features. In addition, I\'d like to thank people who tries\\nTeaclave themselves, files bugs or feature requests. This also helps us to\\nunderstand the project and figure out where we can improve.\\nFinally, I\'d like to thank companies who use Teaclave and contribute back to\\nthe community.\\n\\nAt last, 0.1.0 is just the start of Teaclave. We will continue working hard with\\nthe community implementing new features, writing documents, and expanding the\\ncommunity.\\n\\nHappy Teaclaving. Cheers!"},{"id":"/2020/10/12/podling-teaclave-report-october-2020","metadata":{"permalink":"/blog/2020/10/12/podling-teaclave-report-october-2020","source":"@site/blog/2020-10-12-podling-teaclave-report-october-2020.md","title":"Podling Teaclave Report - October 2020","description":"Teaclave","date":"2020-10-12T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Podling Teaclave Report - October 2020","date":"2020-10-12T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Announcing Apache Teaclave (incubating) 0.1.0","permalink":"/blog/2020/10/22/announcing-teaclave-0.1.0"},"nextItem":{"title":"Podling Teaclave Report - July 2020","permalink":"/blog/2020/06/29/podling-teaclave-report-july-2020"}},"content":"## Teaclave\\n\\nTeaclave is a universal secure computing platform, making computation on\\nprivacy-sensitive data safe and simple.\\n\\nTeaclave has been incubating since 2019-08-20.\\n\\n### Three most important unfinished issues to address before graduating:\\n\\n  1. Improve project structure and documentation\\n  2. Grow the community (attracting more committers, contributors, users)\\n  3. Publish Apache releases (resolving logistics on Apache release)\\n\\n### Are there any issues that the IPMC or ASF Board need to be aware of?\\n\\nNone. \\n\\n### How has the community developed since the last report?\\n\\nSince the last report, we received contributions from a new contributor. We also\\nreceived many issue reports and questions regarding the usages, bugs, and\\nroadmap of Teaclave. Also, we presented the Teaclave project in recent ApacheCon\\nto the community and received some useful feedback.\\n\\n### How has the project developed since the last report?\\n\\nThe main goal of development since the last report is to resolve logistics\\ntowards the first Apache release. This includes license checking, building\\nsystem improvement, documentation and write-ups. On Oct 9th, the Teaclave\\ncommunity and incubator has passed 0.1.0 release voting.\\n\\n### How would you assess the podling\'s maturity?\\nPlease feel free to add your own commentary.\\n\\n  - [ ] Initial setup\\n  - [X] Working towards first release\\n  - [X] Community building\\n  - [ ] Nearing graduation\\n  - [ ] Other:\\n\\n### Date of last release:\\n\\n2020-10-09\\n\\n### When were the last committers or PPMC members elected?\\n\\nWe haven\'t started new committers or PPMC members elections yet. Currently, our\\nwork focuses on the first Apache release. We\'ll switch to community building in\\nthe next quarter. Currently, we already have potential candidates for the new\\nPPMC members election.\\n\\n### Have your mentors been helpful and responsive?\\n\\nYes. They have been helpful and very responsive for the first public release. \\n\\n### Is the PPMC managing the podling\'s brand / trademarks?\\nWe don\'t find any 3rd parties incorrectly using the podling\'s name and brand.\\nThe VP, Brand has approved the project name. (PODLINGNAMESEARCH-175)"},{"id":"/2020/06/29/podling-teaclave-report-july-2020","metadata":{"permalink":"/blog/2020/06/29/podling-teaclave-report-july-2020","source":"@site/blog/2020-06-29-podling-teaclave-report-july-2020.md","title":"Podling Teaclave Report - July 2020","description":"Teaclave","date":"2020-06-29T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Podling Teaclave Report - July 2020","date":"2020-06-29T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Podling Teaclave Report - October 2020","permalink":"/blog/2020/10/12/podling-teaclave-report-october-2020"},"nextItem":{"title":"Podling Teaclave Report - April 2020","permalink":"/blog/2020/04/01/podling-teaclave-report-april-2020"}},"content":"## Teaclave\\n\\nTeaclave is a universal secure computing platform, making computation\\non privacy-sensitive data safe and simple.\\n\\nTeaclave has been incubating since 2019-08-20.\\n\\n### Three most important unfinished issues to address before graduating:\\n\\n 1. Improve project structure and documentation\\n 2. Grow the community (attracting more committers, contributors, users)\\n 3. Publish Apache releases (resolving logistics on Apache release)\\n\\n### Are there any issues that the IPMC or ASF Board need to be aware of?\\n\\nNo.\\n\\n### How has the community developed since the last report?\\n\\nSince the last report, we started to reach out to people using the\\nproject and collect suggestions and encourage them to join in the\\ncommunity. We have found four organizations and eight projects that\\nare using either the Teaclave platform and Teaclave\'s Rust SGX SDK.\\n\\nWe also created a website for the project:\\nhttps://teaclave.apache.org/, which contains project description,\\ncommunity, contributors, documentations and blog posts.\\n\\nWe started a thread to discuss the logo design, but haven\'t received\\nany proposal for now. We will drive this issue in the next few weeks.\\n\\nWe observed more people posting feature suggestions and\\nbuild/deployment issues. More than five new contributors begin to\\ncontribute bug fixes and introduce new examples.\\n\\nWe started preparing the first Apache release such as logistics on\\nlicenses of third-party libraries.\\n\\n### How has the project developed since the last report?\\n\\nSince the last report, we have completed the development roadmap\\ntowards the first public release\\n(https://github.com/apache/incubator-teaclave/issues/121) proposed\\nlast year. We began to put more efforts on improving documents and\\nbuilding community.\\n\\nWe wrote many documents in recent weeks including:\\n\\n - Try: Tutorials on using the Teaclave platform.\\n - Design: Some explanations of design choices we made.\\n - Contribute: Documents on contributing to Teaclave, such as\\ndebugging tips and Rust development guideline.\\n - Codebase: Documents for each sub-directory (i.e., libraries in Teaclave).\\n - API Docs: Generated API documentations like APIs of Client SDK.\\n\\nWe also provided more examples to help beginners to understand the\\nbasic usages of the projects.\\n\\n### How would you assess the podling\'s maturity?\\n\\n - [ ] Initial setup\\n - [x] Working towards first release\\n - [x] Community building\\n - [ ] Nearing graduation\\n - [ ] Other:\\n\\n### Date of last release:\\n\\nN/A\\n\\n### When were the last committers or PPMC members elected?\\n\\nWe haven\'t started new committers or PPMC members elections yet.\\nCurrently, our work focuses on improving the documents to make the\\nproject more approachable for newcomers. Additionally, we see some\\nregular contributors recently mainly focus on helping to improve\\nexamples, SDK, etc.\\n\\n### Have your mentors been helpful and responsive?\\n\\nYes, our mentors help us with the website development and logo design.\\nAlso, our mentors provided valuable thoughts regarding Intel\'s recent\\nsecurity issues.\\n\\n### Is the PPMC managing the podling\'s brand / trademarks?\\n\\nWe don\'t find any 3rd parties incorrectly using the podling\'s name and\\nbrand. The VP, Brand has approved the project name.\\n(PODLINGNAMESEARCH-175)"},{"id":"/2020/04/01/podling-teaclave-report-april-2020","metadata":{"permalink":"/blog/2020/04/01/podling-teaclave-report-april-2020","source":"@site/blog/2020-04-01-podling-teaclave-report-april-2020.md","title":"Podling Teaclave Report - April 2020","description":"Teaclave","date":"2020-04-01T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Podling Teaclave Report - April 2020","date":"2020-04-01T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Podling Teaclave Report - July 2020","permalink":"/blog/2020/06/29/podling-teaclave-report-july-2020"},"nextItem":{"title":"Podling Teaclave Report - January 2020","permalink":"/blog/2020/01/01/podling-teaclave-report-january-2020"}},"content":"## Teaclave\\n\\nTeaclave is a universal secure computing platform.\\n\\nTeaclave has been incubating since 2019-08-20.\\n\\n### Three most important unfinished issues to address before graduating:\\n\\n  1. Improving project structure and documentation\\n  2. Grow the community (committers, contributors, users)\\n  3. Publish Apache release\\n\\n### Are there any issues that the IPMC or ASF Board need to be aware of?\\n\\nNo.\\n\\n### How has the community developed since the last report?\\n\\n  - Since last report, one external contributor has became our regular\\n    contributor.\\n  - Compared to the last report, we have seen more pull request from external\\n    contributors.\\n  - We received emails from some companies which are interested in the\\n    project and willing to make some contributions for the secure computing\\n    community.\\n  - Since we are mainly working on GitHub, with the help of the INFRA team,\\n    we can sync the notifications of GitHub with our mailing list.\\n\\n### How has the project developed since the last report?\\n\\n  - Since last report, the whole project has been refactored to be more\\n    functional, as well as readable and approachable for new contributors.\\n  - We have rewrote the framework for implementing enclave services. Also, we\\n    have redesigned current services into seven core services\\nincluding access control,\\n    authentication, execution, frontend, management, scheduler, and storage\\n    service. Communication protocols between services are defined in protobuf.\\n  - RPC between services has been redesigned to supported TLS-based attestation.\\n  - We have added DCAP attestation algorithm in the platform so that people can\\n    deploy the system in environments without Intel\'s attestation service.\\n  - Communication between app and enclave has been also redesigned\\nwith better APIs.\\n  - All updates is currently in the `develop` branch. We plan to merge\\ninto `master`\\n    when main refactoring is done.\\n\\n### How would you assess the podling\'s maturity?\\nPlease feel free to add your own commentary.\\n\\n  - [ ] Initial setup\\n  - [x] Working towards first release\\n  - [ ] Community building\\n  - [ ] Nearing graduation\\n  - [ ] Other:\\n\\n### Date of last release:\\n\\nN/A\\n\\n### When were the last committers or PPMC members elected?\\n\\nWe haven\'t started new committers or PPMC members elections yet. Currently, our\\nwork focus on improving the design and documents to make the project more\\napproachable for newcomers.\\n\\n### Have your mentors been helpful and responsive?\\n\\nYes, our mentors help use to resolve the mailing list moderator issues.\\n\\n### Is the PPMC managing the podling\'s brand / trademarks?\\n\\nWe don\'t find any 3rd parties incorrectly using the podling\'s name and brand.\\nThe VP, Brand has approve the project name. (PODLINGNAMESEARCH-175)"},{"id":"/2020/01/01/podling-teaclave-report-january-2020","metadata":{"permalink":"/blog/2020/01/01/podling-teaclave-report-january-2020","source":"@site/blog/2020-01-01-podling-teaclave-report-january-2020.md","title":"Podling Teaclave Report - January 2020","description":"Teaclave","date":"2020-01-01T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Mingshen Sun","key":null,"page":null}],"frontMatter":{"title":"Podling Teaclave Report - January 2020","date":"2020-01-01T00:00:00.000Z","author":"Mingshen Sun"},"unlisted":false,"prevItem":{"title":"Podling Teaclave Report - April 2020","permalink":"/blog/2020/04/01/podling-teaclave-report-april-2020"},"nextItem":{"title":"Mitigation of Intel-SA-00219 in Teaclave SGX SDK","permalink":"/blog/2019/12/03/mitigation-of-intel-sa-00219-in-teaclave-sgx-sdk"}},"content":"## Teaclave\\n\\nTeaclave is a universal secure computing platform.\\n\\nTeaclave has been incubating since 2019-08-20.\\n\\n### Three most important unfinished issues to address before graduating:\\n\\n  1. Improving project structure and documentation\\n  2. Grow the community (committers, contributors, users)\\n  3. Publish Apache release\\n\\n### Are there any issues that the IPMC or ASF Board need to be aware of?\\n\\nNo.\\n\\n### How has the community developed since the last report?\\n\\n  - Since last report, we planned to schedule an online meetup recently.\\n  - We have also received contributions of two new contributors.\\n  - We draft a roadmap RFC for discussion.\\n  - We use GitHub issues to track bugs, features, enhancements. Issues\\nlabeled with \\"good first issues\\" is more approachable for newcomers.\\n\\n### How has the project developed since the last report?\\n\\n  - Resolve all renaming issues of INFRA (INFRA-19532)\\n  - Refactor components: `teaclave_utils`, `teaclave_config`,\\n`teaclave_cli`, `teaclave_binder`\\n  - Rewrite README.md to clearly explain the project\'s highlights in\\nsecurity, functionality, and usability.\\n  - Start to use protobuf for RPC definition\\n  - SGX SDK starts to use Intel SGX SDK v2.7.1\\n\\n### How would you assess the podling\'s maturity?\\n\\n  - [ ] Initial setup\\n  - [x] Working towards first release\\n  - [ ] Community building\\n  - [ ] Nearing graduation\\n  - [ ] Other:\\n\\n### Date of last release:\\n\\nN/A\\n\\n### When were the last committers or PPMC members elected?\\n\\nWe haven\'t started new committers or PPMC members elections yet.\\nCurrently, our work focus on improving the design and documents to\\nmake the project more approachable for newcomers.\\n\\n### Have your mentors been helpful and responsive?\\n\\nYes. Last month, we changed name from MesaTEE to Teaclave. There are a\\nlot of changes need to be done. The mentors and infra teams help us a\\nlot on the transfer.\\n\\n### Is the PPMC managing the podling\'s brand / trademarks?\\n\\nWe don\'t find any 3rd parties incorrectly using the podling\'s name and\\nbrand. The VP, Brand has approve the project name.\\n(PODLINGNAMESEARCH-175)"},{"id":"/2019/12/03/mitigation-of-intel-sa-00219-in-teaclave-sgx-sdk","metadata":{"permalink":"/blog/2019/12/03/mitigation-of-intel-sa-00219-in-teaclave-sgx-sdk","source":"@site/blog/2019-12-03-mitigation-of-intel-sa-00219-in-teaclave-sgx-sdk.md","title":"Mitigation of Intel-SA-00219 in Teaclave SGX SDK","description":"Background","date":"2019-12-03T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Yu Ding","key":null,"page":null}],"frontMatter":{"title":"Mitigation of Intel-SA-00219 in Teaclave SGX SDK","date":"2019-12-03T00:00:00.000Z","author":"Yu Ding"},"unlisted":false,"prevItem":{"title":"Podling Teaclave Report - January 2020","permalink":"/blog/2020/01/01/podling-teaclave-report-january-2020"},"nextItem":{"title":"Aapache Incubation Proposal","permalink":"/blog/2019/08/20/apache-incubation-proposal"}},"content":"## Background\\n\\nIntel issued [Intel SA-00219](https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00219.html) on Nov 12, 2019, with CVE number [CVE-2019-0117](http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0117). Intel also published a [guidance](https://software.intel.com/en-us/download/intel-sgx-sdk-developer-guidance-intel-sa-00219) to instruct the developers/researchers. Then Intel released [Intel SGX SDK v2.7.1](https://01.org/intel-softwareguard-extensions/downloads/intel-sgx-linux-2.7.1-release-version-string-2.7.101.3), including new memory allocation primitives and corresponding patches in PSW enclaves.\\n\\nThis article is to help people understand Intel-SA-00219, and how Teaclave SGX SDK handles it.\\n\\n## The problem statement and my thoughts\\n\\nThe only statement I found is on the [Intel-SA-00219 page](https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00219.html):\\n\\n> Organize the code/data within enclave memory to avoid putting sensitive materials in DWORD0 and DWORD1 of cache line. The effectiveness of this mitigation is dependent on the ability for the software to avoid the affected memory region. To assist the enclave application providers to modify their code, Intel is releasing SGX SDK update (Windows version 2.5.101.3, Linux version 2.7.101.3) with new memory allocation APIs to avoid the affected memory region. More details about the APIs can be found [here](https://software.intel.com/en-us/download/intel-sgx-sdk-developer-guidance-intel-sa-00219).\\n\\nIntel does not directly describe the vulnerability here. But it\'s clear that the 64-byte cache line would contain 8-byte or sensitive data, which can be keys protected by Intel SGX. So the following memory layout can be problematic in SGX:\\n\\n```\\n --------------------------------------------------------------------------------------\\n| attacker accessible data A | private key (inaccessible) | attacker accessible data B |\\n --------------------------------------------------------------------------------------\\n```\\n\\nIt\'s equal to a vulnerable data structure like:\\n\\n```\\nstruct foo {\\n    uint64_t A;\\n    uint64_t secret;\\n    uint64_t B;\\n}\\n```\\n\\nwhere `foo.A` and `foo.B` are accessible by design, while `foo.secret` is not.\\n\\nIf an attacker somehow can access either A or B, he probably will have first or last 8-byte of the \\"inaccessible\\" secret in cache line. Then something bad may happen.\\n\\nSo, the most straightforward mitigation is to insert additional \\"guard bytes\\" before and after the sensitive data:\\n\\n```\\n ----------------------------------------------------------------------------------------------\\n| attacker data A | 8-byte guard | private key (inaccessible) | 8-byte guard | attacker data B |\\n ----------------------------------------------------------------------------------------------\\n```\\n\\nIt results in a modified structure like\\n\\n```\\nstruct foo {\\n    uint64_t A;\\n    (private) uint64_t _guard0;\\n    uint64_t secret;\\n    (private) uint64_t _guard1;\\n    uint64_t B;\\n}\\n```\\n\\nFurther investigation from Intel\'s code reveals that `_guard1` is not required. So it can be:\\n\\n```\\n     -------------------------------------------------------------------------------\\n    | attacker data A | 8-byte guard | private key (inaccessible) | attacker data B |\\n     -------------------------------------------------------------------------------\\n```\\n\\n## Intel\'s new allocator primitive\\n\\nIntel\'s guidance provides:\\n\\n(1) A C++ template `custom_alignment_aligned`\\n(2) A C function `sgx_get_aligned_ptr` and one of its parameter\'s type `struct align_req_t`\\n(3) A dynamic memory allocator function `sgx_aligned_malloc`\\n\\nAfter spending hours on Intel\'s code, I realized that these primitives are helping developers allocate a larger object which:\\n\\na) contains all fields of the original object.\\nb) adds \\"guard bytes\\" before and after each \\"specified secret field\\".\\nc) align each \\"specified secret field\\" on demand\\n\\n## Intel\'s patches on PSW enclaves\\n\\nThe most easy to understand example is from `psw/ae/pse_op/session_mgr.cpp`:\\n\\n```diff\\n@@ -417,7 +461,12 @@ pse_op_error_t pse_exchange_report(uint64_t tick,\\n {\\n     pse_op_error_t status = OP_SUCCESS;\\n     sgx_dh_session_t sgx_dh_session;\\n-    sgx_key_128bit_t aek;\\n+    //\\n+    // securely align aek\\n+    //\\n+    //sgx_key_128bit_t aek;\\n+    sgx::custom_alignment_aligned<sgx_key_128bit_t, sizeof(sgx_key_128bit_t), 0, sizeof(sgx_key_128bit_t)> oaek;\\n+    sgx_key_128bit_t& aek = oaek.v;\\n     sgx_dh_session_enclave_identity_t initiator_identity;\\n     cse_sec_prop_t * pcse_sec = NULL;\\n     secu_info_t* psec_info = NULL;\\n```\\n\\nThe template generates a larger struct `oaek`. Size of `sgx_key_128bit_t` is 16 bytes, and `sizeof(oaek)` equals to 32. And the offset of `oaek.v` is 8.\\n\\nAnd in the same file, another fix is:\\n\\n```diff\\n--- a/psw/ae/pse/pse_op/session_mgr.cpp\\n+++ b/psw/ae/pse/pse_op/session_mgr.cpp\\n@@ -29,21 +29,65 @@\\n  *\\n  */\\n\\n-\\n+#include <sgx_secure_align.h>\\n #include \\"utility.h\\"\\n #include \\"session_mgr.h\\"\\n #include \\"pse_op_t.h\\"\\n #include \\"sgx_dh.h\\"\\n\\n // ISV enclave <-> pse-op sessions\\n-static pse_session_t        g_session[SESSION_CONNECTION];\\n+//\\n+// securely align all ISV enclave - pse sessions\' secrets\\n+//\\n+static sgx::custom_alignment_aligned<pse_session_t, 16, __builtin_offsetof(pse_session_t, active.AEK), 16> og_session[SESSION_CONNECTION];\\n+//\\n+// following allows existing references to g_session[index]\\n+// to not have to change\\n+//\\n+class CSessions\\n+{\\n+public:\\n+    pse_session_t& operator[](int index) {\\n+        return og_session[index].v;\\n+    }\\n+};\\n+static CSessions g_session;\\n static uint32_t             g_session_count = 0;\\n```\\n\\nIt seems that the original global `g_session` array is vulnerabile to INTEL-SA-00219. So Intel created a new structure `CSessions` and reloaded the `[]` operator, and used `custom_alignment_aligned` template to create the array of guarded `CSessions`.\\n\\nWe can see some more complex samples in the same file, such as:\\n\\n```diff\\n // ephemeral session global variables\\n static uint8_t              g_nonce_r_pse[EPH_SESSION_NONCE_SIZE] = {0};      // nonce R(PSE) for ephemeral session establishment\\n static uint8_t              g_nonce_r_cse[EPH_SESSION_NONCE_SIZE] = {0};      // nonce R(CSE) for ephemeral session establishment\\n-static pairing_data_t       g_pairing_data;                       // unsealed pairing data\\n-eph_session_t               g_eph_session;                        // ephemeral session information\\n+\\n+//\\n+// securely align pairing data\\n+// Id_pse and Id_cse aren\'t secrets\\n+// I don\'t think pairingNonce is a secret and even if it is, we can\'t align\\n+// all of [mk, sk, pairingID, pairingNonce]\\n+//\\n+//static pairing_data_t       g_pairing_data;                       // unsealed pairing data\\n+static sgx::custom_alignment<pairing_data_t,\\n+    //__builtin_offsetof(pairing_data_t, secret_data.Id_pse), sizeof(((pairing_data_t*)0)->secret_data.Id_pse),\\n+    //__builtin_offsetof(pairing_data_t, secret_data.Id_cse), sizeof(((pairing_data_t*)0)->secret_data.Id_cse),\\n+    __builtin_offsetof(pairing_data_t, secret_data.mk), sizeof(((pairing_data_t*)0)->secret_data.mk),\\n+    __builtin_offsetof(pairing_data_t, secret_data.sk), sizeof(((pairing_data_t*)0)->secret_data.sk),\\n+    __builtin_offsetof(pairing_data_t, secret_data.pairingID), sizeof(((pairing_data_t*)0)->secret_data.pairingID)\\n+    //__builtin_offsetof(pairing_data_t, secret_data.pairingNonce), sizeof(((pairing_data_t*)0)->secret_data.pairingNonce)\\n+    > opairing_data;\\n+pairing_data_t& g_pairing_data = opairing_data.v;\\n+//\\n+// securely align pse - cse/psda ephemeral session secrets\\n+//\\n+//eph_session_t               g_eph_session;                        // ephemeral session information\\n+sgx::custom_alignment<eph_session_t,\\n+    __builtin_offsetof(eph_session_t, TSK), sizeof(((eph_session_t*)0)->TSK),\\n+    __builtin_offsetof(eph_session_t, TMK), sizeof(((eph_session_t*)0)->TMK)\\n+> oeph_session;\\n+//\\n+// this reference trick requires change to declaration\\n+// in other files, but still cleaner than changing\\n+// all references\\n+//\\n+eph_session_t& g_eph_session = oeph_session.v;\\n\\n /**\\n  * @brief Check the status of the ephemeral session\\n```\\n\\nTo understand it, let me expand `struct pairing_data_t` here:\\n\\n```\\n/* Pairing blob unsealed and usable inside of enclave*/\\ntypedef struct _pairing_data_t\\n{\\n    se_plaintext_pairing_data_t plaintext; // does not involved\\n    struct se_secret_pairing_data_t {\\n            SHA256_HASH         Id_pse;\\n            SHA256_HASH         Id_cse;\\n            SIGMA_MAC_KEY       mk;\\n            SIGMA_SECRET_KEY    sk;\\n            SIGMA_SECRET_KEY    pairingID;  // old_sk used for repairing check\\n            Nonce128_t          pairingNonce;\\n            EcDsaPrivKey        VerifierPrivateKey;\\n    } secret_data;\\n} pairing_data_t;\\n```\\n\\nThe patch seems to protect `mk`, `sk`, and `pairingID`, and all the other fields are commented out. What\'s more, this patch uses a **undocumented** template `sgx::custom_alignment` defined as:\\n\\n```cpp\\n    template <class T, std::size_t... OLs>\\n    using custom_alignment = custom_alignment_aligned<T, alignof(T), OLs...>;\\n```\\n\\n## Experiments on the undocument template\\n\\nTo test how the undocumented template work, I write the following codes:\\n\\n```cpp\\n    struct foo {\\n        uint64_t secret1[5];       // offset = 0\\n    };\\n\\n    typedef sgx::custom_alignment<foo, __builtin_offsetof(foo, secret1), sizeof(((foo*)0)->secret1)> AFOO;\\n\\n    printf(\\"=== Size of foo = %u ===\\\\n\\", sizeof(foo));                               // 40\\n    printf(\\"=== Size of bar = %u ===\\\\n\\", sizeof(AFOO));                              // 64\\n    printf(\\"=== offset of AROO.v = %u ===\\\\n\\", __builtin_offsetof(AFOO, v));          // 8\\n    printf(\\"=== offset of secret1 = %u ===\\\\n\\", __builtin_offsetof(AFOO, v.secret1)); // 8\\n```\\n\\nSo we can see that the structure of AROO is:\\n\\n```cpp\\nstruct AROO {\\n    uint64_t _padding_head[1]         // offset = 0, len = 8\\n    struct {\\n        uint64_t secret1[5];          // offset = 8, len = 40\\n    } v;\\n    uint64_t _padding_tail[2];        // offset = 40, len = 16\\n```\\n\\nIt seems the undocumented C++ template aligns `AROO` to the next level, and add 8-byte headings into it. If we add the second secret in `foo` like:\\n\\n```cpp\\n    struct foo {\\n        uint64_t secret1[5];       // offset = 0\\n        uint64_t secret2[1];       // offset = 40\\n    };\\n\\n    typedef sgx::custom_alignment<foo,\\n                __builtin_offsetof(foo, secret1), sizeof(((foo*)0)->secret1),\\n                __builtin_offsetof(foo, secret2), sizeof(((foo*)0)->secret2)\\n            > AFOO;\\n\\n    printf(\\"=== Size of foo = %u ===\\\\n\\", sizeof(foo));            // 48\\n    printf(\\"=== Size of bar = %u ===\\\\n\\", sizeof(AFOO));           // 64\\n    printf(\\"=== offset of AROO.v = %u ===\\\\n\\", __builtin_offsetof(AFOO, v));           // 8\\n    printf(\\"=== offset of AROO.v.secret1 = %u ===\\\\n\\", __builtin_offsetof(AFOO, v.secret1));           // 8\\n    printf(\\"=== offset of AROO.v.secret2 = %u ===\\\\n\\", __builtin_offsetof(AFOO, v.secret2));           // 48\\n```\\n\\nwe can see that the structure of AROO is:\\n\\n```cpp\\nstruct AROO {\\n    uint64_t _padding_head[1]         // offset = 0, len = 8\\n    struct {\\n        uint64_t secret1[5];          // offset = 8, len = 40\\n        uint64_t secret2[1];          // offset = 48, len = 8\\n    } v;\\n    uint64_t _padding_tail[1];        // offset = 56, len = 8\\n```\\n\\nIf we increase `secret2` to 16-bytes, it works well as usual. And the `_padding_tail` will have **zero length**. So does it means that *only extra heading is required for mitigation*? But it\'ll not compile if we make `secret2` 24-bytes, like:\\n\\n```c++\\n    struct foo {\\n        uint64_t secret1[5];       // offset = 0\\n        uint64_t secret2[3];       // offset = 40\\n    };\\n\\n    typedef sgx::custom_alignment<foo,\\n                __builtin_offsetof(foo, secret1), sizeof(((foo*)0)->secret1),\\n                __builtin_offsetof(foo, secret2), sizeof(((foo*)0)->secret2)\\n            > AFOO;\\n```\\n\\nGCC would terminate on:\\n\\n```\\nmake[1]: Entering directory \'/root/linux-sgx/SampleCode/Cxx11SGXDemo\'\\nIn file included from Enclave/TrustedLibrary/Libcxx.cpp:47:0:\\n/opt/sgxsdk/include/sgx_secure_align.h: In instantiation of \'struct sgx::__custom_alignment_internal::custom_alignment<ecall_lambdas_demo()::foo, 8ul, -1>\':\\nEnclave/TrustedLibrary/Libcxx.cpp:125:53:   required from here\\n/opt/sgxsdk/include/sgx_secure_align.h:123:13: error: static assertion failed: No viable offset\\n             static_assert(LZ > 0, \\"No viable offset\\");\\n             ^\\n/opt/sgxsdk/include/sgx_secure_align.h:125:48: error: size of array is negative\\n             char __no_secret_allowed_in_here[LZ];\\n                                                ^\\nMakefile:255: recipe for target \'Enclave/TrustedLibrary/Libcxx.o\' failed\\n```\\n\\nNothing changes if we switch to the original template `sgx::custom_alignment_aligned`. So I guess the template does not support structures:\\n\\n- contains secrets consecutively,  and\\n- the consecutive secrets\' size is larger than a certain number (not sure yet)\\n\\nIf we break down `secret1` and `secret2` by inserting something in the middle, the template works:\\n\\n```c++\\nstruct foo {\\n  uint64_t secret1[5];       // offset = 0\\n  char     dumb;             // offset = 40\\n  uint64_t secret2[3];       // offset = 48\\n};\\n\\ntypedef sgx::custom_alignment<foo,\\n__builtin_offsetof(foo, secret1), sizeof(((foo*)0)->secret1),\\n__builtin_offsetof(foo, secret2), sizeof(((foo*)0)->secret2)\\n  > AFOO;\\n\\nprintf(\\"=== Size of foo = %u ===\\\\n\\", sizeof(foo));            // 72\\nprintf(\\"=== Size of bar = %u ===\\\\n\\", sizeof(AFOO));           // 128\\nprintf(\\"=== offset of AROO.v = %u ===\\\\n\\", __builtin_offsetof(AFOO, v));           // 24\\nprintf(\\"=== offset of AROO.v.secret1 = %u ===\\\\n\\", __builtin_offsetof(AFOO, v.secret1));           // 24\\nprintf(\\"=== offset of AROO.v.secret2 = %u ===\\\\n\\", __builtin_offsetof(AFOO, v.secret2));           // 72\\n```\\n\\n## Changes/Actions required\\n\\nFrom Intel\'s usage, we can learn that:\\n\\n**Don\'t construct a sensitive data structure directly. Always allocate an aligned structure and fill it up later **\\n\\nIt means:\\n\\n* if you allocate something sensitive (e.g. keys in `sgx_key_128bit_t`) on stack/heap, you probably need to allocate another guarded structure first, and get a mutable reference to its inner data.\\n* if you want to make `sgx_key_128bit_t` as the type of return value, you can choose between (1) return a guarded structure, or (2) takes an additional argument of caller-allocated, mutuable reference of `sgx_key_128bit_t` and fill it.\\n\\n## Rust SGX provided primitive\\n\\n* We provided `AlignBox` as a replacement of `Box`\\n\\n  * `Box` is somewhat tricky because it always \\"initialize on stack first and copy to heap later\\". [copyless](https://github.com/kvark/copyless) provides a novel primitive to solve [it but it does not always effective](https://github.com/dingelish/realbox). To this end, we created `AlignBox` which guarantees \\"on-heap initialization\\" without copying any bits. Usage:\\n\\n    ```rust\\n    let heap_align_obj = AlignBox::<struct_align_t>::heap_init_with_req(|mut t| {\\n      t.key1 = [0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff];\\n      t.pad1 = [0x00; 16];\\n      t.key2 = [0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff];\\n      t.pad2 = [0x00; 16];\\n      t.key3 = [0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff];\\n      t.pad3 = [0x00; 16];\\n      t.key4 = [0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff];\\n      }, 16, &str_slice);\\n    assert!(heap_align_obj.is_some());\\n    ```\\n\\n* We provided aligned key type for each built-in key type. The layout are calculated by Intel\'s template.\\n\\n  * `sgx_align_key_128bit_t`\\n  * `sgx_align_mac_128bit_t`\\n  * `sgx_align_key_256bit_t`\\n  * `sgx_align_mac_256bit_t`\\n  * `sgx_align_ec256_dh_shared_t`\\n  * `sgx_align_ec256_private_t`\\n\\nWe modified `sgx_tcrypto`, `sgx_tse`, and `sgx_tdh` and use the above primitives for enhancement, following the above required changes. One sample is from `sgx_tcrypto`:\\n\\n```rust\\n+    let mut align_mac = sgx_align_mac_128bit_t::default();\\n+    let ret = unsafe {\\n+        sgx_rijndael128_cmac_msg(key as * const sgx_cmac_128bit_key_t,\\n+                                 src.as_ptr() as * const u8,\\n+                                 size as u32,\\n+                                 &mut align_mac.mac as * mut sgx_cmac_128bit_tag_t)\\n+    };\\n```\\n\\nWe allocate an aligned structure first, and then fill it up using Intel\'s crypto primitive later."},{"id":"/2019/08/20/apache-incubation-proposal","metadata":{"permalink":"/blog/2019/08/20/apache-incubation-proposal","source":"@site/blog/2019-08-20-apache-incubation-proposal.md","title":"Aapache Incubation Proposal","description":"","date":"2019-08-20T00:00:00.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"The Teaclave PPMC","key":null,"page":null}],"frontMatter":{"title":"Aapache Incubation Proposal","date":"2019-08-20T00:00:00.000Z","author":"The Teaclave PPMC"},"unlisted":false,"prevItem":{"title":"Mitigation of Intel-SA-00219 in Teaclave SGX SDK","permalink":"/blog/2019/12/03/mitigation-of-intel-sa-00219-in-teaclave-sgx-sdk"}},"content":"```\\nMesaTEE Apache Incubation Proposal\\n\\n= Abstract =\\n\\nMesaTEE is a framework for universal secure computing.\\n\\n= Proposal =\\n\\nMesaTEE is the next-gen solution to enable general computing service for\\nsecurity-critical scenarios. It will allow even the most sensitive data to\\nbe securely processed to enable offshore businesses without leakage.\\n\\nThe solution combines the advanced Hybrid Memory Safety (HMS) model and the\\npower of the Trusted Computing technologies (e.g., TPM) as well as the\\nConfidential Computing technologies (e.g., Intel SGX).\\n\\n  * Code base:\\n    * https://github.com/mesalock-linux/mesatee\\n    * https://github.com/baidu/rust-sgx-sdk\\n  * Website: https://mesatee.org\\n  * Documentation: https://mesatee.org/doc/mesatee_sdk/\\n\\n= Background =\\n\\nThe emerging technologies of big data analytics, machine learning, cloud/edge\\ncomputing, and blockchain are significantly boosting our productivity, but at\\nthe same time they are bringing new confidentiality and integrity concerns. On\\npublic cloud and blockchain, sensitive data like health and financial records\\nmay be consumed at runtime by untrusted computing processes running on\\ncompromised platforms; during in-house data exchange, confidential information\\nmay cross different clearance boundaries and possibly fall into the wrong hands;\\nalso not to mention the privacy issue arises in offshore data supply chains.\\n\\nAlthough the consequences of data breaching have been extensively elaborated, we\\nshould also note that proprietary computing algorithms themselves, such as AI\\nmodels, also need to be well protected. Once leaked, attackers can steal the\\nintellectual properties, or launch whitebox attacks and easily exploit the\\nweaknesses of the models.\\n\\nFacing all these risky scenarios, we are in desperate need of a trusted and\\nsecure mechanism, enabling us to protect both private data and proprietary\\ncomputing models during a migratable execution in potentially unsafe\\nenvironments, yet preserving functionalities, performance, compatibility, and\\nflexibility. MesaTEE is targeting to be, as we call it, the full \\"Universal\\nSecure Computing\\" stack, so it can help users resolve these runtime security\\nrisks.\\n\\nMesaTEE aims to promote the development of universal secure computing ecosystem\\nthrough open source and openness, to provide basic support for trust protection\\nfor the productivity revolution brought by big data and AI, to completely solve\\nthe data exchange or multi-party computing between departments/companies, to\\nenable privacy-crucial services such as financial and medical care using\\nblockchain/cloud services, and to convoy businesses that are closely related to\\nlife and safety such as autonomous driving. MesaTEE has been working closely\\nwith mainstream cloud computing/blockchain/chip vendors and\\nuniversities/research institutions to promote hardware TEE, software memory\\nsafety, and versatile computing services to create an internationally protected\\nand flexible secure computing framework. MesaTEE\u2019s open-source release will\\ngreatly accelerate the development of the next generation of big data business\\napplications, and it is also of great importance to promoting AI in all business\\nareas.\\n\\n= Rationale =\\n\\nMesaTEE stack redefines future AI and big data analytics by providing a trusted\\nand secure offshore computing environment. The confidentiality and privacy of\\ndata and models can be well protected with MesaTEE, even if data and model\\noriginate from different parties with no mutual trust. Moreover, the computing\\nplatform itself is not necessarily trusted either. The Trusted Computing Base\\n(TCB) can thus be largely reduced to MesaTEE framework alone. A detailed\\ndescription of target use-cases can be found at\\nhttps://github.com/mesalock-linux/mesatee/blob/master/docs/case_study.md.\\n\\nWe believe that Apache way of open source community empowers MesaTEE to attract\\na diverse set of contributors who can bring new ideas into the project.\\n\\n= Initial Goals =\\n\\n  * Move the existing codebase, website, documentation, and mailing lists to an\\n    Apache-hosted infrastructure.\\n  * Integrate with the Apache development process.\\n  * Ensure all dependencies are compliant with Apache License version 2.0.\\n  * Incrementally develop and release per Apache guidelines.\\n\\n= Current Status =\\n\\nThe MesaTEE project (and its sub-project Rust SGX SDK) has been designed and\\ndeveloped at Baidu since 2017, and was open sourced under the Apache License,\\nVersion 2.0 in 2019. The source code is currently hosted at github.com\\n(https://github.com/mesalock-linux/mesatee and\\nhttps://github.com/baidu/rust-sgx-sdk), which will seed the Apache git\\nrepository.\\n\\n== Meritocracy ==\\n\\nWe are fully committed to open, transparent, and meritocratic interactions with\\nour community. In fact, one of the primary motivations for us to enter the\\nincubation process is to be able to rely on Apache best practices that can\\nensure meritocracy. This will eventually help incorporate the best ideas back\\ninto the project and enable contributors to continue investing their time in the\\nproject. We already have some guidelines to help external contributors:\\n\\n  * https://github.com/mesalock-linux/mesatee/blob/master/docs/rust_guideline.md\\n  * https://github.com/mesalock-linux/mesatee/blob/master/docs/how_to_add_your_function.md\\n  * https://github.com/mesalock-linux/mesatee/blob/master/CODE_OF_CONDUCT.md\\n\\n== Community ==\\n\\nThe MesaTEE community is fairly young. Since our sub-project (Rust SGX SDK) was\\nopen sourced in 2017, we received many contributions from various companies and\\nindividual researchers (https://github.com/baidu/rust-sgx-sdk/pulls). Our\\nprimary goal during the incubation would be to grow the community and groom our\\nexisting active contributors for committers.\\n\\n== Core Developers ==\\n\\nCurrent core developers work at Baidu. We are confident that incubation will\\nhelp us grow a diverse community in an open and collaborative way.\\n\\n== Alignment ==\\n\\nMesaTEE is designed as a framework for universal secure computing. This is\\ncomplementary to the Apache\'s projects, providing a trusted and secure computing\\nframework.\\n\\nOur sincere hope is that being a part of the Apache foundation would enable us\\nto drive the future of the project in alignment with the other Apache projects\\nfor the benefit of thousands of organizations that already leverage these\\nprojects.\\n\\n= Known Risks =\\n\\n== Orphaned Products ==\\n\\nThe risk of abandonment of MesaTEE is low. MesaTEE has been incubated at Baidu\\nfor over two years. Baidu is committed to the further development of the project\\nand will keep investing resources towards the Apache processes and community\\nbuilding, during the incubation period.\\n\\n== Inexperience with Open Source ==\\n\\nEven though the initial committers are new to the Apache world, some have\\nconsiderable open source experience - Yu Ding, Yiming Jing, Mingshen Sun. We\\nhave been successfully managing the current open source community, answering\\nquestions, and taking feedback already. Moreover, we hope to obtain guidance and\\nmentorship from current ASF members to help us succeed in the incubation.\\n\\n== Length of Incubation ==\\n\\nWe expect the project to be in incubation for 2 years or less.\\n\\n== Homogenous Developers ==\\n\\nCurrently, the lead developers for MesaTEE are from Baidu. However, we have an\\nactive set of early contributors/collaborators from Alibaba and other companies,\\nwhich we hope will increase the diversity going forward. Once again, a primary\\nmotivation for the incubation is to facilitate this in the Apache way.\\n\\n== Reliance on Salaried Developers ==\\n\\nBoth the current committers and early contributors have several years of core\\nexpertise around designing trusted computing systems. Current committers are\\nvery passionate about the project and have already invested hundreds of hours\\ntowards helping and building the community. Thus, even with employer changes, we\\nexpect they will be able to actively engage in the project either because they\\nwill be working in similar areas even with newer employers or out of belief in\\nthe project.\\n\\n== Relationships with Other Apache Products ==\\n\\nTo the best of our knowledge, there are no directly competing projects with\\nMesaTEE that offer all of the feature set - memory safety, secure computing,\\nmulti-party computation, etc. However, some projects share similar goals, e.g.,\\nOpenWhisk which provides a serverless cloud platform. We are committed to open\\ncollaboration with such Apache projects and incorporating changes to MesaTEE or\\ncontributing patches to other projects, with the goal of making it easier for\\nthe community at large, to adopt these open source technologies.\\n\\n== Excessive Fascination with the Apache Brand ==\\n\\nThe Apache Brand is very respected. We are very honored to have the opportunity\\nto join ASF, with the understanding that its brand policies shall be respected.\\nAnd we hope Apache can help us build the ecosystem around MesaTEE and attract\\nmore developers.\\n\\n= Documentation =\\n\\n  * Detailed documentation: https://github.com/mesalock-linux/mesatee\\n  * MesaTEE SDK API documentation: https://mesatee.org/doc/mesatee_sdk/\\n\\n= Initial Source =\\n\\nThe codebase is currently hosted on Github:\\n\\n  * https://github.com/mesalock-linux/mesatee\\n  * https://github.com/baidu/rust-sgx-sdk\\n\\nDuring incubation, the codebase will be migrated to an Apache infrastructure.\\nThe source code of MesaTEE is under Apache version 2.0 License, while Rust SGX\\nSDK is under BSD 3-Clauses License.\\n\\n= Source and Intellectual Property Submission Plan =\\n\\nWe will work with the committers to get ICLAs signed. We will provide a Software\\nGrant Agreement from an authorized signer per\\nhttps://www.apache.org/licenses/software-grant-template.pdf\\n\\n= External Dependencies =\\n\\nMesaTEE directly depends on these third-party Rust crates:\\n\\n  * adler32, 1.0.3, BSD-3-Clause\\n  * aho-corasick, 0.7.4, Unlicense/MIT\\n  * array_tool, 1.0.3, MIT\\n  * assert_matches, 1.3.0, MIT/Apache-2.0\\n  * autocfg, 0.1.4, Apache-2.0/MIT\\n  * base64, 0.10.1, MIT/Apache-2.0\\n  * bincode, 1.1.4, MIT\\n  * bit-vec, 0.6.1, MIT/Apache-2.0\\n  * bitflags, 1.1.0, MIT/Apache-2.0\\n  * byteorder, 1.3.2, MIT/Unlicense\\n  * bytes, 0.5.0, MIT\\n  * cc, 1.0.37, MIT/Apache-2.0\\n  * cfg-if, 0.1.9, MIT/Apache-2.0\\n  * chrono, 0.4.7, MIT/Apache-2.0\\n  * color_quant, 1.0.1, MIT\\n  * crc32fast, 1.2.0, MIT\\n  * ctor, 0.1.9, Apache-2.0\\n  * deflate, 0.7.20, MIT/Apache-2.0\\n  * either, 1.5.2, MIT/Apache-2.0\\n  * env_logger, 0.6.2, MIT/Apache-2.0\\n  * erased-serde, 0.3.9, MIT\\n  * fnv, 1.0.6, Apache-2.0\\n  * getrandom, 0.1.6, MIT\\n  * ghost, 0.1.0, MIT/Apache-2.0\\n  * gif, 0.10.2, MIT/Apache-2.0\\n  * gzip-header, 0.3.0, MIT/Apache-2.0\\n  * half, 1.3.0, MIT/Apache-2.0\\n  * hashbrown, 0.3.1, Apache-2.0/MIT\\n  * heapsize, 0.4.2, MIT/Apache-2.0\\n  * hex, 0.3.2, MIT\\n  * http, 0.1.17, MIT/Apache-2.0\\n  * httparse, 1.3.4, MIT/Apache-2.0\\n  * humantime, 1.2.0, MIT/Apache-2.0\\n  * image, 0.21.0, MIT\\n  * inflate, 0.4.5, MIT\\n  * inventory, 0.1.3, MIT\\n  * inventory-impl, 0.1.3, MIT\\n  * iovec, 0.2.0, MIT/Apache-2.0\\n  * itertools, 0.8.0, MIT/Apache-2.0\\n  * itoa, 0.4.4, MIT\\n  * jpeg-decoder, 0.1.15, MIT\\n  * lazy_static, 1.3.0, MIT/Apache-2.0\\n  * libc, 0.2.59, MIT\\n  * linked-hash-map, 0.5.2, MIT/Apache-2.0\\n  * log, 0.4.7, MIT\\n  * lzw, 0.10.0, MIT/Apache-2.0\\n  * matrixmultiply, 0.2.2, MIT/Apache-2.0\\n  * md5, 0.6.1, Apache-2.0/MIT\\n  * memchr, 2.2.1, Unlicense/MIT\\n  * memory_units, 0.3.0, MPL-2.0\\n  * net2, 0.2.33, MIT/Apache-2.0\\n  * num, 0.2.0, MIT/Apache-2.0\\n  * num-bigint, 0.2.2, MIT/Apache-2.0\\n  * num-complex, 0.2.3, MIT/Apache-2.0\\n  * num-integer, 0.1.41, MIT/Apache-2.0\\n  * num-iter, 0.1.39, MIT/Apache-2.0\\n  * num-rational, 0.2.2, MIT/Apache-2.0\\n  * num-traits, 0.2.8, MIT/Apache-2.0\\n  * parity-wasm, 0.31.3, MIT/Apache-2.0\\n  * png, 0.14.1, MIT/Apache-2.0\\n  * proc-macro2, 0.4.30, MIT/Apache-2.0\\n  * profiler_builtins, 0.1.0, profiler_builtins\\n  * quick-error, 1.2.2, MIT/Apache-2.0\\n  * quote, 0.3.15, MIT\\n  * quote, 0.6.13, MIT\\n  * rand, 0.6.5, MIT/Apache-2.0\\n  * rand_core, 0.4.0, MIT/Apache-2.0\\n  * rand_hc, 0.1.0, MIT/Apache-2.0\\n  * rand_pcg, 0.1.2, MIT/Apache-2.0\\n  * rawpointer, 0.1.0, MIT/Apache-2.0\\n  * regex, 1.1.9, MIT/Apache-2.0\\n  * regex-syntax, 0.6.8, MIT/Apache-2.0\\n  * ring, 0.14.6, ISC-style\\n  * rulinalg, 0.4.2, MIT\\n  * rustls, 0.15.2, Apache-2.0/ISC/MIT\\n  * rusty-machine, 0.5.4, MIT\\n  * ryu, 1.0.0, Apache-2.0\\n  * sct, 0.5.0, Apache-2.0/ISC/MIT\\n  * serde, 1.0.94, MIT\\n  * serde_cbor, 0.10.0, MIT/Apache-2.0\\n  * serde_derive, 1.0.94, MIT\\n  * serde_json, 1.0.40, MIT\\n  * sha1, 0.6.0, BSD-3-Clause\\n  * sha2, 0.8.0, sha2\\n  * spin, 0.5.0, MIT\\n  * syn, 0.11.11, MIT\\n  * syn, 0.15.39, MIT\\n  * synom, 0.11.3, MIT/Apache-2.0\\n  * termcolor, 1.0.5, Unlicense\\n  * thread_local, 0.3.6, Apache-2.0/MIT\\n  * tiff, 0.3.1, MIT\\n  * toml, 0.5.1, MIT/Apache-2.0\\n  * typetag, 0.1.3, MIT\\n  * typetag-impl, 0.1.3, MIT\\n  * ucd-util, 0.1.3, MIT/Apache-2.0\\n  * unicode-xid, 0.0.4, MIT/Apache-2.0\\n  * unicode-xid, 0.1.0, MIT/Apache-2.0\\n  * utf8-ranges, 1.0.3, Unlicense/MIT\\n  * uuid, 0.7.4, Apache-2.0\\n  * wabt, 0.6.0, Apache-2.0\\n  * wasmi, 0.5.0, MIT/Apache-2.0\\n  * wasmi-validation, 0.1.0, MIT/Apache-2.0\\n  * webpki, 0.19.1, ISC-style\\n  * webpki-roots, 0.16.0, MPL-2.0\\n  * winapi, 0.3.7, MIT/Apache-2.0\\n  * winapi-i686-pc-windows-gnu, 0.4.0, MIT/Apache-2.0\\n  * winapi-util, 0.1.2, Unlicense/MIT\\n  * winapi-x86_64-pc-windows-gnu, 0.4.0, MIT/Apache-2.0\\n  * wincolor, 1.0.1, Unlicense/MIT\\n  * yasna, 0.3.1, MIT/Apache-2.0\\n\\nNote that this is not an exhaustive dependency list and only direct\\ndependencies\\nof MesaTEE\'s trusted libs are included.\\n\\n== Cryptography ==\\n\\nMesaTEE uses following cryptographic libraries:\\n\\n  * ring (https://github.com/briansmith/ring): a Rust crypto library based on\\nBoringSSL\\n  * rustls: a Rust TLS library\\n  * sgx_tcrypto in Intel SGX SDK (https://software.intel.com/en-us/sgx/sdk)\\n\\n= Required Resources =\\n\\n== Mailing lists ==\\n\\n  * private@mesatee.incubator.apache.org (with moderated subscriptions)\\n  * dev@mesatee.incubator.apache.org\\n  * commits@mesatee.incubator.apache.org\\n  * user@mesatee.incubator.apache.org\\n\\n== Git Repositories ==\\n\\nUpon entering incubation, we want to transfer the existing repos from\\nhttps://github.com/mesalock-linux/mesatee and\\nhttps://github.com/baidu/rust-sgx-sdk to Apache organization in GitHub like:\\n\\n  * https://github.com/apache/incubator-mesatee\\n  * https://github.com/apache/incubator-mesatee-rust-sgx-sdk\\n\\n== Issue Tracking ==\\n\\nMesaTEE currently uses GitHub to track issues. Would like to continue doing\\nso.\\n\\n== Continuous Integration Service ==\\n\\nMesaTEE currently uses self-hosted continuous integration (CI) service which can\\nhelp developers to automatically test commits. The CI service involves several\\nnodes which support Intel SGX. We would like to continue doing so.\\n\\n= Initial Committers =\\n\\nThe list is sorted alphabetically:\\n\\n  * Mingshen Sun <mssun at mesatee.org>\\n  * Pei Wang <wangpei at mesatee.org>\\n  * Rundong Zhou <rundongzhou at mesatee.org>\\n  * Tao Wei <lenx at mesatee.org>\\n  * Tongxin Li <litongxin at mesatee.org>\\n  * Yiming Jing <jingyiming at mesatee.org>\\n  * Yu Ding <d at mesatee.org>\\n  * Yulong Zhang <ylzhang at mesatee.org>\\n  * Zhaofeng Chen <zf at mesatee.org>\\n\\n= Sponsors =\\n\\n== Champion ==\\n\\n  * Zhijie Shen <zjshen@apache.org>\\n\\n== Nominated Mentors ==\\n\\n  * Jianyong Dai <daijy@apache.org>\\n  * Luciano Resende <lresende@apache.org>\\n  * Matt Sicker\\n  * Furkan Kamaci\\n\\n== Sponsoring Entity ==\\n\\nThe Incubator PMC\\n```"}]}}')}}]);