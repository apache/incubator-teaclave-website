"use strict";(self.webpackChunkapache_teaclave_incubating=self.webpackChunkapache_teaclave_incubating||[]).push([[8069],{1184:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>c});var n=s(4041);const r={},i=n.createContext(r);function a(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:t},e.children)}},4564:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"teaclave/tests/README","title":"Test Harness and Test Cases","description":"This directory contains all tests in Teaclave including unit tests, integration","source":"@site/docs/teaclave/tests/README.md","sourceDirName":"teaclave/tests","slug":"/docs/codebase/tests","permalink":"/docs/codebase/tests","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"permalink":"/docs/codebase/tests","slug":"/docs/codebase/tests"},"sidebar":"teaclave_sidebar","previous":{"title":"Teaclave Worker","permalink":"/docs/codebase/worker"},"next":{"title":"Third-Party Dependency Vendoring","permalink":"/docs/codebase/third-party"}}');var r=s(1085),i=s(1184);const a={permalink:"/docs/codebase/tests",slug:"/docs/codebase/tests"},c="Test Harness and Test Cases",o={},l=[{value:"Run Tests",id:"run-tests",level:2},{value:"Test Coverage",id:"test-coverage",level:2},{value:"Directory Structure",id:"directory-structure",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"test-harness-and-test-cases",children:"Test Harness and Test Cases"})}),"\n",(0,r.jsx)(t.p,{children:"This directory contains all tests in Teaclave including unit tests, integration\ntests, functional tests and some test fixtures."}),"\n",(0,r.jsx)(t.h2,{id:"run-tests",children:"Run Tests"}),"\n",(0,r.jsx)(t.p,{children:"To run all tests with our build system:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"$ make run-tests\n"})}),"\n",(0,r.jsx)(t.p,{children:"You can also run tests separately:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"$ make run-unit-tests\n$ make run-integration-tests\n$ make run-functional-tests    # this will start all services in the background automatically\n"})}),"\n",(0,r.jsx)(t.h2,{id:"test-coverage",children:"Test Coverage"}),"\n",(0,r.jsxs)(t.p,{children:["To generate a coverage report for tests, you can configure cmake with\n",(0,r.jsx)(t.code,{children:"-DCOV=ON"}),". Then build the platform and run all tests. At last, you need to run\n",(0,r.jsx)(t.code,{children:"make cov"})," to aggregate coverage results."]}),"\n",(0,r.jsx)(t.h2,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"unit"}),":\nUnit tests are small and more focused, testing one module in isolation at a\ntime, and can test private interfaces. This directory contains a test driver to\ntest individual units/components or private interfaces. Test cases of unit\ntests are placed along with source code."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"integration"}),":\nIntegration tests are entirely external to libraries, using only the public\ninterface and potentially exercising multiple modules per test. This directory\ncontains a test driver and test cases to test public interfaces in common\nlibraries."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"functional"}),":\nFunctional testing is a type of black-box testing. In Teaclave, the test cases\nare usually sent through RPC channel.\nThis directory contains a test driver and test cases for Teaclave services. To\nrun these tests, services need to be launched."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"fixtures"}),":\nTesting fixtures are some files and sample inputs/outputs for testing only."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"utils"}),":\nCommon utilities for test drivers."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);