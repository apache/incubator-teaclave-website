searchState.loadedDescShard("optee_utee", 0, "Concurrent accesses caused conflict.\nAccess privileges are not sufficient.\nInput data was of invalid format.\nInput parameters were invalid.\nOperation is not valid in the current state.\nThe system is busy working on something else.\nThe operation was canceled.\nCommunication with a remote party failed.\nObject corruption.\nPersistent object corruption.\nA list specifying general categories of TEE error and its …\nToo much data for the requested operation was passed.\nThe operation has been cancelled by an external event …\nNon-specific cause.\nThe requested data item is not found.\nMAC is invalid.\nExpected data was missing.\nThe requested operation should exist but is not yet …\nThe requested operation is valid but is not supported in …\nSystem ran out of resources.\nData overflow.\nA specialized <code>Result</code> type for TEE operations.\nA security fault was detected.\nThe supplied buffer is too short for the generated output.\nSignature is invalid.\nInsufficient space is available.\nObject storage is not available.\nPersistent object storage is not available.\nTrusted Application has panicked during the operation.\nThe TeeParams struct is used to manage the parameters for …\nThe persistent time has been set but may have been …\nThe persistent time has not been set.\nUnknown error.\nBuilds and opens the <code>TaSession</code>. Returns an error if the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new instance of an <code>Error</code> from a particular TEE …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvokes a command with the provided parameters using the …\nReturns the corresponding <code>ErrorKind</code> for this error.\nReturns corresponding error message of this error.\nCreates a new builder for the given TA UUID.\nReturns the origin of this error.\nReturns raw code of this error.\nThese methods allow the user to set the content at a …\nAttribute to declare the entry point of closing a session. …\nAttribute to declare the entry point of creating TA.\nAttribute to declare the entry point of destroying TA.\nAttribute to declare the entry point of invoking commands. …\nAttribute to declare the entry point of opening a session. …\nMacro for printing to the trace output, without a newline.\nMacro for printing to the trace output, with a newline. …\nThese functions allow for method-chaining to easily …\nSets the parameters to be passed during session opening.\nSets a custom timeout for the session opening.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn operation for conducting authenticated encryption / …\nAn operation is in progress.\nAE\nMac supported algorithm.\nMac supported algorithm.\nCipher supported algorithm.\nAE supported algorithm.\nMac supported algorithm.\nCipher supported algorithm.\nCipher supported algorithm.\nCipher supported algorithm.\nAE supported algorithm.\nCipher supported algorithm.\nAlgorithms that can be allocated as an crypto operation.\nAn operation for conducting asymmetric encryption …\nAsymmetric\nAsymmetric\nAn operation for conducting symmetric cipher encryption / …\nCipher\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nDecryption mode\nKey derivation mode\nAn operation for derive a shared key object.\nMac supported algorithm.\nMac supported algorithm.\nCipher supported algorithm.\nCipher supported algorithm.\nMac supported algorithm.\nMac supported algorithm.\nCipher supported algorithm.\nCipher supported algorithm.\nDeriveKey supported algorithm.\nAn operation for digest the message.\nDigest mode\nDigest\nDeriveKey supported algorithm.\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nSource: <code>IETF</code>, Generic: <code>N</code>, Size: 256 bits\nSource: <code>NIST</code>, Generic: <code>Y</code>, Size: 192 bits\nSource: <code>NIST</code>, Generic: <code>Y</code>, Size: 224 bits\nSource: <code>NIST</code>, Generic: <code>Y</code>, Size: 256 bits\nSource: <code>NIST</code>, Generic: <code>Y</code>, Size: 384 bits\nSource: <code>NIST</code>, Generic: <code>Y</code>, Size: 521 bits\nAsymmetric supported algorithm, can be applied with Sign …\nThis specification defines support for optional …\nWhere algId fully defines the required support, the …\nEncryption mode\nMac supported algorithm.\nMac supported algorithm.\nMac supported algorithm.\nMac supported algorithm.\nMac supported algorithm.\nMac supported algorithm.\nReserve for testing and validation\nReserved for GlobalPlatform compliance test applications.\nNothing is going on.\nDeriveKey\nAn operation for performing MAC (Message Authentication …\nMAC mode\nMac\nDigest supported algorithm.\nMac supported algorithm.\nA trait for a crypto operation to return its handle.\nDefine the supported crypto operation.\nAn opaque reference that identifies a particular …\nRepresent the information about a crypto information.\nRepresent the information about a crypto information which …\nSpecify one of the available cryptographic operations.\nEvery operation of AE, Asymmetric, Cipher, DeriveKey, …\nAn operation for generating random data.\nAsymmetric supported algorithm, can be applied with Encrypt…\nAsymmetric supported algorithm, can be applied with Encrypt…\nAsymmetric supported algorithm, can be applied with Encrypt…\nAsymmetric supported algorithm, can be applied with Encrypt…\nAsymmetric supported algorithm, can be applied with Encrypt…\nAsymmetric supported algorithm, can be applied with Encrypt…\nAsymmetric supported algorithm, can be applied with Encrypt…\nAsymmetric supported algorithm, can be applied with Encrypt…\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nAsymmetric supported algorithm, can be applied with Sign …\nDigest supported algorithm.\nDigest supported algorithm.\nDigest supported algorithm.\nDigest supported algorithm.\nDigest supported algorithm.\nSignature generation mode\nSignature verfication mode\nDeriveKey supported algorithm.\nAllocate a new cryptographic operation and sets the mode …\nFunction usage is similar to Digest::allocate.\nFunction usage is similar to Digest::allocate.\nFunction usage is similar to Digest::allocate.\nFunction usage is similar to Digest::allocate.\nFunction usage is similar to Digest::allocate. Currently …\nFinalize the MAC operation and compares the MAC with the …\nFinalize the MAC operation with a last chunk of message, …\nCopy an operation state to another operation. This also …\nFunction usage is similar to Digest::copy.\nFunction usage is similar to Digest::copy.\nFunction usage is similar to Digest::copy.\nFunction usage is similar to Digest::copy.\nFunction usage is similar to Digest::copy.\nDecrypt a message.\nProcess data that has not been processed by previous calls …\nTake one of the Asymmetric Derivation Operation Algorithm …\nFinalize the message digest operation and produces the …\nFinalize the cipher operation, processing data that has …\nEncrypt a message.\nProcess data that has not been processed by previous calls …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the <code>OperationInfo</code> struct based on the raw struct …\nReturn the <code>OperationInfoMultiple</code> struct based on the raw …\nGenerate random data.\nReturn the handle of an operation.\nReturn the characteristics of a Digest operation.\nFunction usage is similar to Digest::info.\nFunction usage is similar to Digest::info.\nFunction usage is similar to Digest::info.\nFunction usage is similar to Digest::info.\nFunction usage is similar to Digest::info.\nReturn the characteristics of a Digest operation with …\nFunction usage is similar to Digest::info_multiple.\nFunction usage is similar to Digest::info_multiple.\nFunction usage is similar to Digest::info_multiple.\nFunction usage is similar to Digest::info_multiple.\nFunction usage is similar to Digest::info_multiple.\nStart the symmetric cipher operation. The function should …\nInitialize a MAC opeartion. The The function should be …\nInitialize an AE opeartion. The operation must be in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ndetermine whether a combination of algId and element is …\nReturn the <code>keySize</code> field of the raw structure …\nReturn the <code>maxDataSize</code> field of the raw structure …\nCreate a Digest operation without any specific algorithm …\nCreate a Cipher operation without any specific algorithm …\nCreate a Mac operation without any specific algorithm or …\nCreate an AE operation without any specific algorithm or …\nCreate an Asymmetric operation without any specific …\nCreate a DeriveKey operation without any specific …\nReturn the raw struct <code>TEE_OperationInfoMultiple</code>.\nReset the operation state to the state after initial …\nFunction usage is similar to Digest::reset.\nFunction usage is similar to Digest::reset.\nProgram the key of Digest operation. That ids, it …\nFunction usage is similar to Cipher::set_key.\nFunction usage is similar to Cipher::set_key.\nFunction usage is similar to Cipher::set_key.\nFunction usage is similar to Cipher::set_key.\nInitialize an expisting operation with two keys for AesXts.\nSign a message digest.\nReturn the <code>size</code> field of the raw structure …\nAccumulate message data for hashing. The message does not …\nEncrypt or decrypt the source data.\nAccumulate data for a MAC calculation.\nAccumulate data for an Authentication Encryption operation.\nFeed a new chunk of Additional Authentication Data (AAD) …\nVerify a message digest.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvoke plugin with given request data, use when you want …\nConstruct a command with shared buffer up to capacity …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA setup parameter used for OP-TEE.\nA struct used for socket operations.\nA trait designed to accommodate various implementations of …\nA trait used for convenience; import it so that the code …\nA trait used for convenience; import it so that the code …\nA trait used for convenience; import it so that the code …\nAn adapter for TCP sockets in OP-TEE. Typically, it is not …\nA TcpStream that is compatible with OP-TEE.\nAn adapter for UDP sockets in OP-TEE. Typically, it is not …\nA UdpSocket that is compatible with OP-TEE.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new IPv4 target parameter using the address …\nConstruct a new IPv6 target parameter using the address …\ncreate a new connection, and then sending and receiving …\nrecv data, similar to <code>read</code> in <code>io::Read</code>\nsend data, similar to <code>write</code> in <code>io::Write</code>\na wrapper of <code>set_recv_timeout_in_milli</code>, similar to …\nset timeout of recv operation.\na wrapper of <code>set_send_timeout_in_milli</code>, similar to  …\nset timeout of send operation.\nThe object is opened with the read access right. This …\nThe object is opened with the write access right. This …\nThe object is opened with the write-meta access right. …\n128, 192, or 256 bits\nA general attribute (buffer or value) that can be used to …\nA buffer attribute.\nA value attribute.\nObject is corrupted.\nThe object can be used for decryption.\nThe object can be used for deriving a key.\n0 – All data is in the associated data stream.\nA set of flags that controls the access rights and sharing …\nThe data position is set to its current position plus …\nThe data position is set to the size of the object data …\nThe data position is set to offset bytes from the …\nAlways 64 bits including the parity bits. This gives an …\n128 or 192 bits including the parity bits. This gives …\nDiffie-Hellman base: <code>g</code>\nFrom 256 to 2048 bits, multiple of 8 bits.\nDiffie-Hellman prime number: <code>p</code>\nDiffie-Hellman public value: <code>x</code>\nDiffie-Hellman public value: <code>y</code>\nDiffie-Hellman subprime number: <code>q</code>\nDiffie-Hellman x bits: <code>l</code>\nDSA base: <code>g</code>\nSame as DsaPublicKey key size.\nDSA prime number: <code>p</code>\nDSA private value: <code>x</code>\nDepends on Algorithm:\nDSA public value: <code>y</code>\nDSA sub prime number: <code>q</code>\nThe object can be used for encryption.\nSet if the algorithm expects two keys to be set, using …\nThe object Attribute can be extracted.\nECC Curve algorithm\nECC private value: <code>d</code>\nECC public value: <code>x</code>\nECC public value: <code>y</code>\nBetween 160 and 521 bits. Conditional: Available only if …\nBetween 160 and 521 bits. Conditional: Available only if …\nBetween 160 and 521 bits. Conditional: Available only if …\nBetween 160 and 521 bits. Conditional: Available only if …\n256 bits. Conditional: Available only if …\nEd25519 private value\n256 bits. Conditional: Available only if …\nEd25519 public value\nA generic trait for an object (transient or persistent).\nMultiple of 8 bits, up to 4096 bits. This type is intended …\nA set of flags that defines Handle features.\nBetween 64 and 512 bits, multiple of 8 bits\nBetween 80 and 512 bits, multiple of 8 bits\nBetween 112 and 512 bits, multiple of 8 bits\nBetween 192 and 1024 bits, multiple of 8 bits\nBetween 256 and 1024 bits, multiple of 8 bits\nBetween 256 and 1024 bits, multiple of 8 bits\nFor a PersistentObject, always set.For a TransientObject, …\nFollowing two flags are for crypto operation handles:\nThe object can be used for mac operation.\nMiscellaneous constants.\nIf this flag is present and the object exists, then the …\nAn enumerator for PersistentObjects.\nAn opaque handle on an object.\nRepresent the characteristics of an object. This info can …\nSet for a PersistentObject.\nAn object identified by an Object Identifier and including …\nRSA coefficient: <code>iq</code>\nRSA exponent: <code>dp</code>\nRSA exponent: <code>dq</code>\nSame as RsaPublicKey key size.\nRSA modulus: <code>n</code>\nRSA prime number: <code>p</code>\nRSA prime number: <code>q</code>\nRSA private key exponent: <code>d</code>\nRSA public key exponent: <code>e</code>\nThe number of bits in the modulus. 256, 512, 768, 1024, …\nThe caller allows another handle on the object to be …\nThe caller allows another handle on the object to be …\nThe object can be used for signature.\nUsed for all secret keys for symmetric ciphers, MACs, and …\nMaximum offset of a data object.\nMaximum length of an object id.\nAn object containing attributes but no data stream, which …\nDefine types of TransientObject with predefined maximum …\nA set of flags that defines usages of data in TEE secure …\nThe object can be used for verification of a signature.\nIndicate the possible start offset when moving a data …\n256 bits. Conditional: Available only if …\nX25519 private value\n256 bits. Conditional: Available only if …\nX25519 public value\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nAllocate an object enumerator. Once an object enumerator …\nAllocate an uninitialized object, i.e. a container for …\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nMarks an object for deletion and closes the object.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nPopulates an uninitialized object handle with the …\nCreate an object with initial attributes and an initial …\nReturn the <code>dataSize</code> field of the raw structure …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nDeallocates all resources associated with an object …\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nForget the inner handle to prevent a double-free, this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nReturn an ObjectInfo struct based on the raw structure …\nPopulate a single attribute with a reference to a buffer.\nPopulate a single attribute with two u32 values.\nGenerates a random key or a key-pair and populates a …\nGet the next object in an enumeration and returns …\nReturn the handle of an object.\nReturn the characteristics of an object.\nReturn the characteristics of an object.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nCheck if current object is created with null handle.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nCreate an object with a null handle which points to …\nReturn the <code>objectSize</code> field of the raw structure …\nReturn the <code>objectType</code> field of the raw structure …\nOpen an existing persistent object.\nPopulate an uninitialized object container with object …\nReturn the raw struct <code>TEE_Attribute</code>.\nReturn the raw struct TEE_Attribute.\nReturn the raw struct TEE_Attribute.\nRead requested size from the data stream associate with …\nExtract one buffer attribute from an object. The attribute …\nExtract one buffer attribute from an object. The attribute …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nChanges the identifier of an object. The object SHALL have …\nReset an object enumerator handle to its initial state …\nReset the object to its initial state after allocation. If …\nRestrict the object usage flags of an object handle to …\nRestrict the object usage flags of an object handle to …\nSet the data position indicator associate with the object.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nStart the enumeration of all the PersistentObjects in a …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nChange the size of a data stream associate with the object.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nExtract one value attribute from an object. The attribute …\nExtract one value attribute from an object. The attribute …\nWrite the passed in buffer data into from the data stream …\nRepresents a TEE property key. The property key is used to …\nRepresents a TEE property set according to the TEE …\nRepresents a TEE property value. The property value can be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA millisecond resolution structure for saving the time.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe field for the milliseconds within this second.\nCreate a new empty time structure.\nRetrieve the current REE system time. The time is as …\nThe field for the seconds.\nSet the persistent time of the current Trusted Application.\nRetrieve the current system time. The origin of this …\nRetrieve the persisten time of the Trusted Application. …\nWait  for the specified number of milliseconds or wait …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA Universally Unique Resource Identifier (UUID) type as …\nConverts a uuid to a const raw <code>TEE_UUID</code> pointer.\nReturns the argument unchanged.\nCreates a <code>Uuid</code> using the supplied big-endian bytes.\nCreates a <code>Uuid</code> using a slice of supplied big-endian bytes.\nCalls <code>U::from(self)</code>.\nCreates a raw TEE client uuid object with specified …\nParses a Uuid from a string of hexadecimal digits with …")